{"version":3,"file":"286-ac6969dd5a59ac0584d5.js","mappings":"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","sources":["webpack://bradkim06/./node_modules/mermaid/dist/stateDiagram-v2-9765461d.js"],"sourcesContent":["function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { D as DEFAULT_DIAGRAM_DIRECTION, a as DEFAULT_STATE_TYPE, b as DIVIDER_TYPE, S as STMT_RELATION, c as STMT_STATE, e as DEFAULT_NESTED_DOC_DIR, p as parser, d as db, s as styles } from \"./styles-47a825a5.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select } from \"d3\";\nimport { l as log, g as getConfig, e as common } from \"./commonDb-573409be.js\";\nimport { r as render } from \"./index-5219d011.js\";\nimport { u as utils, k as configureSvgSize } from \"./utils-d622194a.js\";\nimport \"./mermaidAPI-3ae0f2f0.js\";\nimport \"stylis\";\nimport \"dompurify\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dayjs\";\nimport \"khroma\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-2e77835f.js\";\nimport \"./createText-1f5f8f92.js\";\nimport \"@khanacademy/simple-markdown\";\nimport \"./svgDraw-2526cba0.js\";\nimport \"@braintree/sanitize-url\";\nimport \"lodash-es/memoize.js\";\nvar SHAPE_STATE = \"rect\";\nvar SHAPE_STATE_WITH_DESC = \"rectWithTitle\";\nvar SHAPE_START = \"start\";\nvar SHAPE_END = \"end\";\nvar SHAPE_DIVIDER = \"divider\";\nvar SHAPE_GROUP = \"roundedWithTitle\";\nvar SHAPE_NOTE = \"note\";\nvar SHAPE_NOTEGROUP = \"noteGroup\";\nvar CSS_DIAGRAM = \"statediagram\";\nvar CSS_STATE = \"state\";\nvar CSS_DIAGRAM_STATE = \"\".concat(CSS_DIAGRAM, \"-\").concat(CSS_STATE);\nvar CSS_EDGE = \"transition\";\nvar CSS_NOTE = \"note\";\nvar CSS_NOTE_EDGE = \"note-edge\";\nvar CSS_EDGE_NOTE_EDGE = \"\".concat(CSS_EDGE, \" \").concat(CSS_NOTE_EDGE);\nvar CSS_DIAGRAM_NOTE = \"\".concat(CSS_DIAGRAM, \"-\").concat(CSS_NOTE);\nvar CSS_CLUSTER = \"cluster\";\nvar CSS_DIAGRAM_CLUSTER = \"\".concat(CSS_DIAGRAM, \"-\").concat(CSS_CLUSTER);\nvar CSS_CLUSTER_ALT = \"cluster-alt\";\nvar CSS_DIAGRAM_CLUSTER_ALT = \"\".concat(CSS_DIAGRAM, \"-\").concat(CSS_CLUSTER_ALT);\nvar PARENT = \"parent\";\nvar NOTE = \"note\";\nvar DOMID_STATE = \"state\";\nvar DOMID_TYPE_SPACER = \"----\";\nvar NOTE_ID = \"\".concat(DOMID_TYPE_SPACER).concat(NOTE);\nvar PARENT_ID = \"\".concat(DOMID_TYPE_SPACER).concat(PARENT);\nvar G_EDGE_STYLE = \"fill:none\";\nvar G_EDGE_ARROWHEADSTYLE = \"fill: #333\";\nvar G_EDGE_LABELPOS = \"c\";\nvar G_EDGE_LABELTYPE = \"text\";\nvar G_EDGE_THICKNESS = \"normal\";\nvar nodeDb = {};\nvar graphItemCount = 0;\n\nvar setConf = function setConf(cnf) {\n  var keys = Object.keys(cnf);\n\n  for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n    var key = _keys[_i];\n    cnf[key];\n  }\n};\n\nvar getClasses = function getClasses(text, diagramObj) {\n  log.trace(\"Extracting classes\");\n  diagramObj.db.clear();\n\n  try {\n    diagramObj.parser.parse(text);\n    diagramObj.db.extract(diagramObj.db.getRootDocV2());\n    return diagramObj.db.getClasses();\n  } catch (e) {\n    return e;\n  }\n};\n\nfunction getClassesFromDbInfo(dbInfoItem) {\n  if (dbInfoItem === void 0 || dbInfoItem === null) {\n    return \"\";\n  } else {\n    if (dbInfoItem.classes) {\n      return dbInfoItem.classes.join(\" \");\n    } else {\n      return \"\";\n    }\n  }\n}\n\nfunction stateDomId() {\n  var itemId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var typeSpacer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DOMID_TYPE_SPACER;\n  var typeStr = type !== null && type.length > 0 ? \"\".concat(typeSpacer).concat(type) : \"\";\n  return \"\".concat(DOMID_STATE, \"-\").concat(itemId).concat(typeStr, \"-\").concat(counter);\n}\n\nvar setupNode = function setupNode(g, parent, parsedItem, diagramStates, diagramDb, altFlag) {\n  var itemId = parsedItem.id;\n  var classStr = getClassesFromDbInfo(diagramStates[itemId]);\n\n  if (itemId !== \"root\") {\n    var shape = SHAPE_STATE;\n\n    if (parsedItem.start === true) {\n      shape = SHAPE_START;\n    }\n\n    if (parsedItem.start === false) {\n      shape = SHAPE_END;\n    }\n\n    if (parsedItem.type !== DEFAULT_STATE_TYPE) {\n      shape = parsedItem.type;\n    }\n\n    if (!nodeDb[itemId]) {\n      nodeDb[itemId] = {\n        id: itemId,\n        shape: shape,\n        description: common.sanitizeText(itemId, getConfig()),\n        classes: \"\".concat(classStr, \" \").concat(CSS_DIAGRAM_STATE)\n      };\n    }\n\n    var newNode = nodeDb[itemId];\n\n    if (parsedItem.description) {\n      if (Array.isArray(newNode.description)) {\n        newNode.shape = SHAPE_STATE_WITH_DESC;\n        newNode.description.push(parsedItem.description);\n      } else {\n        if (newNode.description.length > 0) {\n          newNode.shape = SHAPE_STATE_WITH_DESC;\n\n          if (newNode.description === itemId) {\n            newNode.description = [parsedItem.description];\n          } else {\n            newNode.description = [newNode.description, parsedItem.description];\n          }\n        } else {\n          newNode.shape = SHAPE_STATE;\n          newNode.description = parsedItem.description;\n        }\n      }\n\n      newNode.description = common.sanitizeTextOrArray(newNode.description, getConfig());\n    }\n\n    if (newNode.description.length === 1 && newNode.shape === SHAPE_STATE_WITH_DESC) {\n      newNode.shape = SHAPE_STATE;\n    }\n\n    if (!newNode.type && parsedItem.doc) {\n      log.info(\"Setting cluster for \", itemId, getDir(parsedItem));\n      newNode.type = \"group\";\n      newNode.dir = getDir(parsedItem);\n      newNode.shape = parsedItem.type === DIVIDER_TYPE ? SHAPE_DIVIDER : SHAPE_GROUP;\n      newNode.classes = newNode.classes + \" \" + CSS_DIAGRAM_CLUSTER + \" \" + (altFlag ? CSS_DIAGRAM_CLUSTER_ALT : \"\");\n    }\n\n    var nodeData = {\n      labelStyle: \"\",\n      shape: newNode.shape,\n      labelText: newNode.description,\n      // typeof newNode.description === 'object'\n      //   ? newNode.description[0]\n      //   : newNode.description,\n      classes: newNode.classes,\n      style: \"\",\n      //styles.style,\n      id: itemId,\n      dir: newNode.dir,\n      domId: stateDomId(itemId, graphItemCount),\n      type: newNode.type,\n      padding: 15 //getConfig().flowchart.padding\n\n    };\n    nodeData.centerLabel = true;\n\n    if (parsedItem.note) {\n      var noteData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTE,\n        labelText: parsedItem.note.text,\n        classes: CSS_DIAGRAM_NOTE,\n        // useHtmlLabels: false,\n        style: \"\",\n        // styles.style,\n        id: itemId + NOTE_ID + \"-\" + graphItemCount,\n        domId: stateDomId(itemId, graphItemCount, NOTE),\n        type: newNode.type,\n        padding: 15 //getConfig().flowchart.padding\n\n      };\n      var groupData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTEGROUP,\n        labelText: parsedItem.note.text,\n        classes: newNode.classes,\n        style: \"\",\n        // styles.style,\n        id: itemId + PARENT_ID,\n        domId: stateDomId(itemId, graphItemCount, PARENT),\n        type: \"group\",\n        padding: 0 //getConfig().flowchart.padding\n\n      };\n      graphItemCount++;\n      var parentNodeId = itemId + PARENT_ID;\n      g.setNode(parentNodeId, groupData);\n      g.setNode(noteData.id, noteData);\n      g.setNode(itemId, nodeData);\n      g.setParent(itemId, parentNodeId);\n      g.setParent(noteData.id, parentNodeId);\n      var from = itemId;\n      var to = noteData.id;\n\n      if (parsedItem.note.position === \"left of\") {\n        from = noteData.id;\n        to = itemId;\n      }\n\n      g.setEdge(from, to, {\n        arrowhead: \"none\",\n        arrowType: \"\",\n        style: G_EDGE_STYLE,\n        labelStyle: \"\",\n        classes: CSS_EDGE_NOTE_EDGE,\n        arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n        labelpos: G_EDGE_LABELPOS,\n        labelType: G_EDGE_LABELTYPE,\n        thickness: G_EDGE_THICKNESS\n      });\n    } else {\n      g.setNode(itemId, nodeData);\n    }\n  }\n\n  if (parent && parent.id !== \"root\") {\n    log.trace(\"Setting node \", itemId, \" to be child of its parent \", parent.id);\n    g.setParent(itemId, parent.id);\n  }\n\n  if (parsedItem.doc) {\n    log.trace(\"Adding nodes children \");\n    setupDoc(g, parsedItem, parsedItem.doc, diagramStates, diagramDb, !altFlag);\n  }\n};\n\nvar setupDoc = function setupDoc(g, parentParsedItem, doc, diagramStates, diagramDb, altFlag) {\n  log.trace(\"items\", doc);\n  doc.forEach(function (item) {\n    switch (item.stmt) {\n      case STMT_STATE:\n        setupNode(g, parentParsedItem, item, diagramStates, diagramDb, altFlag);\n        break;\n\n      case DEFAULT_STATE_TYPE:\n        setupNode(g, parentParsedItem, item, diagramStates, diagramDb, altFlag);\n        break;\n\n      case STMT_RELATION:\n        {\n          setupNode(g, parentParsedItem, item.state1, diagramStates, diagramDb, altFlag);\n          setupNode(g, parentParsedItem, item.state2, diagramStates, diagramDb, altFlag);\n          var edgeData = {\n            id: \"edge\" + graphItemCount,\n            arrowhead: \"normal\",\n            arrowTypeEnd: \"arrow_barb\",\n            style: G_EDGE_STYLE,\n            labelStyle: \"\",\n            label: common.sanitizeText(item.description, getConfig()),\n            arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n            labelpos: G_EDGE_LABELPOS,\n            labelType: G_EDGE_LABELTYPE,\n            thickness: G_EDGE_THICKNESS,\n            classes: CSS_EDGE\n          };\n          g.setEdge(item.state1.id, item.state2.id, edgeData, graphItemCount);\n          graphItemCount++;\n        }\n        break;\n    }\n  });\n};\n\nvar getDir = function getDir(parsedItem) {\n  var defaultDir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_NESTED_DOC_DIR;\n  var dir = defaultDir;\n\n  if (parsedItem.doc) {\n    for (var i = 0; i < parsedItem.doc.length; i++) {\n      var parsedItemDoc = parsedItem.doc[i];\n\n      if (parsedItemDoc.stmt === \"dir\") {\n        dir = parsedItemDoc.value;\n      }\n    }\n  }\n\n  return dir;\n};\n\nvar draw = function draw(text, id, _version, diag) {\n  log.info(\"Drawing state diagram (v2)\", id);\n  nodeDb = {};\n  var dir = diag.db.getDirection();\n\n  if (dir === void 0) {\n    dir = DEFAULT_DIAGRAM_DIRECTION;\n  }\n\n  var _getConfig = getConfig(),\n      securityLevel = _getConfig.securityLevel,\n      conf = _getConfig.state;\n\n  var nodeSpacing = conf.nodeSpacing || 50;\n  var rankSpacing = conf.rankSpacing || 50;\n  log.info(diag.db.getRootDocV2());\n  diag.db.extract(diag.db.getRootDocV2());\n  log.info(diag.db.getRootDocV2());\n  var diagramStates = diag.db.getStates();\n  var g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: getDir(diag.db.getRootDocV2()),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function () {\n    return {};\n  });\n  setupNode(g, void 0, diag.db.getRootDocV2(), diagramStates, diag.db, true);\n  var sandboxElement;\n\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n\n  var root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  var svg = root.select(\"[id=\\\"\".concat(id, \"\\\"]\"));\n  var element = root.select(\"#\" + id + \" g\");\n  render(element, g, [\"barb\"], CSS_DIAGRAM, id);\n  var padding = 8;\n  utils.insertTitle(svg, \"statediagramTitleText\", conf.titleTopMargin, diag.db.getDiagramTitle());\n  var bounds = svg.node().getBBox();\n  var width = bounds.width + padding * 2;\n  var height = bounds.height + padding * 2;\n  svg.attr(\"class\", CSS_DIAGRAM);\n  var svgBounds = svg.node().getBBox();\n  configureSvgSize(svg, height, width, conf.useMaxWidth);\n  var vBox = \"\".concat(svgBounds.x - padding, \" \").concat(svgBounds.y - padding, \" \").concat(width, \" \").concat(height);\n  log.debug(\"viewBox \".concat(vBox));\n  svg.attr(\"viewBox\", vBox);\n  var labels = document.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n\n  var _iterator = _createForOfIteratorHelper(labels),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var label = _step.value;\n      var dim = label.getBBox();\n      var rect = document.createElementNS(\"http://www.w3.org/2000/svg\", SHAPE_STATE);\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n\nvar renderer = {\n  setConf: setConf,\n  getClasses: getClasses,\n  draw: draw\n};\nvar diagram = {\n  parser: parser,\n  db: db,\n  renderer: renderer,\n  styles: styles,\n  init: function init(cnf) {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport { diagram };"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","SHAPE_STATE","SHAPE_STATE_WITH_DESC","CSS_DIAGRAM","CSS_DIAGRAM_STATE","concat","CSS_EDGE","CSS_EDGE_NOTE_EDGE","CSS_DIAGRAM_NOTE","CSS_DIAGRAM_CLUSTER","CSS_DIAGRAM_CLUSTER_ALT","PARENT","NOTE","DOMID_STATE","DOMID_TYPE_SPACER","NOTE_ID","PARENT_ID","G_EDGE_STYLE","G_EDGE_ARROWHEADSTYLE","G_EDGE_LABELTYPE","G_EDGE_THICKNESS","nodeDb","graphItemCount","stateDomId","itemId","arguments","undefined","counter","type","typeSpacer","typeStr","setupNode","g","parent","parsedItem","diagramStates","diagramDb","altFlag","dbInfoItem","id","classStr","classes","join","shape","start","description","newNode","push","doc","l","getDir","dir","nodeData","labelStyle","labelText","style","domId","padding","note","noteData","text","groupData","parentNodeId","setNode","setParent","to","position","setEdge","arrowhead","arrowType","arrowheadStyle","labelpos","labelType","thickness","setupDoc","parentParsedItem","forEach","item","stmt","S","state1","state2","edgeData","arrowTypeEnd","label","defaultDir","parsedItemDoc","renderer","setConf","cnf","_i","_keys","keys","getClasses","diagramObj","db","clear","parser","parse","extract","getRootDocV2","draw","_version","diag","getDirection","D","_getConfig","securityLevel","conf","state","nodeSpacing","rankSpacing","sandboxElement","getStates","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","root","nodes","contentDocument","body","svg","select","element","r","u","titleTopMargin","getDiagramTitle","bounds","node","getBBox","width","height","attr","svgBounds","useMaxWidth","vBox","x","y","_step","_iterator","document","querySelectorAll","dim","rect","createElementNS","setAttribute","insertBefore","firstChild","diagram","p","d","styles","init","arrowMarkerAbsolute"],"sourceRoot":""}