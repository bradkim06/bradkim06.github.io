{"version":3,"sources":["webpack:///./src/components/Footer.tsx","webpack:///./src/components/Pagination.tsx","webpack:///./src/templates/index.tsx"],"names":["Footer","css","outer","SiteFooter","inner","SiteFooterContent","className","to","config","title","Date","getFullYear","footer","SiteFooterNav","setLightness","colors","darkgrey","navCss","darken","Pagination","currentPage","numPages","isFirst","isLast","prevPage","nextPage","rel","String","fromCharCode","Array","from","length","_","i","key","pageQuery","HomePosts","IndexPage","props","width","height","data","header","childImageSharp","fixed","Helmet","lang","name","content","description","property","siteUrl","src","facebook","googleSiteVerification","twitter","split","toString","Wrapper","SiteHeader","SiteHeaderStyles","style","backgroundImage","SiteNav","isHome","id","SiteMain","Posts","PostFeed","allMdx","edges","map","post","index","node","frontmatter","draft","PostCard","fields","slug","large","allMarkdownRemark","children","pageContext"],"mappings":"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","file":"component---src-templates-index-tsx-2ef1b9380e1006fd2865.js","sourcesContent":["import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer css={[outer, SiteFooter]}>\n      <div css={[inner, SiteFooterContent]}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}{' '}\n          {config.footer && (\n            <Link to=\"/\">\n              | {config.footer}\n            </Link>\n          )}\n        </section>\n        <SiteFooterNav>\n          <Link to=\"/\">Latest Posts</Link>\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n  background: ${setLightness('0.0015', colors.darkgrey)};\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-of-type {\n      margin-left: 0;\n    }\n  }\n`;\n\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { darken } from 'polished';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n}\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : '/' + (currentPage - 1);//(currentPage - 1).toString();\n  const nextPage = '/' + (currentPage + 1);\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`/${i === 0 ? '' : i + 1}`}>\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\n    background: #fff;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n    margin: 0 4px;\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n    border-radius: 6px;\n    margin-bottom: 5px;\n    min-width: 50px;\n\n    &.active {\n      -webkit-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      -moz-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { graphql } from 'gatsby';\nimport { FixedObject } from 'gatsby-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/core';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n\tinner,\n\touter,\n\tPostFeed,\n\tPosts,\n\tSiteDescription,\n\tSiteHeader,\n\tSiteHeaderContent,\n\tSiteMain,\n\tSiteTitle,\n\tSiteHeaderStyles,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { PageContext } from './post';\n\nexport interface IndexProps {\n\tpageContext: {\n\t\tcurrentPage: number;\n\t\tnumPages: number;\n\t};\n\tdata: {\n\t\tlogo: {\n\t\t\tchildImageSharp: {\n\t\t\t\tfixed: FixedObject;\n\t\t\t};\n\t\t};\n\t\theader: {\n\t\t\tchildImageSharp: {\n\t\t\t\tfixed: FixedObject;\n\t\t\t};\n\t\t};\n\t\tallMarkdownRemark: {\n\t\t\tedges: Array<{\n\t\t\t\tnode: PageContext;\n\t\t\t}>;\n\t\t};\n\t\tallMdx: {\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n\t};\n}\n\nconst IndexPage: React.FC<IndexProps> = props => {\n\tconst { width, height } = props.data.header.childImageSharp.fixed;\n\n\treturn (\n\t\t<IndexLayout css={HomePosts}>\n\t\t\t<Helmet>\n\t\t\t\t<html lang={config.lang} />\n\t\t\t\t<title>{config.title}</title>\n\t\t\t\t<meta name=\"description\" content={config.description} />\n\t\t\t\t<meta property=\"og:site_name\" content={config.title} />\n\t\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t\t<meta property=\"og:title\" content={config.title} />\n\t\t\t\t<meta property=\"og:description\" content={config.description} />\n\t\t\t\t<meta property=\"og:url\" content={config.siteUrl} />\n\t\t\t\t<meta\n\t\t\t\t\tproperty=\"og:image\"\n\t\t\t\t\tcontent={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n\t\t\t\t/>\n\t\t\t\t{config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n\t\t\t\t{config.googleSiteVerification && (\n\t\t\t\t\t<meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n\t\t\t\t)}\n\t\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\n\t\t\t\t<meta name=\"twitter:title\" content={config.title} />\n\t\t\t\t<meta name=\"twitter:description\" content={config.description} />\n\t\t\t\t<meta name=\"twitter:url\" content={config.siteUrl} />\n\t\t\t\t<meta\n\t\t\t\t\tname=\"twitter:image\"\n\t\t\t\t\tcontent={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n\t\t\t\t/>\n\t\t\t\t{config.twitter && (\n\t\t\t\t\t<meta\n\t\t\t\t\t\tname=\"twitter:site\"\n\t\t\t\t\t\tcontent={`@${config.twitter.split('https://twitter.com/')[1]}`}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<meta property=\"og:image:width\" content={width.toString()} />\n\t\t\t\t<meta property=\"og:image:height\" content={height.toString()} />\n\t\t\t</Helmet>\n\t\t\t<Wrapper>\n\t\t\t\t<div\n\t\t\t\t\tcss={[outer, SiteHeader, SiteHeaderStyles]}\n\t\t\t\t\tclassName=\"site-header-background\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url('${props.data.header.childImageSharp.fixed.src}')`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div css={inner}>\n\t\t\t\t\t\t<SiteNav isHome />\n\t\t\t\t\t\t<SiteHeaderContent className=\"site-header-conent\">\n\t\t\t\t\t\t\t<SiteTitle className=\"site-title\">\n\t\t\t\t\t\t\t\t{config.title}\n\t\t\t\t\t\t\t</SiteTitle>\n\t\t\t\t\t\t</SiteHeaderContent>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<main id=\"site-main\" css={[SiteMain, outer]}>\n\t\t\t\t\t<div css={[inner, Posts]}>\n\t\t\t\t\t\t<div css={[PostFeed]}>\n\t\t\t\t\t\t\t{props.data.allMdx.edges.map((post, index) => {\n\t\t\t\t\t\t\t\t// filter out drafts in production\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t(post.node.frontmatter.draft !== true ||\n\t\t\t\t\t\t\t\t\t\tprocess.env.NODE_ENV !== 'production') && (\n\t\t\t\t\t\t\t\t\t\t\t<PostCard key={post.node.fields.slug} post={post.node} large={index === 0} />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{props.data.allMarkdownRemark.edges.map((post, index) => {\n\t\t\t\t\t\t\t\t// filter out drafts in production\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t(post.node.frontmatter.draft !== true ||\n\t\t\t\t\t\t\t\t\t\tprocess.env.NODE_ENV !== 'production') && (\n\t\t\t\t\t\t\t\t\t\t\t<PostCard key={post.node.fields.slug} post={post.node} large={index === 0} />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t{props.children}\n\t\t\t\t{props.pageContext.numPages > 1 && (\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tcurrentPage={props.pageContext.currentPage}\n\t\t\t\t\t\tnumPages={props.pageContext.numPages}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Footer />\n\t\t\t</Wrapper>\n\t\t</IndexLayout>\n\t);\n};\n\nexport const pageQuery = graphql`\nquery blogPageQuery($skip: Int!) {\n\tlogo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n\t\tchildImageSharp {\n\t\t\t# Specify the image processing specifications right in the query.\n\t\t\t\t# Makes it trivial to update as your page's design changes.\n\t\t\t\tfixed {\n\t\t\t\t\t...GatsbyImageSharpFixed\n\t\t\t\t}\n\t\t}\n\t}\n\theader: file(relativePath: { eq: \"img/blog-cover.png\" }) {\n\t\tchildImageSharp {\n\t\t\t# Specify the image processing specifications right in the query.\n\t\t\t\t# Makes it trivial to update as your page's design changes.\n\t\t\t\tfixed(width: 2000, quality: 100) {\n\t\t\t\t\t...GatsbyImageSharpFixed\n\t\t\t\t}\n\t\t}\n\t}\n\tallMarkdownRemark(\n\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\tfilter: { frontmatter: { draft: { ne: true } } }\n\t\tlimit: 8\n\t\tskip: $skip\n\t) {\n\t\tedges {\n\t\t\tnode {\n\t\t\t\ttimeToRead\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tdate\n\t\t\t\t\ttags\n\t\t\t\t\tdraft\n\t\t\t\t\texcerpt\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tfluid(maxWidth: 3720) {\n\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tauthor {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tbio\n\t\t\t\t\t\tavatar {\n\t\t\t\t\t\t\tchildren {\n\t\t\t\t\t\t\t\t... on ImageSharp {\n\t\t\t\t\t\t\t\t\tfluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n\t\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt\n\t\t\t\tfields {\n\t\t\t\t\tlayout\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tallMdx (\n\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\tfilter: { frontmatter: { draft: { ne: true } } }\n\t\tlimit: 8\n\t\tskip: $skip\n\t){\n\t\tedges {\n\t\t\tnode {\n\t\t\t\ttimeToRead\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tdate\n\t\t\t\t\ttags\n\t\t\t\t\tdraft\n\t\t\t\t\tauthor {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tbio\n\t\t\t\t\t\tavatar {\n\t\t\t\t\t\t\tchildren {\n\t\t\t\t\t\t\t\t... on ImageSharp {\n\t\t\t\t\t\t\t\t\tfluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n\t\t\t\t\t\t\t\t\t\tbase64\n\t\t\t\t\t\t\t\t\t\ttracedSVG\n\t\t\t\t\t\t\t\t\t\tsrcWebp\n\t\t\t\t\t\t\t\t\t\tsrcSetWebp\n\t\t\t\t\t\t\t\t\t\toriginalImg\n\t\t\t\t\t\t\t\t\t\toriginalName\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt\n\t\t\t\tfields {\n\t\t\t\t\tlayout\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n`;\n\nconst HomePosts = css`\n@media (min-width: 795px) {\n\t.post-card-large {\n\t\tflex: 1 1 100%;\n\t\tflex-direction: row;\n\t\tpadding-bottom: 40px;\n\t\tmin-height: 280px;\n\t\tborder-top: 0;\n\t}\n\n\t.post-card-large .post-card-title {\n\t\tmargin-top: 0;\n\t\tfont-size: 3.2rem;\n\t}\n\n\t.post-card-large:not(.no-image) .post-card-header {\n\t\tmargin-top: 0;\n\t}\n\n\t.post-card-large .post-card-image-link {\n\t\tposition: relative;\n\t\tflex: 1 1 auto;\n\t\tmargin-bottom: 0;\n\t\tmin-height: 380px;\n\t}\n\n\t.post-card-large .post-card-image {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.post-card-large .post-card-content {\n\t\tflex: 0 1 361px;\n\t\tjustify-content: center;\n\t}\n\n\t.post-card-large .post-card-title {\n\t\tmargin-top: 0;\n\t\tfont-size: 3.2rem;\n\t}\n\n\t.post-card-large .post-card-content-link {\n\t\tpadding: 0 0 0 40px;\n\t}\n\n\t.post-card-large .post-card-meta {\n\t\tpadding: 0 0 0 40px;\n\t}\n\n\t.post-card-large .post-card-excerpt p {\n\t\tmargin-bottom: 1.5em;\n\t\tfont-size: 1.8rem;\n\t\tline-height: 1.5em;\n\t}\n}\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}