{"version":3,"file":"146-941d3aae899859d390ea.js","mappings":"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","sources":["webpack://bradkim06/./node_modules/layout-base/layout-base.js","webpack://bradkim06/./node_modules/mermaid/dist/mindmap-definition-fc14e90a.js","webpack://bradkim06/./node_modules/cose-base/cose-base.js","webpack://bradkim06/./node_modules/cytoscape-cose-bilkent/cytoscape-cose-bilkent.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"layoutBase\"] = factory();else root[\"layoutBase\"] = factory();\n})(this, function () {\n  return /******/function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/if (installedModules[moduleId]) {\n        /******/return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = installedModules[moduleId] = {\n        /******/i: moduleId,\n        /******/l: false,\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n      /******/\n      /******/ // Flag the module as loaded\n      /******/\n      module.l = true;\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // identity function for calling harmony imports with the correct context\n    /******/\n    __webpack_require__.i = function (value) {\n      return value;\n    };\n    /******/\n    /******/ // define getter function for harmony exports\n    /******/\n    __webpack_require__.d = function (exports, name, getter) {\n      /******/if (!__webpack_require__.o(exports, name)) {\n        /******/Object.defineProperty(exports, name, {\n          /******/configurable: false,\n          /******/enumerable: true,\n          /******/get: getter\n          /******/\n        });\n        /******/\n      }\n      /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    __webpack_require__.n = function (module) {\n      /******/var getter = module && module.__esModule ? /******/function getDefault() {\n        return module['default'];\n      } : /******/function getModuleExports() {\n        return module;\n      };\n      /******/\n      __webpack_require__.d(getter, 'a', getter);\n      /******/\n      return getter;\n      /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/\n    __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(__webpack_require__.s = 26);\n    /******/\n  }\n  /************************************************************************/\n  /******/([(/* 0 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function LayoutConstants() {}\n\n    /**\r\n     * Layout Quality: 0:draft, 1:default, 2:proof\r\n     */\n    LayoutConstants.QUALITY = 1;\n\n    /**\r\n     * Default parameters\r\n     */\n    LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED = false;\n    LayoutConstants.DEFAULT_INCREMENTAL = false;\n    LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT = true;\n    LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT = false;\n    LayoutConstants.DEFAULT_ANIMATION_PERIOD = 50;\n    LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES = false;\n\n    // -----------------------------------------------------------------------------\n    // Section: General other constants\n    // -----------------------------------------------------------------------------\n    /*\r\n     * Margins of a graph to be applied on bouding rectangle of its contents. We\r\n     * assume margins on all four sides to be uniform.\r\n     */\n    LayoutConstants.DEFAULT_GRAPH_MARGIN = 15;\n\n    /*\r\n     * Whether to consider labels in node dimensions or not\r\n     */\n    LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = false;\n\n    /*\r\n     * Default dimension of a non-compound node.\r\n     */\n    LayoutConstants.SIMPLE_NODE_SIZE = 40;\n\n    /*\r\n     * Default dimension of a non-compound node.\r\n     */\n    LayoutConstants.SIMPLE_NODE_HALF_SIZE = LayoutConstants.SIMPLE_NODE_SIZE / 2;\n\n    /*\r\n     * Empty compound node size. When a compound node is empty, its both\r\n     * dimensions should be of this value.\r\n     */\n    LayoutConstants.EMPTY_COMPOUND_NODE_SIZE = 40;\n\n    /*\r\n     * Minimum length that an edge should take during layout\r\n     */\n    LayoutConstants.MIN_EDGE_LENGTH = 1;\n\n    /*\r\n     * World boundaries that layout operates on\r\n     */\n    LayoutConstants.WORLD_BOUNDARY = 1000000;\n\n    /*\r\n     * World boundaries that random positioning can be performed with\r\n     */\n    LayoutConstants.INITIAL_WORLD_BOUNDARY = LayoutConstants.WORLD_BOUNDARY / 1000;\n\n    /*\r\n     * Coordinates of the world center\r\n     */\n    LayoutConstants.WORLD_CENTER_X = 1200;\n    LayoutConstants.WORLD_CENTER_Y = 900;\n    module.exports = LayoutConstants;\n\n    /***/\n  }), (/* 1 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LGraphObject = __webpack_require__(2);\n    var IGeometry = __webpack_require__(8);\n    var IMath = __webpack_require__(9);\n    function LEdge(source, target, vEdge) {\n      LGraphObject.call(this, vEdge);\n      this.isOverlapingSourceAndTarget = false;\n      this.vGraphObject = vEdge;\n      this.bendpoints = [];\n      this.source = source;\n      this.target = target;\n    }\n    LEdge.prototype = Object.create(LGraphObject.prototype);\n    for (var prop in LGraphObject) {\n      LEdge[prop] = LGraphObject[prop];\n    }\n    LEdge.prototype.getSource = function () {\n      return this.source;\n    };\n    LEdge.prototype.getTarget = function () {\n      return this.target;\n    };\n    LEdge.prototype.isInterGraph = function () {\n      return this.isInterGraph;\n    };\n    LEdge.prototype.getLength = function () {\n      return this.length;\n    };\n    LEdge.prototype.isOverlapingSourceAndTarget = function () {\n      return this.isOverlapingSourceAndTarget;\n    };\n    LEdge.prototype.getBendpoints = function () {\n      return this.bendpoints;\n    };\n    LEdge.prototype.getLca = function () {\n      return this.lca;\n    };\n    LEdge.prototype.getSourceInLca = function () {\n      return this.sourceInLca;\n    };\n    LEdge.prototype.getTargetInLca = function () {\n      return this.targetInLca;\n    };\n    LEdge.prototype.getOtherEnd = function (node) {\n      if (this.source === node) {\n        return this.target;\n      } else if (this.target === node) {\n        return this.source;\n      } else {\n        throw \"Node is not incident with this edge\";\n      }\n    };\n    LEdge.prototype.getOtherEndInGraph = function (node, graph) {\n      var otherEnd = this.getOtherEnd(node);\n      var root = graph.getGraphManager().getRoot();\n      while (true) {\n        if (otherEnd.getOwner() == graph) {\n          return otherEnd;\n        }\n        if (otherEnd.getOwner() == root) {\n          break;\n        }\n        otherEnd = otherEnd.getOwner().getParent();\n      }\n      return null;\n    };\n    LEdge.prototype.updateLength = function () {\n      var clipPointCoordinates = new Array(4);\n      this.isOverlapingSourceAndTarget = IGeometry.getIntersection(this.target.getRect(), this.source.getRect(), clipPointCoordinates);\n      if (!this.isOverlapingSourceAndTarget) {\n        this.lengthX = clipPointCoordinates[0] - clipPointCoordinates[2];\n        this.lengthY = clipPointCoordinates[1] - clipPointCoordinates[3];\n        if (Math.abs(this.lengthX) < 1.0) {\n          this.lengthX = IMath.sign(this.lengthX);\n        }\n        if (Math.abs(this.lengthY) < 1.0) {\n          this.lengthY = IMath.sign(this.lengthY);\n        }\n        this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n      }\n    };\n    LEdge.prototype.updateLengthSimple = function () {\n      this.lengthX = this.target.getCenterX() - this.source.getCenterX();\n      this.lengthY = this.target.getCenterY() - this.source.getCenterY();\n      if (Math.abs(this.lengthX) < 1.0) {\n        this.lengthX = IMath.sign(this.lengthX);\n      }\n      if (Math.abs(this.lengthY) < 1.0) {\n        this.lengthY = IMath.sign(this.lengthY);\n      }\n      this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n    };\n    module.exports = LEdge;\n\n    /***/\n  }), (/* 2 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function LGraphObject(vGraphObject) {\n      this.vGraphObject = vGraphObject;\n    }\n    module.exports = LGraphObject;\n\n    /***/\n  }), (/* 3 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LGraphObject = __webpack_require__(2);\n    var Integer = __webpack_require__(10);\n    var RectangleD = __webpack_require__(13);\n    var LayoutConstants = __webpack_require__(0);\n    var RandomSeed = __webpack_require__(16);\n    var PointD = __webpack_require__(4);\n    function LNode(gm, loc, size, vNode) {\n      //Alternative constructor 1 : LNode(LGraphManager gm, Point loc, Dimension size, Object vNode)\n      if (size == null && vNode == null) {\n        vNode = loc;\n      }\n      LGraphObject.call(this, vNode);\n\n      //Alternative constructor 2 : LNode(Layout layout, Object vNode)\n      if (gm.graphManager != null) gm = gm.graphManager;\n      this.estimatedSize = Integer.MIN_VALUE;\n      this.inclusionTreeDepth = Integer.MAX_VALUE;\n      this.vGraphObject = vNode;\n      this.edges = [];\n      this.graphManager = gm;\n      if (size != null && loc != null) this.rect = new RectangleD(loc.x, loc.y, size.width, size.height);else this.rect = new RectangleD();\n    }\n    LNode.prototype = Object.create(LGraphObject.prototype);\n    for (var prop in LGraphObject) {\n      LNode[prop] = LGraphObject[prop];\n    }\n    LNode.prototype.getEdges = function () {\n      return this.edges;\n    };\n    LNode.prototype.getChild = function () {\n      return this.child;\n    };\n    LNode.prototype.getOwner = function () {\n      //  if (this.owner != null) {\n      //    if (!(this.owner == null || this.owner.getNodes().indexOf(this) > -1)) {\n      //      throw \"assert failed\";\n      //    }\n      //  }\n\n      return this.owner;\n    };\n    LNode.prototype.getWidth = function () {\n      return this.rect.width;\n    };\n    LNode.prototype.setWidth = function (width) {\n      this.rect.width = width;\n    };\n    LNode.prototype.getHeight = function () {\n      return this.rect.height;\n    };\n    LNode.prototype.setHeight = function (height) {\n      this.rect.height = height;\n    };\n    LNode.prototype.getCenterX = function () {\n      return this.rect.x + this.rect.width / 2;\n    };\n    LNode.prototype.getCenterY = function () {\n      return this.rect.y + this.rect.height / 2;\n    };\n    LNode.prototype.getCenter = function () {\n      return new PointD(this.rect.x + this.rect.width / 2, this.rect.y + this.rect.height / 2);\n    };\n    LNode.prototype.getLocation = function () {\n      return new PointD(this.rect.x, this.rect.y);\n    };\n    LNode.prototype.getRect = function () {\n      return this.rect;\n    };\n    LNode.prototype.getDiagonal = function () {\n      return Math.sqrt(this.rect.width * this.rect.width + this.rect.height * this.rect.height);\n    };\n\n    /**\n     * This method returns half the diagonal length of this node.\n     */\n    LNode.prototype.getHalfTheDiagonal = function () {\n      return Math.sqrt(this.rect.height * this.rect.height + this.rect.width * this.rect.width) / 2;\n    };\n    LNode.prototype.setRect = function (upperLeft, dimension) {\n      this.rect.x = upperLeft.x;\n      this.rect.y = upperLeft.y;\n      this.rect.width = dimension.width;\n      this.rect.height = dimension.height;\n    };\n    LNode.prototype.setCenter = function (cx, cy) {\n      this.rect.x = cx - this.rect.width / 2;\n      this.rect.y = cy - this.rect.height / 2;\n    };\n    LNode.prototype.setLocation = function (x, y) {\n      this.rect.x = x;\n      this.rect.y = y;\n    };\n    LNode.prototype.moveBy = function (dx, dy) {\n      this.rect.x += dx;\n      this.rect.y += dy;\n    };\n    LNode.prototype.getEdgeListToNode = function (to) {\n      var edgeList = [];\n      var edge;\n      var self = this;\n      self.edges.forEach(function (edge) {\n        if (edge.target == to) {\n          if (edge.source != self) throw \"Incorrect edge source!\";\n          edgeList.push(edge);\n        }\n      });\n      return edgeList;\n    };\n    LNode.prototype.getEdgesBetween = function (other) {\n      var edgeList = [];\n      var edge;\n      var self = this;\n      self.edges.forEach(function (edge) {\n        if (!(edge.source == self || edge.target == self)) throw \"Incorrect edge source and/or target\";\n        if (edge.target == other || edge.source == other) {\n          edgeList.push(edge);\n        }\n      });\n      return edgeList;\n    };\n    LNode.prototype.getNeighborsList = function () {\n      var neighbors = new Set();\n      var self = this;\n      self.edges.forEach(function (edge) {\n        if (edge.source == self) {\n          neighbors.add(edge.target);\n        } else {\n          if (edge.target != self) {\n            throw \"Incorrect incidency!\";\n          }\n          neighbors.add(edge.source);\n        }\n      });\n      return neighbors;\n    };\n    LNode.prototype.withChildren = function () {\n      var withNeighborsList = new Set();\n      var childNode;\n      var children;\n      withNeighborsList.add(this);\n      if (this.child != null) {\n        var nodes = this.child.getNodes();\n        for (var i = 0; i < nodes.length; i++) {\n          childNode = nodes[i];\n          children = childNode.withChildren();\n          children.forEach(function (node) {\n            withNeighborsList.add(node);\n          });\n        }\n      }\n      return withNeighborsList;\n    };\n    LNode.prototype.getNoOfChildren = function () {\n      var noOfChildren = 0;\n      var childNode;\n      if (this.child == null) {\n        noOfChildren = 1;\n      } else {\n        var nodes = this.child.getNodes();\n        for (var i = 0; i < nodes.length; i++) {\n          childNode = nodes[i];\n          noOfChildren += childNode.getNoOfChildren();\n        }\n      }\n      if (noOfChildren == 0) {\n        noOfChildren = 1;\n      }\n      return noOfChildren;\n    };\n    LNode.prototype.getEstimatedSize = function () {\n      if (this.estimatedSize == Integer.MIN_VALUE) {\n        throw \"assert failed\";\n      }\n      return this.estimatedSize;\n    };\n    LNode.prototype.calcEstimatedSize = function () {\n      if (this.child == null) {\n        return this.estimatedSize = (this.rect.width + this.rect.height) / 2;\n      } else {\n        this.estimatedSize = this.child.calcEstimatedSize();\n        this.rect.width = this.estimatedSize;\n        this.rect.height = this.estimatedSize;\n        return this.estimatedSize;\n      }\n    };\n    LNode.prototype.scatter = function () {\n      var randomCenterX;\n      var randomCenterY;\n      var minX = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n      var maxX = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n      randomCenterX = LayoutConstants.WORLD_CENTER_X + RandomSeed.nextDouble() * (maxX - minX) + minX;\n      var minY = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n      var maxY = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n      randomCenterY = LayoutConstants.WORLD_CENTER_Y + RandomSeed.nextDouble() * (maxY - minY) + minY;\n      this.rect.x = randomCenterX;\n      this.rect.y = randomCenterY;\n    };\n    LNode.prototype.updateBounds = function () {\n      if (this.getChild() == null) {\n        throw \"assert failed\";\n      }\n      if (this.getChild().getNodes().length != 0) {\n        // wrap the children nodes by re-arranging the boundaries\n        var childGraph = this.getChild();\n        childGraph.updateBounds(true);\n        this.rect.x = childGraph.getLeft();\n        this.rect.y = childGraph.getTop();\n        this.setWidth(childGraph.getRight() - childGraph.getLeft());\n        this.setHeight(childGraph.getBottom() - childGraph.getTop());\n\n        // Update compound bounds considering its label properties    \n        if (LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n          var width = childGraph.getRight() - childGraph.getLeft();\n          var height = childGraph.getBottom() - childGraph.getTop();\n          if (this.labelWidth > width) {\n            this.rect.x -= (this.labelWidth - width) / 2;\n            this.setWidth(this.labelWidth);\n          }\n          if (this.labelHeight > height) {\n            if (this.labelPos == \"center\") {\n              this.rect.y -= (this.labelHeight - height) / 2;\n            } else if (this.labelPos == \"top\") {\n              this.rect.y -= this.labelHeight - height;\n            }\n            this.setHeight(this.labelHeight);\n          }\n        }\n      }\n    };\n    LNode.prototype.getInclusionTreeDepth = function () {\n      if (this.inclusionTreeDepth == Integer.MAX_VALUE) {\n        throw \"assert failed\";\n      }\n      return this.inclusionTreeDepth;\n    };\n    LNode.prototype.transform = function (trans) {\n      var left = this.rect.x;\n      if (left > LayoutConstants.WORLD_BOUNDARY) {\n        left = LayoutConstants.WORLD_BOUNDARY;\n      } else if (left < -LayoutConstants.WORLD_BOUNDARY) {\n        left = -LayoutConstants.WORLD_BOUNDARY;\n      }\n      var top = this.rect.y;\n      if (top > LayoutConstants.WORLD_BOUNDARY) {\n        top = LayoutConstants.WORLD_BOUNDARY;\n      } else if (top < -LayoutConstants.WORLD_BOUNDARY) {\n        top = -LayoutConstants.WORLD_BOUNDARY;\n      }\n      var leftTop = new PointD(left, top);\n      var vLeftTop = trans.inverseTransformPoint(leftTop);\n      this.setLocation(vLeftTop.x, vLeftTop.y);\n    };\n    LNode.prototype.getLeft = function () {\n      return this.rect.x;\n    };\n    LNode.prototype.getRight = function () {\n      return this.rect.x + this.rect.width;\n    };\n    LNode.prototype.getTop = function () {\n      return this.rect.y;\n    };\n    LNode.prototype.getBottom = function () {\n      return this.rect.y + this.rect.height;\n    };\n    LNode.prototype.getParent = function () {\n      if (this.owner == null) {\n        return null;\n      }\n      return this.owner.getParent();\n    };\n    module.exports = LNode;\n\n    /***/\n  }), (/* 4 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function PointD(x, y) {\n      if (x == null && y == null) {\n        this.x = 0;\n        this.y = 0;\n      } else {\n        this.x = x;\n        this.y = y;\n      }\n    }\n    PointD.prototype.getX = function () {\n      return this.x;\n    };\n    PointD.prototype.getY = function () {\n      return this.y;\n    };\n    PointD.prototype.setX = function (x) {\n      this.x = x;\n    };\n    PointD.prototype.setY = function (y) {\n      this.y = y;\n    };\n    PointD.prototype.getDifference = function (pt) {\n      return new DimensionD(this.x - pt.x, this.y - pt.y);\n    };\n    PointD.prototype.getCopy = function () {\n      return new PointD(this.x, this.y);\n    };\n    PointD.prototype.translate = function (dim) {\n      this.x += dim.width;\n      this.y += dim.height;\n      return this;\n    };\n    module.exports = PointD;\n\n    /***/\n  }), (/* 5 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LGraphObject = __webpack_require__(2);\n    var Integer = __webpack_require__(10);\n    var LayoutConstants = __webpack_require__(0);\n    var LGraphManager = __webpack_require__(6);\n    var LNode = __webpack_require__(3);\n    var LEdge = __webpack_require__(1);\n    var RectangleD = __webpack_require__(13);\n    var Point = __webpack_require__(12);\n    var LinkedList = __webpack_require__(11);\n    function LGraph(parent, obj2, vGraph) {\n      LGraphObject.call(this, vGraph);\n      this.estimatedSize = Integer.MIN_VALUE;\n      this.margin = LayoutConstants.DEFAULT_GRAPH_MARGIN;\n      this.edges = [];\n      this.nodes = [];\n      this.isConnected = false;\n      this.parent = parent;\n      if (obj2 != null && obj2 instanceof LGraphManager) {\n        this.graphManager = obj2;\n      } else if (obj2 != null && obj2 instanceof Layout) {\n        this.graphManager = obj2.graphManager;\n      }\n    }\n    LGraph.prototype = Object.create(LGraphObject.prototype);\n    for (var prop in LGraphObject) {\n      LGraph[prop] = LGraphObject[prop];\n    }\n    LGraph.prototype.getNodes = function () {\n      return this.nodes;\n    };\n    LGraph.prototype.getEdges = function () {\n      return this.edges;\n    };\n    LGraph.prototype.getGraphManager = function () {\n      return this.graphManager;\n    };\n    LGraph.prototype.getParent = function () {\n      return this.parent;\n    };\n    LGraph.prototype.getLeft = function () {\n      return this.left;\n    };\n    LGraph.prototype.getRight = function () {\n      return this.right;\n    };\n    LGraph.prototype.getTop = function () {\n      return this.top;\n    };\n    LGraph.prototype.getBottom = function () {\n      return this.bottom;\n    };\n    LGraph.prototype.isConnected = function () {\n      return this.isConnected;\n    };\n    LGraph.prototype.add = function (obj1, sourceNode, targetNode) {\n      if (sourceNode == null && targetNode == null) {\n        var newNode = obj1;\n        if (this.graphManager == null) {\n          throw \"Graph has no graph mgr!\";\n        }\n        if (this.getNodes().indexOf(newNode) > -1) {\n          throw \"Node already in graph!\";\n        }\n        newNode.owner = this;\n        this.getNodes().push(newNode);\n        return newNode;\n      } else {\n        var newEdge = obj1;\n        if (!(this.getNodes().indexOf(sourceNode) > -1 && this.getNodes().indexOf(targetNode) > -1)) {\n          throw \"Source or target not in graph!\";\n        }\n        if (!(sourceNode.owner == targetNode.owner && sourceNode.owner == this)) {\n          throw \"Both owners must be this graph!\";\n        }\n        if (sourceNode.owner != targetNode.owner) {\n          return null;\n        }\n\n        // set source and target\n        newEdge.source = sourceNode;\n        newEdge.target = targetNode;\n\n        // set as intra-graph edge\n        newEdge.isInterGraph = false;\n\n        // add to graph edge list\n        this.getEdges().push(newEdge);\n\n        // add to incidency lists\n        sourceNode.edges.push(newEdge);\n        if (targetNode != sourceNode) {\n          targetNode.edges.push(newEdge);\n        }\n        return newEdge;\n      }\n    };\n    LGraph.prototype.remove = function (obj) {\n      var node = obj;\n      if (obj instanceof LNode) {\n        if (node == null) {\n          throw \"Node is null!\";\n        }\n        if (!(node.owner != null && node.owner == this)) {\n          throw \"Owner graph is invalid!\";\n        }\n        if (this.graphManager == null) {\n          throw \"Owner graph manager is invalid!\";\n        }\n        // remove incident edges first (make a copy to do it safely)\n        var edgesToBeRemoved = node.edges.slice();\n        var edge;\n        var s = edgesToBeRemoved.length;\n        for (var i = 0; i < s; i++) {\n          edge = edgesToBeRemoved[i];\n          if (edge.isInterGraph) {\n            this.graphManager.remove(edge);\n          } else {\n            edge.source.owner.remove(edge);\n          }\n        }\n\n        // now the node itself\n        var index = this.nodes.indexOf(node);\n        if (index == -1) {\n          throw \"Node not in owner node list!\";\n        }\n        this.nodes.splice(index, 1);\n      } else if (obj instanceof LEdge) {\n        var edge = obj;\n        if (edge == null) {\n          throw \"Edge is null!\";\n        }\n        if (!(edge.source != null && edge.target != null)) {\n          throw \"Source and/or target is null!\";\n        }\n        if (!(edge.source.owner != null && edge.target.owner != null && edge.source.owner == this && edge.target.owner == this)) {\n          throw \"Source and/or target owner is invalid!\";\n        }\n        var sourceIndex = edge.source.edges.indexOf(edge);\n        var targetIndex = edge.target.edges.indexOf(edge);\n        if (!(sourceIndex > -1 && targetIndex > -1)) {\n          throw \"Source and/or target doesn't know this edge!\";\n        }\n        edge.source.edges.splice(sourceIndex, 1);\n        if (edge.target != edge.source) {\n          edge.target.edges.splice(targetIndex, 1);\n        }\n        var index = edge.source.owner.getEdges().indexOf(edge);\n        if (index == -1) {\n          throw \"Not in owner's edge list!\";\n        }\n        edge.source.owner.getEdges().splice(index, 1);\n      }\n    };\n    LGraph.prototype.updateLeftTop = function () {\n      var top = Integer.MAX_VALUE;\n      var left = Integer.MAX_VALUE;\n      var nodeTop;\n      var nodeLeft;\n      var margin;\n      var nodes = this.getNodes();\n      var s = nodes.length;\n      for (var i = 0; i < s; i++) {\n        var lNode = nodes[i];\n        nodeTop = lNode.getTop();\n        nodeLeft = lNode.getLeft();\n        if (top > nodeTop) {\n          top = nodeTop;\n        }\n        if (left > nodeLeft) {\n          left = nodeLeft;\n        }\n      }\n\n      // Do we have any nodes in this graph?\n      if (top == Integer.MAX_VALUE) {\n        return null;\n      }\n      if (nodes[0].getParent().paddingLeft != undefined) {\n        margin = nodes[0].getParent().paddingLeft;\n      } else {\n        margin = this.margin;\n      }\n      this.left = left - margin;\n      this.top = top - margin;\n\n      // Apply the margins and return the result\n      return new Point(this.left, this.top);\n    };\n    LGraph.prototype.updateBounds = function (recursive) {\n      // calculate bounds\n      var left = Integer.MAX_VALUE;\n      var right = -Integer.MAX_VALUE;\n      var top = Integer.MAX_VALUE;\n      var bottom = -Integer.MAX_VALUE;\n      var nodeLeft;\n      var nodeRight;\n      var nodeTop;\n      var nodeBottom;\n      var margin;\n      var nodes = this.nodes;\n      var s = nodes.length;\n      for (var i = 0; i < s; i++) {\n        var lNode = nodes[i];\n        if (recursive && lNode.child != null) {\n          lNode.updateBounds();\n        }\n        nodeLeft = lNode.getLeft();\n        nodeRight = lNode.getRight();\n        nodeTop = lNode.getTop();\n        nodeBottom = lNode.getBottom();\n        if (left > nodeLeft) {\n          left = nodeLeft;\n        }\n        if (right < nodeRight) {\n          right = nodeRight;\n        }\n        if (top > nodeTop) {\n          top = nodeTop;\n        }\n        if (bottom < nodeBottom) {\n          bottom = nodeBottom;\n        }\n      }\n      var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n      if (left == Integer.MAX_VALUE) {\n        this.left = this.parent.getLeft();\n        this.right = this.parent.getRight();\n        this.top = this.parent.getTop();\n        this.bottom = this.parent.getBottom();\n      }\n      if (nodes[0].getParent().paddingLeft != undefined) {\n        margin = nodes[0].getParent().paddingLeft;\n      } else {\n        margin = this.margin;\n      }\n      this.left = boundingRect.x - margin;\n      this.right = boundingRect.x + boundingRect.width + margin;\n      this.top = boundingRect.y - margin;\n      this.bottom = boundingRect.y + boundingRect.height + margin;\n    };\n    LGraph.calculateBounds = function (nodes) {\n      var left = Integer.MAX_VALUE;\n      var right = -Integer.MAX_VALUE;\n      var top = Integer.MAX_VALUE;\n      var bottom = -Integer.MAX_VALUE;\n      var nodeLeft;\n      var nodeRight;\n      var nodeTop;\n      var nodeBottom;\n      var s = nodes.length;\n      for (var i = 0; i < s; i++) {\n        var lNode = nodes[i];\n        nodeLeft = lNode.getLeft();\n        nodeRight = lNode.getRight();\n        nodeTop = lNode.getTop();\n        nodeBottom = lNode.getBottom();\n        if (left > nodeLeft) {\n          left = nodeLeft;\n        }\n        if (right < nodeRight) {\n          right = nodeRight;\n        }\n        if (top > nodeTop) {\n          top = nodeTop;\n        }\n        if (bottom < nodeBottom) {\n          bottom = nodeBottom;\n        }\n      }\n      var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n      return boundingRect;\n    };\n    LGraph.prototype.getInclusionTreeDepth = function () {\n      if (this == this.graphManager.getRoot()) {\n        return 1;\n      } else {\n        return this.parent.getInclusionTreeDepth();\n      }\n    };\n    LGraph.prototype.getEstimatedSize = function () {\n      if (this.estimatedSize == Integer.MIN_VALUE) {\n        throw \"assert failed\";\n      }\n      return this.estimatedSize;\n    };\n    LGraph.prototype.calcEstimatedSize = function () {\n      var size = 0;\n      var nodes = this.nodes;\n      var s = nodes.length;\n      for (var i = 0; i < s; i++) {\n        var lNode = nodes[i];\n        size += lNode.calcEstimatedSize();\n      }\n      if (size == 0) {\n        this.estimatedSize = LayoutConstants.EMPTY_COMPOUND_NODE_SIZE;\n      } else {\n        this.estimatedSize = size / Math.sqrt(this.nodes.length);\n      }\n      return this.estimatedSize;\n    };\n    LGraph.prototype.updateConnected = function () {\n      var self = this;\n      if (this.nodes.length == 0) {\n        this.isConnected = true;\n        return;\n      }\n      var queue = new LinkedList();\n      var visited = new Set();\n      var currentNode = this.nodes[0];\n      var neighborEdges;\n      var currentNeighbor;\n      var childrenOfNode = currentNode.withChildren();\n      childrenOfNode.forEach(function (node) {\n        queue.push(node);\n        visited.add(node);\n      });\n      while (queue.length !== 0) {\n        currentNode = queue.shift();\n\n        // Traverse all neighbors of this node\n        neighborEdges = currentNode.getEdges();\n        var size = neighborEdges.length;\n        for (var i = 0; i < size; i++) {\n          var neighborEdge = neighborEdges[i];\n          currentNeighbor = neighborEdge.getOtherEndInGraph(currentNode, this);\n\n          // Add unvisited neighbors to the list to visit\n          if (currentNeighbor != null && !visited.has(currentNeighbor)) {\n            var childrenOfNeighbor = currentNeighbor.withChildren();\n            childrenOfNeighbor.forEach(function (node) {\n              queue.push(node);\n              visited.add(node);\n            });\n          }\n        }\n      }\n      this.isConnected = false;\n      if (visited.size >= this.nodes.length) {\n        var noOfVisitedInThisGraph = 0;\n        visited.forEach(function (visitedNode) {\n          if (visitedNode.owner == self) {\n            noOfVisitedInThisGraph++;\n          }\n        });\n        if (noOfVisitedInThisGraph == this.nodes.length) {\n          this.isConnected = true;\n        }\n      }\n    };\n    module.exports = LGraph;\n\n    /***/\n  }), (/* 6 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LGraph;\n    var LEdge = __webpack_require__(1);\n    function LGraphManager(layout) {\n      LGraph = __webpack_require__(5); // It may be better to initilize this out of this function but it gives an error (Right-hand side of 'instanceof' is not callable) now.\n      this.layout = layout;\n      this.graphs = [];\n      this.edges = [];\n    }\n    LGraphManager.prototype.addRoot = function () {\n      var ngraph = this.layout.newGraph();\n      var nnode = this.layout.newNode(null);\n      var root = this.add(ngraph, nnode);\n      this.setRootGraph(root);\n      return this.rootGraph;\n    };\n    LGraphManager.prototype.add = function (newGraph, parentNode, newEdge, sourceNode, targetNode) {\n      //there are just 2 parameters are passed then it adds an LGraph else it adds an LEdge\n      if (newEdge == null && sourceNode == null && targetNode == null) {\n        if (newGraph == null) {\n          throw \"Graph is null!\";\n        }\n        if (parentNode == null) {\n          throw \"Parent node is null!\";\n        }\n        if (this.graphs.indexOf(newGraph) > -1) {\n          throw \"Graph already in this graph mgr!\";\n        }\n        this.graphs.push(newGraph);\n        if (newGraph.parent != null) {\n          throw \"Already has a parent!\";\n        }\n        if (parentNode.child != null) {\n          throw \"Already has a child!\";\n        }\n        newGraph.parent = parentNode;\n        parentNode.child = newGraph;\n        return newGraph;\n      } else {\n        //change the order of the parameters\n        targetNode = newEdge;\n        sourceNode = parentNode;\n        newEdge = newGraph;\n        var sourceGraph = sourceNode.getOwner();\n        var targetGraph = targetNode.getOwner();\n        if (!(sourceGraph != null && sourceGraph.getGraphManager() == this)) {\n          throw \"Source not in this graph mgr!\";\n        }\n        if (!(targetGraph != null && targetGraph.getGraphManager() == this)) {\n          throw \"Target not in this graph mgr!\";\n        }\n        if (sourceGraph == targetGraph) {\n          newEdge.isInterGraph = false;\n          return sourceGraph.add(newEdge, sourceNode, targetNode);\n        } else {\n          newEdge.isInterGraph = true;\n\n          // set source and target\n          newEdge.source = sourceNode;\n          newEdge.target = targetNode;\n\n          // add edge to inter-graph edge list\n          if (this.edges.indexOf(newEdge) > -1) {\n            throw \"Edge already in inter-graph edge list!\";\n          }\n          this.edges.push(newEdge);\n\n          // add edge to source and target incidency lists\n          if (!(newEdge.source != null && newEdge.target != null)) {\n            throw \"Edge source and/or target is null!\";\n          }\n          if (!(newEdge.source.edges.indexOf(newEdge) == -1 && newEdge.target.edges.indexOf(newEdge) == -1)) {\n            throw \"Edge already in source and/or target incidency list!\";\n          }\n          newEdge.source.edges.push(newEdge);\n          newEdge.target.edges.push(newEdge);\n          return newEdge;\n        }\n      }\n    };\n    LGraphManager.prototype.remove = function (lObj) {\n      if (lObj instanceof LGraph) {\n        var graph = lObj;\n        if (graph.getGraphManager() != this) {\n          throw \"Graph not in this graph mgr\";\n        }\n        if (!(graph == this.rootGraph || graph.parent != null && graph.parent.graphManager == this)) {\n          throw \"Invalid parent node!\";\n        }\n\n        // first the edges (make a copy to do it safely)\n        var edgesToBeRemoved = [];\n        edgesToBeRemoved = edgesToBeRemoved.concat(graph.getEdges());\n        var edge;\n        var s = edgesToBeRemoved.length;\n        for (var i = 0; i < s; i++) {\n          edge = edgesToBeRemoved[i];\n          graph.remove(edge);\n        }\n\n        // then the nodes (make a copy to do it safely)\n        var nodesToBeRemoved = [];\n        nodesToBeRemoved = nodesToBeRemoved.concat(graph.getNodes());\n        var node;\n        s = nodesToBeRemoved.length;\n        for (var i = 0; i < s; i++) {\n          node = nodesToBeRemoved[i];\n          graph.remove(node);\n        }\n\n        // check if graph is the root\n        if (graph == this.rootGraph) {\n          this.setRootGraph(null);\n        }\n\n        // now remove the graph itself\n        var index = this.graphs.indexOf(graph);\n        this.graphs.splice(index, 1);\n\n        // also reset the parent of the graph\n        graph.parent = null;\n      } else if (lObj instanceof LEdge) {\n        edge = lObj;\n        if (edge == null) {\n          throw \"Edge is null!\";\n        }\n        if (!edge.isInterGraph) {\n          throw \"Not an inter-graph edge!\";\n        }\n        if (!(edge.source != null && edge.target != null)) {\n          throw \"Source and/or target is null!\";\n        }\n\n        // remove edge from source and target nodes' incidency lists\n\n        if (!(edge.source.edges.indexOf(edge) != -1 && edge.target.edges.indexOf(edge) != -1)) {\n          throw \"Source and/or target doesn't know this edge!\";\n        }\n        var index = edge.source.edges.indexOf(edge);\n        edge.source.edges.splice(index, 1);\n        index = edge.target.edges.indexOf(edge);\n        edge.target.edges.splice(index, 1);\n\n        // remove edge from owner graph manager's inter-graph edge list\n\n        if (!(edge.source.owner != null && edge.source.owner.getGraphManager() != null)) {\n          throw \"Edge owner graph or owner graph manager is null!\";\n        }\n        if (edge.source.owner.getGraphManager().edges.indexOf(edge) == -1) {\n          throw \"Not in owner graph manager's edge list!\";\n        }\n        var index = edge.source.owner.getGraphManager().edges.indexOf(edge);\n        edge.source.owner.getGraphManager().edges.splice(index, 1);\n      }\n    };\n    LGraphManager.prototype.updateBounds = function () {\n      this.rootGraph.updateBounds(true);\n    };\n    LGraphManager.prototype.getGraphs = function () {\n      return this.graphs;\n    };\n    LGraphManager.prototype.getAllNodes = function () {\n      if (this.allNodes == null) {\n        var nodeList = [];\n        var graphs = this.getGraphs();\n        var s = graphs.length;\n        for (var i = 0; i < s; i++) {\n          nodeList = nodeList.concat(graphs[i].getNodes());\n        }\n        this.allNodes = nodeList;\n      }\n      return this.allNodes;\n    };\n    LGraphManager.prototype.resetAllNodes = function () {\n      this.allNodes = null;\n    };\n    LGraphManager.prototype.resetAllEdges = function () {\n      this.allEdges = null;\n    };\n    LGraphManager.prototype.resetAllNodesToApplyGravitation = function () {\n      this.allNodesToApplyGravitation = null;\n    };\n    LGraphManager.prototype.getAllEdges = function () {\n      if (this.allEdges == null) {\n        var edgeList = [];\n        var graphs = this.getGraphs();\n        var s = graphs.length;\n        for (var i = 0; i < graphs.length; i++) {\n          edgeList = edgeList.concat(graphs[i].getEdges());\n        }\n        edgeList = edgeList.concat(this.edges);\n        this.allEdges = edgeList;\n      }\n      return this.allEdges;\n    };\n    LGraphManager.prototype.getAllNodesToApplyGravitation = function () {\n      return this.allNodesToApplyGravitation;\n    };\n    LGraphManager.prototype.setAllNodesToApplyGravitation = function (nodeList) {\n      if (this.allNodesToApplyGravitation != null) {\n        throw \"assert failed\";\n      }\n      this.allNodesToApplyGravitation = nodeList;\n    };\n    LGraphManager.prototype.getRoot = function () {\n      return this.rootGraph;\n    };\n    LGraphManager.prototype.setRootGraph = function (graph) {\n      if (graph.getGraphManager() != this) {\n        throw \"Root not in this graph mgr!\";\n      }\n      this.rootGraph = graph;\n      // root graph must have a root node associated with it for convenience\n      if (graph.parent == null) {\n        graph.parent = this.layout.newNode(\"Root node\");\n      }\n    };\n    LGraphManager.prototype.getLayout = function () {\n      return this.layout;\n    };\n    LGraphManager.prototype.isOneAncestorOfOther = function (firstNode, secondNode) {\n      if (!(firstNode != null && secondNode != null)) {\n        throw \"assert failed\";\n      }\n      if (firstNode == secondNode) {\n        return true;\n      }\n      // Is second node an ancestor of the first one?\n      var ownerGraph = firstNode.getOwner();\n      var parentNode;\n      do {\n        parentNode = ownerGraph.getParent();\n        if (parentNode == null) {\n          break;\n        }\n        if (parentNode == secondNode) {\n          return true;\n        }\n        ownerGraph = parentNode.getOwner();\n        if (ownerGraph == null) {\n          break;\n        }\n      } while (true);\n      // Is first node an ancestor of the second one?\n      ownerGraph = secondNode.getOwner();\n      do {\n        parentNode = ownerGraph.getParent();\n        if (parentNode == null) {\n          break;\n        }\n        if (parentNode == firstNode) {\n          return true;\n        }\n        ownerGraph = parentNode.getOwner();\n        if (ownerGraph == null) {\n          break;\n        }\n      } while (true);\n      return false;\n    };\n    LGraphManager.prototype.calcLowestCommonAncestors = function () {\n      var edge;\n      var sourceNode;\n      var targetNode;\n      var sourceAncestorGraph;\n      var targetAncestorGraph;\n      var edges = this.getAllEdges();\n      var s = edges.length;\n      for (var i = 0; i < s; i++) {\n        edge = edges[i];\n        sourceNode = edge.source;\n        targetNode = edge.target;\n        edge.lca = null;\n        edge.sourceInLca = sourceNode;\n        edge.targetInLca = targetNode;\n        if (sourceNode == targetNode) {\n          edge.lca = sourceNode.getOwner();\n          continue;\n        }\n        sourceAncestorGraph = sourceNode.getOwner();\n        while (edge.lca == null) {\n          edge.targetInLca = targetNode;\n          targetAncestorGraph = targetNode.getOwner();\n          while (edge.lca == null) {\n            if (targetAncestorGraph == sourceAncestorGraph) {\n              edge.lca = targetAncestorGraph;\n              break;\n            }\n            if (targetAncestorGraph == this.rootGraph) {\n              break;\n            }\n            if (edge.lca != null) {\n              throw \"assert failed\";\n            }\n            edge.targetInLca = targetAncestorGraph.getParent();\n            targetAncestorGraph = edge.targetInLca.getOwner();\n          }\n          if (sourceAncestorGraph == this.rootGraph) {\n            break;\n          }\n          if (edge.lca == null) {\n            edge.sourceInLca = sourceAncestorGraph.getParent();\n            sourceAncestorGraph = edge.sourceInLca.getOwner();\n          }\n        }\n        if (edge.lca == null) {\n          throw \"assert failed\";\n        }\n      }\n    };\n    LGraphManager.prototype.calcLowestCommonAncestor = function (firstNode, secondNode) {\n      if (firstNode == secondNode) {\n        return firstNode.getOwner();\n      }\n      var firstOwnerGraph = firstNode.getOwner();\n      do {\n        if (firstOwnerGraph == null) {\n          break;\n        }\n        var secondOwnerGraph = secondNode.getOwner();\n        do {\n          if (secondOwnerGraph == null) {\n            break;\n          }\n          if (secondOwnerGraph == firstOwnerGraph) {\n            return secondOwnerGraph;\n          }\n          secondOwnerGraph = secondOwnerGraph.getParent().getOwner();\n        } while (true);\n        firstOwnerGraph = firstOwnerGraph.getParent().getOwner();\n      } while (true);\n      return firstOwnerGraph;\n    };\n    LGraphManager.prototype.calcInclusionTreeDepths = function (graph, depth) {\n      if (graph == null && depth == null) {\n        graph = this.rootGraph;\n        depth = 1;\n      }\n      var node;\n      var nodes = graph.getNodes();\n      var s = nodes.length;\n      for (var i = 0; i < s; i++) {\n        node = nodes[i];\n        node.inclusionTreeDepth = depth;\n        if (node.child != null) {\n          this.calcInclusionTreeDepths(node.child, depth + 1);\n        }\n      }\n    };\n    LGraphManager.prototype.includesInvalidEdge = function () {\n      var edge;\n      var s = this.edges.length;\n      for (var i = 0; i < s; i++) {\n        edge = this.edges[i];\n        if (this.isOneAncestorOfOther(edge.source, edge.target)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    module.exports = LGraphManager;\n\n    /***/\n  }), (/* 7 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LayoutConstants = __webpack_require__(0);\n    function FDLayoutConstants() {}\n\n    //FDLayoutConstants inherits static props in LayoutConstants\n    for (var prop in LayoutConstants) {\n      FDLayoutConstants[prop] = LayoutConstants[prop];\n    }\n    FDLayoutConstants.MAX_ITERATIONS = 2500;\n    FDLayoutConstants.DEFAULT_EDGE_LENGTH = 50;\n    FDLayoutConstants.DEFAULT_SPRING_STRENGTH = 0.45;\n    FDLayoutConstants.DEFAULT_REPULSION_STRENGTH = 4500.0;\n    FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = 0.4;\n    FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = 1.0;\n    FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = 3.8;\n    FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = 1.5;\n    FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION = true;\n    FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION = true;\n    FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = 0.3;\n    FDLayoutConstants.COOLING_ADAPTATION_FACTOR = 0.33;\n    FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT = 1000;\n    FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT = 5000;\n    FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL = 100.0;\n    FDLayoutConstants.MAX_NODE_DISPLACEMENT = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL * 3;\n    FDLayoutConstants.MIN_REPULSION_DIST = FDLayoutConstants.DEFAULT_EDGE_LENGTH / 10.0;\n    FDLayoutConstants.CONVERGENCE_CHECK_PERIOD = 100;\n    FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = 0.1;\n    FDLayoutConstants.MIN_EDGE_LENGTH = 1;\n    FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD = 10;\n    module.exports = FDLayoutConstants;\n\n    /***/\n  }), (/* 8 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    /**\n     * This class maintains a list of static geometry related utility methods.\n     *\n     *\n     * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n     */\n    var Point = __webpack_require__(12);\n    function IGeometry() {}\n\n    /**\n     * This method calculates *half* the amount in x and y directions of the two\n     * input rectangles needed to separate them keeping their respective\n     * positioning, and returns the result in the input array. An input\n     * separation buffer added to the amount in both directions. We assume that\n     * the two rectangles do intersect.\n     */\n    IGeometry.calcSeparationAmount = function (rectA, rectB, overlapAmount, separationBuffer) {\n      if (!rectA.intersects(rectB)) {\n        throw \"assert failed\";\n      }\n      var directions = new Array(2);\n      this.decideDirectionsForOverlappingNodes(rectA, rectB, directions);\n      overlapAmount[0] = Math.min(rectA.getRight(), rectB.getRight()) - Math.max(rectA.x, rectB.x);\n      overlapAmount[1] = Math.min(rectA.getBottom(), rectB.getBottom()) - Math.max(rectA.y, rectB.y);\n\n      // update the overlapping amounts for the following cases:\n      if (rectA.getX() <= rectB.getX() && rectA.getRight() >= rectB.getRight()) {\n        /* Case x.1:\n        *\n        * rectA\n        * \t|                       |\n        * \t|        _________      |\n        * \t|        |       |      |\n        * \t|________|_______|______|\n        * \t\t\t |       |\n        *           |       |\n        *        rectB\n        */\n        overlapAmount[0] += Math.min(rectB.getX() - rectA.getX(), rectA.getRight() - rectB.getRight());\n      } else if (rectB.getX() <= rectA.getX() && rectB.getRight() >= rectA.getRight()) {\n        /* Case x.2:\n        *\n        * rectB\n        * \t|                       |\n        * \t|        _________      |\n        * \t|        |       |      |\n        * \t|________|_______|______|\n        * \t\t\t |       |\n        *           |       |\n        *        rectA\n        */\n        overlapAmount[0] += Math.min(rectA.getX() - rectB.getX(), rectB.getRight() - rectA.getRight());\n      }\n      if (rectA.getY() <= rectB.getY() && rectA.getBottom() >= rectB.getBottom()) {\n        /* Case y.1:\n         *          ________ rectA\n         *         |\n         *         |\n         *   ______|____  rectB\n         *         |    |\n         *         |    |\n         *   ______|____|\n         *         |\n         *         |\n         *         |________\n         *\n         */\n        overlapAmount[1] += Math.min(rectB.getY() - rectA.getY(), rectA.getBottom() - rectB.getBottom());\n      } else if (rectB.getY() <= rectA.getY() && rectB.getBottom() >= rectA.getBottom()) {\n        /* Case y.2:\n        *          ________ rectB\n        *         |\n        *         |\n        *   ______|____  rectA\n        *         |    |\n        *         |    |\n        *   ______|____|\n        *         |\n        *         |\n        *         |________\n        *\n        */\n        overlapAmount[1] += Math.min(rectA.getY() - rectB.getY(), rectB.getBottom() - rectA.getBottom());\n      }\n\n      // find slope of the line passes two centers\n      var slope = Math.abs((rectB.getCenterY() - rectA.getCenterY()) / (rectB.getCenterX() - rectA.getCenterX()));\n      // if centers are overlapped\n      if (rectB.getCenterY() === rectA.getCenterY() && rectB.getCenterX() === rectA.getCenterX()) {\n        // assume the slope is 1 (45 degree)\n        slope = 1.0;\n      }\n      var moveByY = slope * overlapAmount[0];\n      var moveByX = overlapAmount[1] / slope;\n      if (overlapAmount[0] < moveByX) {\n        moveByX = overlapAmount[0];\n      } else {\n        moveByY = overlapAmount[1];\n      }\n      // return half the amount so that if each rectangle is moved by these\n      // amounts in opposite directions, overlap will be resolved\n      overlapAmount[0] = -1 * directions[0] * (moveByX / 2 + separationBuffer);\n      overlapAmount[1] = -1 * directions[1] * (moveByY / 2 + separationBuffer);\n    };\n\n    /**\n     * This method decides the separation direction of overlapping nodes\n     *\n     * if directions[0] = -1, then rectA goes left\n     * if directions[0] = 1,  then rectA goes right\n     * if directions[1] = -1, then rectA goes up\n     * if directions[1] = 1,  then rectA goes down\n     */\n    IGeometry.decideDirectionsForOverlappingNodes = function (rectA, rectB, directions) {\n      if (rectA.getCenterX() < rectB.getCenterX()) {\n        directions[0] = -1;\n      } else {\n        directions[0] = 1;\n      }\n      if (rectA.getCenterY() < rectB.getCenterY()) {\n        directions[1] = -1;\n      } else {\n        directions[1] = 1;\n      }\n    };\n\n    /**\n     * This method calculates the intersection (clipping) points of the two\n     * input rectangles with line segment defined by the centers of these two\n     * rectangles. The clipping points are saved in the input double array and\n     * whether or not the two rectangles overlap is returned.\n     */\n    IGeometry.getIntersection2 = function (rectA, rectB, result) {\n      //result[0-1] will contain clipPoint of rectA, result[2-3] will contain clipPoint of rectB\n      var p1x = rectA.getCenterX();\n      var p1y = rectA.getCenterY();\n      var p2x = rectB.getCenterX();\n      var p2y = rectB.getCenterY();\n\n      //if two rectangles intersect, then clipping points are centers\n      if (rectA.intersects(rectB)) {\n        result[0] = p1x;\n        result[1] = p1y;\n        result[2] = p2x;\n        result[3] = p2y;\n        return true;\n      }\n      //variables for rectA\n      var topLeftAx = rectA.getX();\n      var topLeftAy = rectA.getY();\n      var topRightAx = rectA.getRight();\n      var bottomLeftAx = rectA.getX();\n      var bottomLeftAy = rectA.getBottom();\n      var bottomRightAx = rectA.getRight();\n      var halfWidthA = rectA.getWidthHalf();\n      var halfHeightA = rectA.getHeightHalf();\n      //variables for rectB\n      var topLeftBx = rectB.getX();\n      var topLeftBy = rectB.getY();\n      var topRightBx = rectB.getRight();\n      var bottomLeftBx = rectB.getX();\n      var bottomLeftBy = rectB.getBottom();\n      var bottomRightBx = rectB.getRight();\n      var halfWidthB = rectB.getWidthHalf();\n      var halfHeightB = rectB.getHeightHalf();\n\n      //flag whether clipping points are found\n      var clipPointAFound = false;\n      var clipPointBFound = false;\n\n      // line is vertical\n      if (p1x === p2x) {\n        if (p1y > p2y) {\n          result[0] = p1x;\n          result[1] = topLeftAy;\n          result[2] = p2x;\n          result[3] = bottomLeftBy;\n          return false;\n        } else if (p1y < p2y) {\n          result[0] = p1x;\n          result[1] = bottomLeftAy;\n          result[2] = p2x;\n          result[3] = topLeftBy;\n          return false;\n        } else {\n          //not line, return null;\n        }\n      }\n      // line is horizontal\n      else if (p1y === p2y) {\n        if (p1x > p2x) {\n          result[0] = topLeftAx;\n          result[1] = p1y;\n          result[2] = topRightBx;\n          result[3] = p2y;\n          return false;\n        } else if (p1x < p2x) {\n          result[0] = topRightAx;\n          result[1] = p1y;\n          result[2] = topLeftBx;\n          result[3] = p2y;\n          return false;\n        } else {\n          //not valid line, return null;\n        }\n      } else {\n        //slopes of rectA's and rectB's diagonals\n        var slopeA = rectA.height / rectA.width;\n        var slopeB = rectB.height / rectB.width;\n\n        //slope of line between center of rectA and center of rectB\n        var slopePrime = (p2y - p1y) / (p2x - p1x);\n        var cardinalDirectionA = void 0;\n        var cardinalDirectionB = void 0;\n        var tempPointAx = void 0;\n        var tempPointAy = void 0;\n        var tempPointBx = void 0;\n        var tempPointBy = void 0;\n\n        //determine whether clipping point is the corner of nodeA\n        if (-slopeA === slopePrime) {\n          if (p1x > p2x) {\n            result[0] = bottomLeftAx;\n            result[1] = bottomLeftAy;\n            clipPointAFound = true;\n          } else {\n            result[0] = topRightAx;\n            result[1] = topLeftAy;\n            clipPointAFound = true;\n          }\n        } else if (slopeA === slopePrime) {\n          if (p1x > p2x) {\n            result[0] = topLeftAx;\n            result[1] = topLeftAy;\n            clipPointAFound = true;\n          } else {\n            result[0] = bottomRightAx;\n            result[1] = bottomLeftAy;\n            clipPointAFound = true;\n          }\n        }\n\n        //determine whether clipping point is the corner of nodeB\n        if (-slopeB === slopePrime) {\n          if (p2x > p1x) {\n            result[2] = bottomLeftBx;\n            result[3] = bottomLeftBy;\n            clipPointBFound = true;\n          } else {\n            result[2] = topRightBx;\n            result[3] = topLeftBy;\n            clipPointBFound = true;\n          }\n        } else if (slopeB === slopePrime) {\n          if (p2x > p1x) {\n            result[2] = topLeftBx;\n            result[3] = topLeftBy;\n            clipPointBFound = true;\n          } else {\n            result[2] = bottomRightBx;\n            result[3] = bottomLeftBy;\n            clipPointBFound = true;\n          }\n        }\n\n        //if both clipping points are corners\n        if (clipPointAFound && clipPointBFound) {\n          return false;\n        }\n\n        //determine Cardinal Direction of rectangles\n        if (p1x > p2x) {\n          if (p1y > p2y) {\n            cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 4);\n            cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 2);\n          } else {\n            cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 3);\n            cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 1);\n          }\n        } else {\n          if (p1y > p2y) {\n            cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 1);\n            cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 3);\n          } else {\n            cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 2);\n            cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 4);\n          }\n        }\n        //calculate clipping Point if it is not found before\n        if (!clipPointAFound) {\n          switch (cardinalDirectionA) {\n            case 1:\n              tempPointAy = topLeftAy;\n              tempPointAx = p1x + -halfHeightA / slopePrime;\n              result[0] = tempPointAx;\n              result[1] = tempPointAy;\n              break;\n            case 2:\n              tempPointAx = bottomRightAx;\n              tempPointAy = p1y + halfWidthA * slopePrime;\n              result[0] = tempPointAx;\n              result[1] = tempPointAy;\n              break;\n            case 3:\n              tempPointAy = bottomLeftAy;\n              tempPointAx = p1x + halfHeightA / slopePrime;\n              result[0] = tempPointAx;\n              result[1] = tempPointAy;\n              break;\n            case 4:\n              tempPointAx = bottomLeftAx;\n              tempPointAy = p1y + -halfWidthA * slopePrime;\n              result[0] = tempPointAx;\n              result[1] = tempPointAy;\n              break;\n          }\n        }\n        if (!clipPointBFound) {\n          switch (cardinalDirectionB) {\n            case 1:\n              tempPointBy = topLeftBy;\n              tempPointBx = p2x + -halfHeightB / slopePrime;\n              result[2] = tempPointBx;\n              result[3] = tempPointBy;\n              break;\n            case 2:\n              tempPointBx = bottomRightBx;\n              tempPointBy = p2y + halfWidthB * slopePrime;\n              result[2] = tempPointBx;\n              result[3] = tempPointBy;\n              break;\n            case 3:\n              tempPointBy = bottomLeftBy;\n              tempPointBx = p2x + halfHeightB / slopePrime;\n              result[2] = tempPointBx;\n              result[3] = tempPointBy;\n              break;\n            case 4:\n              tempPointBx = bottomLeftBx;\n              tempPointBy = p2y + -halfWidthB * slopePrime;\n              result[2] = tempPointBx;\n              result[3] = tempPointBy;\n              break;\n          }\n        }\n      }\n      return false;\n    };\n\n    /**\n     * This method returns in which cardinal direction does input point stays\n     * 1: North\n     * 2: East\n     * 3: South\n     * 4: West\n     */\n    IGeometry.getCardinalDirection = function (slope, slopePrime, line) {\n      if (slope > slopePrime) {\n        return line;\n      } else {\n        return 1 + line % 4;\n      }\n    };\n\n    /**\n     * This method calculates the intersection of the two lines defined by\n     * point pairs (s1,s2) and (f1,f2).\n     */\n    IGeometry.getIntersection = function (s1, s2, f1, f2) {\n      if (f2 == null) {\n        return this.getIntersection2(s1, s2, f1);\n      }\n      var x1 = s1.x;\n      var y1 = s1.y;\n      var x2 = s2.x;\n      var y2 = s2.y;\n      var x3 = f1.x;\n      var y3 = f1.y;\n      var x4 = f2.x;\n      var y4 = f2.y;\n      var x = void 0,\n        y = void 0; // intersection point\n      var a1 = void 0,\n        a2 = void 0,\n        b1 = void 0,\n        b2 = void 0,\n        c1 = void 0,\n        c2 = void 0; // coefficients of line eqns.\n      var denom = void 0;\n      a1 = y2 - y1;\n      b1 = x1 - x2;\n      c1 = x2 * y1 - x1 * y2; // { a1*x + b1*y + c1 = 0 is line 1 }\n\n      a2 = y4 - y3;\n      b2 = x3 - x4;\n      c2 = x4 * y3 - x3 * y4; // { a2*x + b2*y + c2 = 0 is line 2 }\n\n      denom = a1 * b2 - a2 * b1;\n      if (denom === 0) {\n        return null;\n      }\n      x = (b1 * c2 - b2 * c1) / denom;\n      y = (a2 * c1 - a1 * c2) / denom;\n      return new Point(x, y);\n    };\n\n    /**\n     * This method finds and returns the angle of the vector from the + x-axis\n     * in clockwise direction (compatible w/ Java coordinate system!).\n     */\n    IGeometry.angleOfVector = function (Cx, Cy, Nx, Ny) {\n      var C_angle = void 0;\n      if (Cx !== Nx) {\n        C_angle = Math.atan((Ny - Cy) / (Nx - Cx));\n        if (Nx < Cx) {\n          C_angle += Math.PI;\n        } else if (Ny < Cy) {\n          C_angle += this.TWO_PI;\n        }\n      } else if (Ny < Cy) {\n        C_angle = this.ONE_AND_HALF_PI; // 270 degrees\n      } else {\n        C_angle = this.HALF_PI; // 90 degrees\n      }\n      return C_angle;\n    };\n\n    /**\n     * This method checks whether the given two line segments (one with point\n     * p1 and p2, the other with point p3 and p4) intersect at a point other\n     * than these points.\n     */\n    IGeometry.doIntersect = function (p1, p2, p3, p4) {\n      var a = p1.x;\n      var b = p1.y;\n      var c = p2.x;\n      var d = p2.y;\n      var p = p3.x;\n      var q = p3.y;\n      var r = p4.x;\n      var s = p4.y;\n      var det = (c - a) * (s - q) - (r - p) * (d - b);\n      if (det === 0) {\n        return false;\n      } else {\n        var lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n        var gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n        return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n      }\n    };\n\n    // -----------------------------------------------------------------------------\n    // Section: Class Constants\n    // -----------------------------------------------------------------------------\n    /**\n     * Some useful pre-calculated constants\n     */\n    IGeometry.HALF_PI = 0.5 * Math.PI;\n    IGeometry.ONE_AND_HALF_PI = 1.5 * Math.PI;\n    IGeometry.TWO_PI = 2.0 * Math.PI;\n    IGeometry.THREE_PI = 3.0 * Math.PI;\n    module.exports = IGeometry;\n\n    /***/\n  }), (/* 9 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function IMath() {}\n\n    /**\n     * This method returns the sign of the input value.\n     */\n    IMath.sign = function (value) {\n      if (value > 0) {\n        return 1;\n      } else if (value < 0) {\n        return -1;\n      } else {\n        return 0;\n      }\n    };\n    IMath.floor = function (value) {\n      return value < 0 ? Math.ceil(value) : Math.floor(value);\n    };\n    IMath.ceil = function (value) {\n      return value < 0 ? Math.floor(value) : Math.ceil(value);\n    };\n    module.exports = IMath;\n\n    /***/\n  }), (/* 10 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function Integer() {}\n    Integer.MAX_VALUE = 2147483647;\n    Integer.MIN_VALUE = -2147483648;\n    module.exports = Integer;\n\n    /***/\n  }), (/* 11 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var _createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n    var nodeFrom = function nodeFrom(value) {\n      return {\n        value: value,\n        next: null,\n        prev: null\n      };\n    };\n    var add = function add(prev, node, next, list) {\n      if (prev !== null) {\n        prev.next = node;\n      } else {\n        list.head = node;\n      }\n      if (next !== null) {\n        next.prev = node;\n      } else {\n        list.tail = node;\n      }\n      node.prev = prev;\n      node.next = next;\n      list.length++;\n      return node;\n    };\n    var _remove = function _remove(node, list) {\n      var prev = node.prev,\n        next = node.next;\n      if (prev !== null) {\n        prev.next = next;\n      } else {\n        list.head = next;\n      }\n      if (next !== null) {\n        next.prev = prev;\n      } else {\n        list.tail = prev;\n      }\n      node.prev = node.next = null;\n      list.length--;\n      return node;\n    };\n    var LinkedList = function () {\n      function LinkedList(vals) {\n        var _this = this;\n        _classCallCheck(this, LinkedList);\n        this.length = 0;\n        this.head = null;\n        this.tail = null;\n        if (vals != null) {\n          vals.forEach(function (v) {\n            return _this.push(v);\n          });\n        }\n      }\n      _createClass(LinkedList, [{\n        key: \"size\",\n        value: function size() {\n          return this.length;\n        }\n      }, {\n        key: \"insertBefore\",\n        value: function insertBefore(val, otherNode) {\n          return add(otherNode.prev, nodeFrom(val), otherNode, this);\n        }\n      }, {\n        key: \"insertAfter\",\n        value: function insertAfter(val, otherNode) {\n          return add(otherNode, nodeFrom(val), otherNode.next, this);\n        }\n      }, {\n        key: \"insertNodeBefore\",\n        value: function insertNodeBefore(newNode, otherNode) {\n          return add(otherNode.prev, newNode, otherNode, this);\n        }\n      }, {\n        key: \"insertNodeAfter\",\n        value: function insertNodeAfter(newNode, otherNode) {\n          return add(otherNode, newNode, otherNode.next, this);\n        }\n      }, {\n        key: \"push\",\n        value: function push(val) {\n          return add(this.tail, nodeFrom(val), null, this);\n        }\n      }, {\n        key: \"unshift\",\n        value: function unshift(val) {\n          return add(null, nodeFrom(val), this.head, this);\n        }\n      }, {\n        key: \"remove\",\n        value: function remove(node) {\n          return _remove(node, this);\n        }\n      }, {\n        key: \"pop\",\n        value: function pop() {\n          return _remove(this.tail, this).value;\n        }\n      }, {\n        key: \"popNode\",\n        value: function popNode() {\n          return _remove(this.tail, this);\n        }\n      }, {\n        key: \"shift\",\n        value: function shift() {\n          return _remove(this.head, this).value;\n        }\n      }, {\n        key: \"shiftNode\",\n        value: function shiftNode() {\n          return _remove(this.head, this);\n        }\n      }, {\n        key: \"get_object_at\",\n        value: function get_object_at(index) {\n          if (index <= this.length()) {\n            var i = 1;\n            var current = this.head;\n            while (i < index) {\n              current = current.next;\n              i++;\n            }\n            return current.value;\n          }\n        }\n      }, {\n        key: \"set_object_at\",\n        value: function set_object_at(index, value) {\n          if (index <= this.length()) {\n            var i = 1;\n            var current = this.head;\n            while (i < index) {\n              current = current.next;\n              i++;\n            }\n            current.value = value;\n          }\n        }\n      }]);\n      return LinkedList;\n    }();\n    module.exports = LinkedList;\n\n    /***/\n  }), (/* 12 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    /*\r\n     *This class is the javascript implementation of the Point.java class in jdk\r\n     */\n    function Point(x, y, p) {\n      this.x = null;\n      this.y = null;\n      if (x == null && y == null && p == null) {\n        this.x = 0;\n        this.y = 0;\n      } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n        this.x = x;\n        this.y = y;\n      } else if (x.constructor.name == 'Point' && y == null && p == null) {\n        p = x;\n        this.x = p.x;\n        this.y = p.y;\n      }\n    }\n    Point.prototype.getX = function () {\n      return this.x;\n    };\n    Point.prototype.getY = function () {\n      return this.y;\n    };\n    Point.prototype.getLocation = function () {\n      return new Point(this.x, this.y);\n    };\n    Point.prototype.setLocation = function (x, y, p) {\n      if (x.constructor.name == 'Point' && y == null && p == null) {\n        p = x;\n        this.setLocation(p.x, p.y);\n      } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n        //if both parameters are integer just move (x,y) location\n        if (parseInt(x) == x && parseInt(y) == y) {\n          this.move(x, y);\n        } else {\n          this.x = Math.floor(x + 0.5);\n          this.y = Math.floor(y + 0.5);\n        }\n      }\n    };\n    Point.prototype.move = function (x, y) {\n      this.x = x;\n      this.y = y;\n    };\n    Point.prototype.translate = function (dx, dy) {\n      this.x += dx;\n      this.y += dy;\n    };\n    Point.prototype.equals = function (obj) {\n      if (obj.constructor.name == \"Point\") {\n        var pt = obj;\n        return this.x == pt.x && this.y == pt.y;\n      }\n      return this == obj;\n    };\n    Point.prototype.toString = function () {\n      return new Point().constructor.name + \"[x=\" + this.x + \",y=\" + this.y + \"]\";\n    };\n    module.exports = Point;\n\n    /***/\n  }), (/* 13 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function RectangleD(x, y, width, height) {\n      this.x = 0;\n      this.y = 0;\n      this.width = 0;\n      this.height = 0;\n      if (x != null && y != null && width != null && height != null) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n      }\n    }\n    RectangleD.prototype.getX = function () {\n      return this.x;\n    };\n    RectangleD.prototype.setX = function (x) {\n      this.x = x;\n    };\n    RectangleD.prototype.getY = function () {\n      return this.y;\n    };\n    RectangleD.prototype.setY = function (y) {\n      this.y = y;\n    };\n    RectangleD.prototype.getWidth = function () {\n      return this.width;\n    };\n    RectangleD.prototype.setWidth = function (width) {\n      this.width = width;\n    };\n    RectangleD.prototype.getHeight = function () {\n      return this.height;\n    };\n    RectangleD.prototype.setHeight = function (height) {\n      this.height = height;\n    };\n    RectangleD.prototype.getRight = function () {\n      return this.x + this.width;\n    };\n    RectangleD.prototype.getBottom = function () {\n      return this.y + this.height;\n    };\n    RectangleD.prototype.intersects = function (a) {\n      if (this.getRight() < a.x) {\n        return false;\n      }\n      if (this.getBottom() < a.y) {\n        return false;\n      }\n      if (a.getRight() < this.x) {\n        return false;\n      }\n      if (a.getBottom() < this.y) {\n        return false;\n      }\n      return true;\n    };\n    RectangleD.prototype.getCenterX = function () {\n      return this.x + this.width / 2;\n    };\n    RectangleD.prototype.getMinX = function () {\n      return this.getX();\n    };\n    RectangleD.prototype.getMaxX = function () {\n      return this.getX() + this.width;\n    };\n    RectangleD.prototype.getCenterY = function () {\n      return this.y + this.height / 2;\n    };\n    RectangleD.prototype.getMinY = function () {\n      return this.getY();\n    };\n    RectangleD.prototype.getMaxY = function () {\n      return this.getY() + this.height;\n    };\n    RectangleD.prototype.getWidthHalf = function () {\n      return this.width / 2;\n    };\n    RectangleD.prototype.getHeightHalf = function () {\n      return this.height / 2;\n    };\n    module.exports = RectangleD;\n\n    /***/\n  }), (/* 14 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    function UniqueIDGeneretor() {}\n    UniqueIDGeneretor.lastID = 0;\n    UniqueIDGeneretor.createID = function (obj) {\n      if (UniqueIDGeneretor.isPrimitive(obj)) {\n        return obj;\n      }\n      if (obj.uniqueID != null) {\n        return obj.uniqueID;\n      }\n      obj.uniqueID = UniqueIDGeneretor.getString();\n      UniqueIDGeneretor.lastID++;\n      return obj.uniqueID;\n    };\n    UniqueIDGeneretor.getString = function (id) {\n      if (id == null) id = UniqueIDGeneretor.lastID;\n      return \"Object#\" + id + \"\";\n    };\n    UniqueIDGeneretor.isPrimitive = function (arg) {\n      var type = typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg);\n      return arg == null || type != \"object\" && type != \"function\";\n    };\n    module.exports = UniqueIDGeneretor;\n\n    /***/\n  }), (/* 15 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function _toConsumableArray(arr) {\n      if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      } else {\n        return Array.from(arr);\n      }\n    }\n    var LayoutConstants = __webpack_require__(0);\n    var LGraphManager = __webpack_require__(6);\n    var LNode = __webpack_require__(3);\n    var LEdge = __webpack_require__(1);\n    var LGraph = __webpack_require__(5);\n    var PointD = __webpack_require__(4);\n    var Transform = __webpack_require__(17);\n    var Emitter = __webpack_require__(27);\n    function Layout(isRemoteUse) {\n      Emitter.call(this);\n\n      //Layout Quality: 0:draft, 1:default, 2:proof\n      this.layoutQuality = LayoutConstants.QUALITY;\n      //Whether layout should create bendpoints as needed or not\n      this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n      //Whether layout should be incremental or not\n      this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n      //Whether we animate from before to after layout node positions\n      this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n      //Whether we animate the layout process or not\n      this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n      //Number iterations that should be done between two successive animations\n      this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n      /**\r\n       * Whether or not leaf nodes (non-compound nodes) are of uniform sizes. When\r\n       * they are, both spring and repulsion forces between two leaf nodes can be\r\n       * calculated without the expensive clipping point calculations, resulting\r\n       * in major speed-up.\r\n       */\n      this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n      /**\r\n       * This is used for creation of bendpoints by using dummy nodes and edges.\r\n       * Maps an LEdge to its dummy bendpoint path.\r\n       */\n      this.edgeToDummyNodes = new Map();\n      this.graphManager = new LGraphManager(this);\n      this.isLayoutFinished = false;\n      this.isSubLayout = false;\n      this.isRemoteUse = false;\n      if (isRemoteUse != null) {\n        this.isRemoteUse = isRemoteUse;\n      }\n    }\n    Layout.RANDOM_SEED = 1;\n    Layout.prototype = Object.create(Emitter.prototype);\n    Layout.prototype.getGraphManager = function () {\n      return this.graphManager;\n    };\n    Layout.prototype.getAllNodes = function () {\n      return this.graphManager.getAllNodes();\n    };\n    Layout.prototype.getAllEdges = function () {\n      return this.graphManager.getAllEdges();\n    };\n    Layout.prototype.getAllNodesToApplyGravitation = function () {\n      return this.graphManager.getAllNodesToApplyGravitation();\n    };\n    Layout.prototype.newGraphManager = function () {\n      var gm = new LGraphManager(this);\n      this.graphManager = gm;\n      return gm;\n    };\n    Layout.prototype.newGraph = function (vGraph) {\n      return new LGraph(null, this.graphManager, vGraph);\n    };\n    Layout.prototype.newNode = function (vNode) {\n      return new LNode(this.graphManager, vNode);\n    };\n    Layout.prototype.newEdge = function (vEdge) {\n      return new LEdge(null, null, vEdge);\n    };\n    Layout.prototype.checkLayoutSuccess = function () {\n      return this.graphManager.getRoot() == null || this.graphManager.getRoot().getNodes().length == 0 || this.graphManager.includesInvalidEdge();\n    };\n    Layout.prototype.runLayout = function () {\n      this.isLayoutFinished = false;\n      if (this.tilingPreLayout) {\n        this.tilingPreLayout();\n      }\n      this.initParameters();\n      var isLayoutSuccessfull;\n      if (this.checkLayoutSuccess()) {\n        isLayoutSuccessfull = false;\n      } else {\n        isLayoutSuccessfull = this.layout();\n      }\n      if (LayoutConstants.ANIMATE === 'during') {\n        // If this is a 'during' layout animation. Layout is not finished yet. \n        // We need to perform these in index.js when layout is really finished.\n        return false;\n      }\n      if (isLayoutSuccessfull) {\n        if (!this.isSubLayout) {\n          this.doPostLayout();\n        }\n      }\n      if (this.tilingPostLayout) {\n        this.tilingPostLayout();\n      }\n      this.isLayoutFinished = true;\n      return isLayoutSuccessfull;\n    };\n\n    /**\r\n     * This method performs the operations required after layout.\r\n     */\n    Layout.prototype.doPostLayout = function () {\n      //assert !isSubLayout : \"Should not be called on sub-layout!\";\n      // Propagate geometric changes to v-level objects\n      if (!this.incremental) {\n        this.transform();\n      }\n      this.update();\n    };\n\n    /**\r\n     * This method updates the geometry of the target graph according to\r\n     * calculated layout.\r\n     */\n    Layout.prototype.update2 = function () {\n      // update bend points\n      if (this.createBendsAsNeeded) {\n        this.createBendpointsFromDummyNodes();\n\n        // reset all edges, since the topology has changed\n        this.graphManager.resetAllEdges();\n      }\n\n      // perform edge, node and root updates if layout is not called\n      // remotely\n      if (!this.isRemoteUse) {\n        // update all edges\n        var edge;\n        var allEdges = this.graphManager.getAllEdges();\n        for (var i = 0; i < allEdges.length; i++) {\n          edge = allEdges[i];\n          //      this.update(edge);\n        }\n\n        // recursively update nodes\n        var node;\n        var nodes = this.graphManager.getRoot().getNodes();\n        for (var i = 0; i < nodes.length; i++) {\n          node = nodes[i];\n          //      this.update(node);\n        }\n\n        // update root graph\n        this.update(this.graphManager.getRoot());\n      }\n    };\n    Layout.prototype.update = function (obj) {\n      if (obj == null) {\n        this.update2();\n      } else if (obj instanceof LNode) {\n        var node = obj;\n        if (node.getChild() != null) {\n          // since node is compound, recursively update child nodes\n          var nodes = node.getChild().getNodes();\n          for (var i = 0; i < nodes.length; i++) {\n            update(nodes[i]);\n          }\n        }\n\n        // if the l-level node is associated with a v-level graph object,\n        // then it is assumed that the v-level node implements the\n        // interface Updatable.\n        if (node.vGraphObject != null) {\n          // cast to Updatable without any type check\n          var vNode = node.vGraphObject;\n\n          // call the update method of the interface\n          vNode.update(node);\n        }\n      } else if (obj instanceof LEdge) {\n        var edge = obj;\n        // if the l-level edge is associated with a v-level graph object,\n        // then it is assumed that the v-level edge implements the\n        // interface Updatable.\n\n        if (edge.vGraphObject != null) {\n          // cast to Updatable without any type check\n          var vEdge = edge.vGraphObject;\n\n          // call the update method of the interface\n          vEdge.update(edge);\n        }\n      } else if (obj instanceof LGraph) {\n        var graph = obj;\n        // if the l-level graph is associated with a v-level graph object,\n        // then it is assumed that the v-level object implements the\n        // interface Updatable.\n\n        if (graph.vGraphObject != null) {\n          // cast to Updatable without any type check\n          var vGraph = graph.vGraphObject;\n\n          // call the update method of the interface\n          vGraph.update(graph);\n        }\n      }\n    };\n\n    /**\r\n     * This method is used to set all layout parameters to default values\r\n     * determined at compile time.\r\n     */\n    Layout.prototype.initParameters = function () {\n      if (!this.isSubLayout) {\n        this.layoutQuality = LayoutConstants.QUALITY;\n        this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n        this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n        this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n        this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n        this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n        this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n      }\n      if (this.animationDuringLayout) {\n        this.animationOnLayout = false;\n      }\n    };\n    Layout.prototype.transform = function (newLeftTop) {\n      if (newLeftTop == undefined) {\n        this.transform(new PointD(0, 0));\n      } else {\n        // create a transformation object (from Eclipse to layout). When an\n        // inverse transform is applied, we get upper-left coordinate of the\n        // drawing or the root graph at given input coordinate (some margins\n        // already included in calculation of left-top).\n\n        var trans = new Transform();\n        var leftTop = this.graphManager.getRoot().updateLeftTop();\n        if (leftTop != null) {\n          trans.setWorldOrgX(newLeftTop.x);\n          trans.setWorldOrgY(newLeftTop.y);\n          trans.setDeviceOrgX(leftTop.x);\n          trans.setDeviceOrgY(leftTop.y);\n          var nodes = this.getAllNodes();\n          var node;\n          for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            node.transform(trans);\n          }\n        }\n      }\n    };\n    Layout.prototype.positionNodesRandomly = function (graph) {\n      if (graph == undefined) {\n        //assert !this.incremental;\n        this.positionNodesRandomly(this.getGraphManager().getRoot());\n        this.getGraphManager().getRoot().updateBounds(true);\n      } else {\n        var lNode;\n        var childGraph;\n        var nodes = graph.getNodes();\n        for (var i = 0; i < nodes.length; i++) {\n          lNode = nodes[i];\n          childGraph = lNode.getChild();\n          if (childGraph == null) {\n            lNode.scatter();\n          } else if (childGraph.getNodes().length == 0) {\n            lNode.scatter();\n          } else {\n            this.positionNodesRandomly(childGraph);\n            lNode.updateBounds();\n          }\n        }\n      }\n    };\n\n    /**\r\n     * This method returns a list of trees where each tree is represented as a\r\n     * list of l-nodes. The method returns a list of size 0 when:\r\n     * - The graph is not flat or\r\n     * - One of the component(s) of the graph is not a tree.\r\n     */\n    Layout.prototype.getFlatForest = function () {\n      var flatForest = [];\n      var isForest = true;\n\n      // Quick reference for all nodes in the graph manager associated with\n      // this layout. The list should not be changed.\n      var allNodes = this.graphManager.getRoot().getNodes();\n\n      // First be sure that the graph is flat\n      var isFlat = true;\n      for (var i = 0; i < allNodes.length; i++) {\n        if (allNodes[i].getChild() != null) {\n          isFlat = false;\n        }\n      }\n\n      // Return empty forest if the graph is not flat.\n      if (!isFlat) {\n        return flatForest;\n      }\n\n      // Run BFS for each component of the graph.\n\n      var visited = new Set();\n      var toBeVisited = [];\n      var parents = new Map();\n      var unProcessedNodes = [];\n      unProcessedNodes = unProcessedNodes.concat(allNodes);\n\n      // Each iteration of this loop finds a component of the graph and\n      // decides whether it is a tree or not. If it is a tree, adds it to the\n      // forest and continued with the next component.\n\n      while (unProcessedNodes.length > 0 && isForest) {\n        toBeVisited.push(unProcessedNodes[0]);\n\n        // Start the BFS. Each iteration of this loop visits a node in a\n        // BFS manner.\n        while (toBeVisited.length > 0 && isForest) {\n          //pool operation\n          var currentNode = toBeVisited[0];\n          toBeVisited.splice(0, 1);\n          visited.add(currentNode);\n\n          // Traverse all neighbors of this node\n          var neighborEdges = currentNode.getEdges();\n          for (var i = 0; i < neighborEdges.length; i++) {\n            var currentNeighbor = neighborEdges[i].getOtherEnd(currentNode);\n\n            // If BFS is not growing from this neighbor.\n            if (parents.get(currentNode) != currentNeighbor) {\n              // We haven't previously visited this neighbor.\n              if (!visited.has(currentNeighbor)) {\n                toBeVisited.push(currentNeighbor);\n                parents.set(currentNeighbor, currentNode);\n              }\n              // Since we have previously visited this neighbor and\n              // this neighbor is not parent of currentNode, given\n              // graph contains a component that is not tree, hence\n              // it is not a forest.\n              else {\n                isForest = false;\n                break;\n              }\n            }\n          }\n        }\n\n        // The graph contains a component that is not a tree. Empty\n        // previously found trees. The method will end.\n        if (!isForest) {\n          flatForest = [];\n        }\n        // Save currently visited nodes as a tree in our forest. Reset\n        // visited and parents lists. Continue with the next component of\n        // the graph, if any.\n        else {\n          var temp = [].concat(_toConsumableArray(visited));\n          flatForest.push(temp);\n          //flatForest = flatForest.concat(temp);\n          //unProcessedNodes.removeAll(visited);\n          for (var i = 0; i < temp.length; i++) {\n            var value = temp[i];\n            var index = unProcessedNodes.indexOf(value);\n            if (index > -1) {\n              unProcessedNodes.splice(index, 1);\n            }\n          }\n          visited = new Set();\n          parents = new Map();\n        }\n      }\n      return flatForest;\n    };\n\n    /**\r\n     * This method creates dummy nodes (an l-level node with minimal dimensions)\r\n     * for the given edge (one per bendpoint). The existing l-level structure\r\n     * is updated accordingly.\r\n     */\n    Layout.prototype.createDummyNodesForBendpoints = function (edge) {\n      var dummyNodes = [];\n      var prev = edge.source;\n      var graph = this.graphManager.calcLowestCommonAncestor(edge.source, edge.target);\n      for (var i = 0; i < edge.bendpoints.length; i++) {\n        // create new dummy node\n        var dummyNode = this.newNode(null);\n        dummyNode.setRect(new Point(0, 0), new Dimension(1, 1));\n        graph.add(dummyNode);\n\n        // create new dummy edge between prev and dummy node\n        var dummyEdge = this.newEdge(null);\n        this.graphManager.add(dummyEdge, prev, dummyNode);\n        dummyNodes.add(dummyNode);\n        prev = dummyNode;\n      }\n      var dummyEdge = this.newEdge(null);\n      this.graphManager.add(dummyEdge, prev, edge.target);\n      this.edgeToDummyNodes.set(edge, dummyNodes);\n\n      // remove real edge from graph manager if it is inter-graph\n      if (edge.isInterGraph()) {\n        this.graphManager.remove(edge);\n      }\n      // else, remove the edge from the current graph\n      else {\n        graph.remove(edge);\n      }\n      return dummyNodes;\n    };\n\n    /**\r\n     * This method creates bendpoints for edges from the dummy nodes\r\n     * at l-level.\r\n     */\n    Layout.prototype.createBendpointsFromDummyNodes = function () {\n      var edges = [];\n      edges = edges.concat(this.graphManager.getAllEdges());\n      edges = [].concat(_toConsumableArray(this.edgeToDummyNodes.keys())).concat(edges);\n      for (var k = 0; k < edges.length; k++) {\n        var lEdge = edges[k];\n        if (lEdge.bendpoints.length > 0) {\n          var path = this.edgeToDummyNodes.get(lEdge);\n          for (var i = 0; i < path.length; i++) {\n            var dummyNode = path[i];\n            var p = new PointD(dummyNode.getCenterX(), dummyNode.getCenterY());\n\n            // update bendpoint's location according to dummy node\n            var ebp = lEdge.bendpoints.get(i);\n            ebp.x = p.x;\n            ebp.y = p.y;\n\n            // remove the dummy node, dummy edges incident with this\n            // dummy node is also removed (within the remove method)\n            dummyNode.getOwner().remove(dummyNode);\n          }\n\n          // add the real edge to graph\n          this.graphManager.add(lEdge, lEdge.source, lEdge.target);\n        }\n      }\n    };\n    Layout.transform = function (sliderValue, defaultValue, minDiv, maxMul) {\n      if (minDiv != undefined && maxMul != undefined) {\n        var value = defaultValue;\n        if (sliderValue <= 50) {\n          var minValue = defaultValue / minDiv;\n          value -= (defaultValue - minValue) / 50 * (50 - sliderValue);\n        } else {\n          var maxValue = defaultValue * maxMul;\n          value += (maxValue - defaultValue) / 50 * (sliderValue - 50);\n        }\n        return value;\n      } else {\n        var a, b;\n        if (sliderValue <= 50) {\n          a = 9.0 * defaultValue / 500.0;\n          b = defaultValue / 10.0;\n        } else {\n          a = 9.0 * defaultValue / 50.0;\n          b = -8 * defaultValue;\n        }\n        return a * sliderValue + b;\n      }\n    };\n\n    /**\r\n     * This method finds and returns the center of the given nodes, assuming\r\n     * that the given nodes form a tree in themselves.\r\n     */\n    Layout.findCenterOfTree = function (nodes) {\n      var list = [];\n      list = list.concat(nodes);\n      var removedNodes = [];\n      var remainingDegrees = new Map();\n      var foundCenter = false;\n      var centerNode = null;\n      if (list.length == 1 || list.length == 2) {\n        foundCenter = true;\n        centerNode = list[0];\n      }\n      for (var i = 0; i < list.length; i++) {\n        var node = list[i];\n        var degree = node.getNeighborsList().size;\n        remainingDegrees.set(node, node.getNeighborsList().size);\n        if (degree == 1) {\n          removedNodes.push(node);\n        }\n      }\n      var tempList = [];\n      tempList = tempList.concat(removedNodes);\n      while (!foundCenter) {\n        var tempList2 = [];\n        tempList2 = tempList2.concat(tempList);\n        tempList = [];\n        for (var i = 0; i < list.length; i++) {\n          var node = list[i];\n          var index = list.indexOf(node);\n          if (index >= 0) {\n            list.splice(index, 1);\n          }\n          var neighbours = node.getNeighborsList();\n          neighbours.forEach(function (neighbour) {\n            if (removedNodes.indexOf(neighbour) < 0) {\n              var otherDegree = remainingDegrees.get(neighbour);\n              var newDegree = otherDegree - 1;\n              if (newDegree == 1) {\n                tempList.push(neighbour);\n              }\n              remainingDegrees.set(neighbour, newDegree);\n            }\n          });\n        }\n        removedNodes = removedNodes.concat(tempList);\n        if (list.length == 1 || list.length == 2) {\n          foundCenter = true;\n          centerNode = list[0];\n        }\n      }\n      return centerNode;\n    };\n\n    /**\r\n     * During the coarsening process, this layout may be referenced by two graph managers\r\n     * this setter function grants access to change the currently being used graph manager\r\n     */\n    Layout.prototype.setGraphManager = function (gm) {\n      this.graphManager = gm;\n    };\n    module.exports = Layout;\n\n    /***/\n  }), (/* 16 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function RandomSeed() {}\n    // adapted from: https://stackoverflow.com/a/19303725\n    RandomSeed.seed = 1;\n    RandomSeed.x = 0;\n    RandomSeed.nextDouble = function () {\n      RandomSeed.x = Math.sin(RandomSeed.seed++) * 10000;\n      return RandomSeed.x - Math.floor(RandomSeed.x);\n    };\n    module.exports = RandomSeed;\n\n    /***/\n  }), (/* 17 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var PointD = __webpack_require__(4);\n    function Transform(x, y) {\n      this.lworldOrgX = 0.0;\n      this.lworldOrgY = 0.0;\n      this.ldeviceOrgX = 0.0;\n      this.ldeviceOrgY = 0.0;\n      this.lworldExtX = 1.0;\n      this.lworldExtY = 1.0;\n      this.ldeviceExtX = 1.0;\n      this.ldeviceExtY = 1.0;\n    }\n    Transform.prototype.getWorldOrgX = function () {\n      return this.lworldOrgX;\n    };\n    Transform.prototype.setWorldOrgX = function (wox) {\n      this.lworldOrgX = wox;\n    };\n    Transform.prototype.getWorldOrgY = function () {\n      return this.lworldOrgY;\n    };\n    Transform.prototype.setWorldOrgY = function (woy) {\n      this.lworldOrgY = woy;\n    };\n    Transform.prototype.getWorldExtX = function () {\n      return this.lworldExtX;\n    };\n    Transform.prototype.setWorldExtX = function (wex) {\n      this.lworldExtX = wex;\n    };\n    Transform.prototype.getWorldExtY = function () {\n      return this.lworldExtY;\n    };\n    Transform.prototype.setWorldExtY = function (wey) {\n      this.lworldExtY = wey;\n    };\n\n    /* Device related */\n\n    Transform.prototype.getDeviceOrgX = function () {\n      return this.ldeviceOrgX;\n    };\n    Transform.prototype.setDeviceOrgX = function (dox) {\n      this.ldeviceOrgX = dox;\n    };\n    Transform.prototype.getDeviceOrgY = function () {\n      return this.ldeviceOrgY;\n    };\n    Transform.prototype.setDeviceOrgY = function (doy) {\n      this.ldeviceOrgY = doy;\n    };\n    Transform.prototype.getDeviceExtX = function () {\n      return this.ldeviceExtX;\n    };\n    Transform.prototype.setDeviceExtX = function (dex) {\n      this.ldeviceExtX = dex;\n    };\n    Transform.prototype.getDeviceExtY = function () {\n      return this.ldeviceExtY;\n    };\n    Transform.prototype.setDeviceExtY = function (dey) {\n      this.ldeviceExtY = dey;\n    };\n    Transform.prototype.transformX = function (x) {\n      var xDevice = 0.0;\n      var worldExtX = this.lworldExtX;\n      if (worldExtX != 0.0) {\n        xDevice = this.ldeviceOrgX + (x - this.lworldOrgX) * this.ldeviceExtX / worldExtX;\n      }\n      return xDevice;\n    };\n    Transform.prototype.transformY = function (y) {\n      var yDevice = 0.0;\n      var worldExtY = this.lworldExtY;\n      if (worldExtY != 0.0) {\n        yDevice = this.ldeviceOrgY + (y - this.lworldOrgY) * this.ldeviceExtY / worldExtY;\n      }\n      return yDevice;\n    };\n    Transform.prototype.inverseTransformX = function (x) {\n      var xWorld = 0.0;\n      var deviceExtX = this.ldeviceExtX;\n      if (deviceExtX != 0.0) {\n        xWorld = this.lworldOrgX + (x - this.ldeviceOrgX) * this.lworldExtX / deviceExtX;\n      }\n      return xWorld;\n    };\n    Transform.prototype.inverseTransformY = function (y) {\n      var yWorld = 0.0;\n      var deviceExtY = this.ldeviceExtY;\n      if (deviceExtY != 0.0) {\n        yWorld = this.lworldOrgY + (y - this.ldeviceOrgY) * this.lworldExtY / deviceExtY;\n      }\n      return yWorld;\n    };\n    Transform.prototype.inverseTransformPoint = function (inPoint) {\n      var outPoint = new PointD(this.inverseTransformX(inPoint.x), this.inverseTransformY(inPoint.y));\n      return outPoint;\n    };\n    module.exports = Transform;\n\n    /***/\n  }), (/* 18 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function _toConsumableArray(arr) {\n      if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n          arr2[i] = arr[i];\n        }\n        return arr2;\n      } else {\n        return Array.from(arr);\n      }\n    }\n    var Layout = __webpack_require__(15);\n    var FDLayoutConstants = __webpack_require__(7);\n    var LayoutConstants = __webpack_require__(0);\n    var IGeometry = __webpack_require__(8);\n    var IMath = __webpack_require__(9);\n    function FDLayout() {\n      Layout.call(this);\n      this.useSmartIdealEdgeLengthCalculation = FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n      this.idealEdgeLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n      this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n      this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n      this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n      this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n      this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n      this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n      this.displacementThresholdPerNode = 3.0 * FDLayoutConstants.DEFAULT_EDGE_LENGTH / 100;\n      this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n      this.initialCoolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n      this.totalDisplacement = 0.0;\n      this.oldTotalDisplacement = 0.0;\n      this.maxIterations = FDLayoutConstants.MAX_ITERATIONS;\n    }\n    FDLayout.prototype = Object.create(Layout.prototype);\n    for (var prop in Layout) {\n      FDLayout[prop] = Layout[prop];\n    }\n    FDLayout.prototype.initParameters = function () {\n      Layout.prototype.initParameters.call(this, arguments);\n      this.totalIterations = 0;\n      this.notAnimatedIterations = 0;\n      this.useFRGridVariant = FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION;\n      this.grid = [];\n    };\n    FDLayout.prototype.calcIdealEdgeLengths = function () {\n      var edge;\n      var lcaDepth;\n      var source;\n      var target;\n      var sizeOfSourceInLca;\n      var sizeOfTargetInLca;\n      var allEdges = this.getGraphManager().getAllEdges();\n      for (var i = 0; i < allEdges.length; i++) {\n        edge = allEdges[i];\n        edge.idealLength = this.idealEdgeLength;\n        if (edge.isInterGraph) {\n          source = edge.getSource();\n          target = edge.getTarget();\n          sizeOfSourceInLca = edge.getSourceInLca().getEstimatedSize();\n          sizeOfTargetInLca = edge.getTargetInLca().getEstimatedSize();\n          if (this.useSmartIdealEdgeLengthCalculation) {\n            edge.idealLength += sizeOfSourceInLca + sizeOfTargetInLca - 2 * LayoutConstants.SIMPLE_NODE_SIZE;\n          }\n          lcaDepth = edge.getLca().getInclusionTreeDepth();\n          edge.idealLength += FDLayoutConstants.DEFAULT_EDGE_LENGTH * FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR * (source.getInclusionTreeDepth() + target.getInclusionTreeDepth() - 2 * lcaDepth);\n        }\n      }\n    };\n    FDLayout.prototype.initSpringEmbedder = function () {\n      var s = this.getAllNodes().length;\n      if (this.incremental) {\n        if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n          this.coolingFactor = Math.max(this.coolingFactor * FDLayoutConstants.COOLING_ADAPTATION_FACTOR, this.coolingFactor - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * this.coolingFactor * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n        }\n        this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL;\n      } else {\n        if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n          this.coolingFactor = Math.max(FDLayoutConstants.COOLING_ADAPTATION_FACTOR, 1.0 - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n        } else {\n          this.coolingFactor = 1.0;\n        }\n        this.initialCoolingFactor = this.coolingFactor;\n        this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT;\n      }\n      this.maxIterations = Math.max(this.getAllNodes().length * 5, this.maxIterations);\n      this.totalDisplacementThreshold = this.displacementThresholdPerNode * this.getAllNodes().length;\n      this.repulsionRange = this.calcRepulsionRange();\n    };\n    FDLayout.prototype.calcSpringForces = function () {\n      var lEdges = this.getAllEdges();\n      var edge;\n      for (var i = 0; i < lEdges.length; i++) {\n        edge = lEdges[i];\n        this.calcSpringForce(edge, edge.idealLength);\n      }\n    };\n    FDLayout.prototype.calcRepulsionForces = function () {\n      var gridUpdateAllowed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var forceToNodeSurroundingUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var i, j;\n      var nodeA, nodeB;\n      var lNodes = this.getAllNodes();\n      var processedNodeSet;\n      if (this.useFRGridVariant) {\n        if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed) {\n          this.updateGrid();\n        }\n        processedNodeSet = new Set();\n\n        // calculate repulsion forces between each nodes and its surrounding\n        for (i = 0; i < lNodes.length; i++) {\n          nodeA = lNodes[i];\n          this.calculateRepulsionForceOfANode(nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate);\n          processedNodeSet.add(nodeA);\n        }\n      } else {\n        for (i = 0; i < lNodes.length; i++) {\n          nodeA = lNodes[i];\n          for (j = i + 1; j < lNodes.length; j++) {\n            nodeB = lNodes[j];\n\n            // If both nodes are not members of the same graph, skip.\n            if (nodeA.getOwner() != nodeB.getOwner()) {\n              continue;\n            }\n            this.calcRepulsionForce(nodeA, nodeB);\n          }\n        }\n      }\n    };\n    FDLayout.prototype.calcGravitationalForces = function () {\n      var node;\n      var lNodes = this.getAllNodesToApplyGravitation();\n      for (var i = 0; i < lNodes.length; i++) {\n        node = lNodes[i];\n        this.calcGravitationalForce(node);\n      }\n    };\n    FDLayout.prototype.moveNodes = function () {\n      var lNodes = this.getAllNodes();\n      var node;\n      for (var i = 0; i < lNodes.length; i++) {\n        node = lNodes[i];\n        node.move();\n      }\n    };\n    FDLayout.prototype.calcSpringForce = function (edge, idealLength) {\n      var sourceNode = edge.getSource();\n      var targetNode = edge.getTarget();\n      var length;\n      var springForce;\n      var springForceX;\n      var springForceY;\n\n      // Update edge length\n      if (this.uniformLeafNodeSizes && sourceNode.getChild() == null && targetNode.getChild() == null) {\n        edge.updateLengthSimple();\n      } else {\n        edge.updateLength();\n        if (edge.isOverlapingSourceAndTarget) {\n          return;\n        }\n      }\n      length = edge.getLength();\n      if (length == 0) return;\n\n      // Calculate spring forces\n      springForce = this.springConstant * (length - idealLength);\n\n      // Project force onto x and y axes\n      springForceX = springForce * (edge.lengthX / length);\n      springForceY = springForce * (edge.lengthY / length);\n\n      // Apply forces on the end nodes\n      sourceNode.springForceX += springForceX;\n      sourceNode.springForceY += springForceY;\n      targetNode.springForceX -= springForceX;\n      targetNode.springForceY -= springForceY;\n    };\n    FDLayout.prototype.calcRepulsionForce = function (nodeA, nodeB) {\n      var rectA = nodeA.getRect();\n      var rectB = nodeB.getRect();\n      var overlapAmount = new Array(2);\n      var clipPoints = new Array(4);\n      var distanceX;\n      var distanceY;\n      var distanceSquared;\n      var distance;\n      var repulsionForce;\n      var repulsionForceX;\n      var repulsionForceY;\n      if (rectA.intersects(rectB))\n        // two nodes overlap\n        {\n          // calculate separation amount in x and y directions\n          IGeometry.calcSeparationAmount(rectA, rectB, overlapAmount, FDLayoutConstants.DEFAULT_EDGE_LENGTH / 2.0);\n          repulsionForceX = 2 * overlapAmount[0];\n          repulsionForceY = 2 * overlapAmount[1];\n          var childrenConstant = nodeA.noOfChildren * nodeB.noOfChildren / (nodeA.noOfChildren + nodeB.noOfChildren);\n\n          // Apply forces on the two nodes\n          nodeA.repulsionForceX -= childrenConstant * repulsionForceX;\n          nodeA.repulsionForceY -= childrenConstant * repulsionForceY;\n          nodeB.repulsionForceX += childrenConstant * repulsionForceX;\n          nodeB.repulsionForceY += childrenConstant * repulsionForceY;\n        } else\n        // no overlap\n        {\n          // calculate distance\n\n          if (this.uniformLeafNodeSizes && nodeA.getChild() == null && nodeB.getChild() == null)\n            // simply base repulsion on distance of node centers\n            {\n              distanceX = rectB.getCenterX() - rectA.getCenterX();\n              distanceY = rectB.getCenterY() - rectA.getCenterY();\n            } else\n            // use clipping points\n            {\n              IGeometry.getIntersection(rectA, rectB, clipPoints);\n              distanceX = clipPoints[2] - clipPoints[0];\n              distanceY = clipPoints[3] - clipPoints[1];\n            }\n\n          // No repulsion range. FR grid variant should take care of this.\n          if (Math.abs(distanceX) < FDLayoutConstants.MIN_REPULSION_DIST) {\n            distanceX = IMath.sign(distanceX) * FDLayoutConstants.MIN_REPULSION_DIST;\n          }\n          if (Math.abs(distanceY) < FDLayoutConstants.MIN_REPULSION_DIST) {\n            distanceY = IMath.sign(distanceY) * FDLayoutConstants.MIN_REPULSION_DIST;\n          }\n          distanceSquared = distanceX * distanceX + distanceY * distanceY;\n          distance = Math.sqrt(distanceSquared);\n          repulsionForce = this.repulsionConstant * nodeA.noOfChildren * nodeB.noOfChildren / distanceSquared;\n\n          // Project force onto x and y axes\n          repulsionForceX = repulsionForce * distanceX / distance;\n          repulsionForceY = repulsionForce * distanceY / distance;\n\n          // Apply forces on the two nodes    \n          nodeA.repulsionForceX -= repulsionForceX;\n          nodeA.repulsionForceY -= repulsionForceY;\n          nodeB.repulsionForceX += repulsionForceX;\n          nodeB.repulsionForceY += repulsionForceY;\n        }\n    };\n    FDLayout.prototype.calcGravitationalForce = function (node) {\n      var ownerGraph;\n      var ownerCenterX;\n      var ownerCenterY;\n      var distanceX;\n      var distanceY;\n      var absDistanceX;\n      var absDistanceY;\n      var estimatedSize;\n      ownerGraph = node.getOwner();\n      ownerCenterX = (ownerGraph.getRight() + ownerGraph.getLeft()) / 2;\n      ownerCenterY = (ownerGraph.getTop() + ownerGraph.getBottom()) / 2;\n      distanceX = node.getCenterX() - ownerCenterX;\n      distanceY = node.getCenterY() - ownerCenterY;\n      absDistanceX = Math.abs(distanceX) + node.getWidth() / 2;\n      absDistanceY = Math.abs(distanceY) + node.getHeight() / 2;\n      if (node.getOwner() == this.graphManager.getRoot())\n        // in the root graph\n        {\n          estimatedSize = ownerGraph.getEstimatedSize() * this.gravityRangeFactor;\n          if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n            node.gravitationForceX = -this.gravityConstant * distanceX;\n            node.gravitationForceY = -this.gravityConstant * distanceY;\n          }\n        } else\n        // inside a compound\n        {\n          estimatedSize = ownerGraph.getEstimatedSize() * this.compoundGravityRangeFactor;\n          if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n            node.gravitationForceX = -this.gravityConstant * distanceX * this.compoundGravityConstant;\n            node.gravitationForceY = -this.gravityConstant * distanceY * this.compoundGravityConstant;\n          }\n        }\n    };\n    FDLayout.prototype.isConverged = function () {\n      var converged;\n      var oscilating = false;\n      if (this.totalIterations > this.maxIterations / 3) {\n        oscilating = Math.abs(this.totalDisplacement - this.oldTotalDisplacement) < 2;\n      }\n      converged = this.totalDisplacement < this.totalDisplacementThreshold;\n      this.oldTotalDisplacement = this.totalDisplacement;\n      return converged || oscilating;\n    };\n    FDLayout.prototype.animate = function () {\n      if (this.animationDuringLayout && !this.isSubLayout) {\n        if (this.notAnimatedIterations == this.animationPeriod) {\n          this.update();\n          this.notAnimatedIterations = 0;\n        } else {\n          this.notAnimatedIterations++;\n        }\n      }\n    };\n\n    //This method calculates the number of children (weight) for all nodes\n    FDLayout.prototype.calcNoOfChildrenForAllNodes = function () {\n      var node;\n      var allNodes = this.graphManager.getAllNodes();\n      for (var i = 0; i < allNodes.length; i++) {\n        node = allNodes[i];\n        node.noOfChildren = node.getNoOfChildren();\n      }\n    };\n\n    // -----------------------------------------------------------------------------\n    // Section: FR-Grid Variant Repulsion Force Calculation\n    // -----------------------------------------------------------------------------\n\n    FDLayout.prototype.calcGrid = function (graph) {\n      var sizeX = 0;\n      var sizeY = 0;\n      sizeX = parseInt(Math.ceil((graph.getRight() - graph.getLeft()) / this.repulsionRange));\n      sizeY = parseInt(Math.ceil((graph.getBottom() - graph.getTop()) / this.repulsionRange));\n      var grid = new Array(sizeX);\n      for (var i = 0; i < sizeX; i++) {\n        grid[i] = new Array(sizeY);\n      }\n      for (var i = 0; i < sizeX; i++) {\n        for (var j = 0; j < sizeY; j++) {\n          grid[i][j] = new Array();\n        }\n      }\n      return grid;\n    };\n    FDLayout.prototype.addNodeToGrid = function (v, left, top) {\n      var startX = 0;\n      var finishX = 0;\n      var startY = 0;\n      var finishY = 0;\n      startX = parseInt(Math.floor((v.getRect().x - left) / this.repulsionRange));\n      finishX = parseInt(Math.floor((v.getRect().width + v.getRect().x - left) / this.repulsionRange));\n      startY = parseInt(Math.floor((v.getRect().y - top) / this.repulsionRange));\n      finishY = parseInt(Math.floor((v.getRect().height + v.getRect().y - top) / this.repulsionRange));\n      for (var i = startX; i <= finishX; i++) {\n        for (var j = startY; j <= finishY; j++) {\n          this.grid[i][j].push(v);\n          v.setGridCoordinates(startX, finishX, startY, finishY);\n        }\n      }\n    };\n    FDLayout.prototype.updateGrid = function () {\n      var i;\n      var nodeA;\n      var lNodes = this.getAllNodes();\n      this.grid = this.calcGrid(this.graphManager.getRoot());\n\n      // put all nodes to proper grid cells\n      for (i = 0; i < lNodes.length; i++) {\n        nodeA = lNodes[i];\n        this.addNodeToGrid(nodeA, this.graphManager.getRoot().getLeft(), this.graphManager.getRoot().getTop());\n      }\n    };\n    FDLayout.prototype.calculateRepulsionForceOfANode = function (nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate) {\n      if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed || forceToNodeSurroundingUpdate) {\n        var surrounding = new Set();\n        nodeA.surrounding = new Array();\n        var nodeB;\n        var grid = this.grid;\n        for (var i = nodeA.startX - 1; i < nodeA.finishX + 2; i++) {\n          for (var j = nodeA.startY - 1; j < nodeA.finishY + 2; j++) {\n            if (!(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length)) {\n              for (var k = 0; k < grid[i][j].length; k++) {\n                nodeB = grid[i][j][k];\n\n                // If both nodes are not members of the same graph, \n                // or both nodes are the same, skip.\n                if (nodeA.getOwner() != nodeB.getOwner() || nodeA == nodeB) {\n                  continue;\n                }\n\n                // check if the repulsion force between\n                // nodeA and nodeB has already been calculated\n                if (!processedNodeSet.has(nodeB) && !surrounding.has(nodeB)) {\n                  var distanceX = Math.abs(nodeA.getCenterX() - nodeB.getCenterX()) - (nodeA.getWidth() / 2 + nodeB.getWidth() / 2);\n                  var distanceY = Math.abs(nodeA.getCenterY() - nodeB.getCenterY()) - (nodeA.getHeight() / 2 + nodeB.getHeight() / 2);\n\n                  // if the distance between nodeA and nodeB \n                  // is less then calculation range\n                  if (distanceX <= this.repulsionRange && distanceY <= this.repulsionRange) {\n                    //then add nodeB to surrounding of nodeA\n                    surrounding.add(nodeB);\n                  }\n                }\n              }\n            }\n          }\n        }\n        nodeA.surrounding = [].concat(_toConsumableArray(surrounding));\n      }\n      for (i = 0; i < nodeA.surrounding.length; i++) {\n        this.calcRepulsionForce(nodeA, nodeA.surrounding[i]);\n      }\n    };\n    FDLayout.prototype.calcRepulsionRange = function () {\n      return 0.0;\n    };\n    module.exports = FDLayout;\n\n    /***/\n  }), (/* 19 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LEdge = __webpack_require__(1);\n    var FDLayoutConstants = __webpack_require__(7);\n    function FDLayoutEdge(source, target, vEdge) {\n      LEdge.call(this, source, target, vEdge);\n      this.idealLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n    }\n    FDLayoutEdge.prototype = Object.create(LEdge.prototype);\n    for (var prop in LEdge) {\n      FDLayoutEdge[prop] = LEdge[prop];\n    }\n    module.exports = FDLayoutEdge;\n\n    /***/\n  }), (/* 20 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LNode = __webpack_require__(3);\n    function FDLayoutNode(gm, loc, size, vNode) {\n      // alternative constructor is handled inside LNode\n      LNode.call(this, gm, loc, size, vNode);\n      //Spring, repulsion and gravitational forces acting on this node\n      this.springForceX = 0;\n      this.springForceY = 0;\n      this.repulsionForceX = 0;\n      this.repulsionForceY = 0;\n      this.gravitationForceX = 0;\n      this.gravitationForceY = 0;\n      //Amount by which this node is to be moved in this iteration\n      this.displacementX = 0;\n      this.displacementY = 0;\n\n      //Start and finish grid coordinates that this node is fallen into\n      this.startX = 0;\n      this.finishX = 0;\n      this.startY = 0;\n      this.finishY = 0;\n\n      //Geometric neighbors of this node\n      this.surrounding = [];\n    }\n    FDLayoutNode.prototype = Object.create(LNode.prototype);\n    for (var prop in LNode) {\n      FDLayoutNode[prop] = LNode[prop];\n    }\n    FDLayoutNode.prototype.setGridCoordinates = function (_startX, _finishX, _startY, _finishY) {\n      this.startX = _startX;\n      this.finishX = _finishX;\n      this.startY = _startY;\n      this.finishY = _finishY;\n    };\n    module.exports = FDLayoutNode;\n\n    /***/\n  }), (/* 21 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function DimensionD(width, height) {\n      this.width = 0;\n      this.height = 0;\n      if (width !== null && height !== null) {\n        this.height = height;\n        this.width = width;\n      }\n    }\n    DimensionD.prototype.getWidth = function () {\n      return this.width;\n    };\n    DimensionD.prototype.setWidth = function (width) {\n      this.width = width;\n    };\n    DimensionD.prototype.getHeight = function () {\n      return this.height;\n    };\n    DimensionD.prototype.setHeight = function (height) {\n      this.height = height;\n    };\n    module.exports = DimensionD;\n\n    /***/\n  }), (/* 22 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var UniqueIDGeneretor = __webpack_require__(14);\n    function HashMap() {\n      this.map = {};\n      this.keys = [];\n    }\n    HashMap.prototype.put = function (key, value) {\n      var theId = UniqueIDGeneretor.createID(key);\n      if (!this.contains(theId)) {\n        this.map[theId] = value;\n        this.keys.push(key);\n      }\n    };\n    HashMap.prototype.contains = function (key) {\n      var theId = UniqueIDGeneretor.createID(key);\n      return this.map[key] != null;\n    };\n    HashMap.prototype.get = function (key) {\n      var theId = UniqueIDGeneretor.createID(key);\n      return this.map[theId];\n    };\n    HashMap.prototype.keySet = function () {\n      return this.keys;\n    };\n    module.exports = HashMap;\n\n    /***/\n  }), (/* 23 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var UniqueIDGeneretor = __webpack_require__(14);\n    function HashSet() {\n      this.set = {};\n    }\n    ;\n    HashSet.prototype.add = function (obj) {\n      var theId = UniqueIDGeneretor.createID(obj);\n      if (!this.contains(theId)) this.set[theId] = obj;\n    };\n    HashSet.prototype.remove = function (obj) {\n      delete this.set[UniqueIDGeneretor.createID(obj)];\n    };\n    HashSet.prototype.clear = function () {\n      this.set = {};\n    };\n    HashSet.prototype.contains = function (obj) {\n      return this.set[UniqueIDGeneretor.createID(obj)] == obj;\n    };\n    HashSet.prototype.isEmpty = function () {\n      return this.size() === 0;\n    };\n    HashSet.prototype.size = function () {\n      return Object.keys(this.set).length;\n    };\n\n    //concats this.set to the given list\n    HashSet.prototype.addAllTo = function (list) {\n      var keys = Object.keys(this.set);\n      var length = keys.length;\n      for (var i = 0; i < length; i++) {\n        list.push(this.set[keys[i]]);\n      }\n    };\n    HashSet.prototype.size = function () {\n      return Object.keys(this.set).length;\n    };\n    HashSet.prototype.addAll = function (list) {\n      var s = list.length;\n      for (var i = 0; i < s; i++) {\n        var v = list[i];\n        this.add(v);\n      }\n    };\n    module.exports = HashSet;\n\n    /***/\n  }), (/* 24 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var _createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    /**\n     * A classic Quicksort algorithm with Hoare's partition\n     * - Works also on LinkedList objects\n     *\n     * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n     */\n\n    var LinkedList = __webpack_require__(11);\n    var Quicksort = function () {\n      function Quicksort(A, compareFunction) {\n        _classCallCheck(this, Quicksort);\n        if (compareFunction !== null || compareFunction !== undefined) this.compareFunction = this._defaultCompareFunction;\n        var length = void 0;\n        if (A instanceof LinkedList) length = A.size();else length = A.length;\n        this._quicksort(A, 0, length - 1);\n      }\n      _createClass(Quicksort, [{\n        key: '_quicksort',\n        value: function _quicksort(A, p, r) {\n          if (p < r) {\n            var q = this._partition(A, p, r);\n            this._quicksort(A, p, q);\n            this._quicksort(A, q + 1, r);\n          }\n        }\n      }, {\n        key: '_partition',\n        value: function _partition(A, p, r) {\n          var x = this._get(A, p);\n          var i = p;\n          var j = r;\n          while (true) {\n            while (this.compareFunction(x, this._get(A, j))) {\n              j--;\n            }\n            while (this.compareFunction(this._get(A, i), x)) {\n              i++;\n            }\n            if (i < j) {\n              this._swap(A, i, j);\n              i++;\n              j--;\n            } else return j;\n          }\n        }\n      }, {\n        key: '_get',\n        value: function _get(object, index) {\n          if (object instanceof LinkedList) return object.get_object_at(index);else return object[index];\n        }\n      }, {\n        key: '_set',\n        value: function _set(object, index, value) {\n          if (object instanceof LinkedList) object.set_object_at(index, value);else object[index] = value;\n        }\n      }, {\n        key: '_swap',\n        value: function _swap(A, i, j) {\n          var temp = this._get(A, i);\n          this._set(A, i, this._get(A, j));\n          this._set(A, j, temp);\n        }\n      }, {\n        key: '_defaultCompareFunction',\n        value: function _defaultCompareFunction(a, b) {\n          return b > a;\n        }\n      }]);\n      return Quicksort;\n    }();\n    module.exports = Quicksort;\n\n    /***/\n  }), (/* 25 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var _createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    /**\n     *   Needleman-Wunsch algorithm is an procedure to compute the optimal global alignment of two string\n     *   sequences by S.B.Needleman and C.D.Wunsch (1970).\n     *\n     *   Aside from the inputs, you can assign the scores for,\n     *   - Match: The two characters at the current index are same.\n     *   - Mismatch: The two characters at the current index are different.\n     *   - Insertion/Deletion(gaps): The best alignment involves one letter aligning to a gap in the other string.\n     */\n\n    var NeedlemanWunsch = function () {\n      function NeedlemanWunsch(sequence1, sequence2) {\n        var match_score = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var mismatch_penalty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n        var gap_penalty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n        _classCallCheck(this, NeedlemanWunsch);\n        this.sequence1 = sequence1;\n        this.sequence2 = sequence2;\n        this.match_score = match_score;\n        this.mismatch_penalty = mismatch_penalty;\n        this.gap_penalty = gap_penalty;\n\n        // Just the remove redundancy\n        this.iMax = sequence1.length + 1;\n        this.jMax = sequence2.length + 1;\n\n        // Grid matrix of scores\n        this.grid = new Array(this.iMax);\n        for (var i = 0; i < this.iMax; i++) {\n          this.grid[i] = new Array(this.jMax);\n          for (var j = 0; j < this.jMax; j++) {\n            this.grid[i][j] = 0;\n          }\n        }\n\n        // Traceback matrix (2D array, each cell is an array of boolean values for [`Diag`, `Up`, `Left`] positions)\n        this.tracebackGrid = new Array(this.iMax);\n        for (var _i = 0; _i < this.iMax; _i++) {\n          this.tracebackGrid[_i] = new Array(this.jMax);\n          for (var _j = 0; _j < this.jMax; _j++) {\n            this.tracebackGrid[_i][_j] = [null, null, null];\n          }\n        }\n\n        // The aligned sequences (return multiple possibilities)\n        this.alignments = [];\n\n        // Final alignment score\n        this.score = -1;\n\n        // Calculate scores and tracebacks\n        this.computeGrids();\n      }\n      _createClass(NeedlemanWunsch, [{\n        key: \"getScore\",\n        value: function getScore() {\n          return this.score;\n        }\n      }, {\n        key: \"getAlignments\",\n        value: function getAlignments() {\n          return this.alignments;\n        }\n\n        // Main dynamic programming procedure\n      }, {\n        key: \"computeGrids\",\n        value: function computeGrids() {\n          // Fill in the first row\n          for (var j = 1; j < this.jMax; j++) {\n            this.grid[0][j] = this.grid[0][j - 1] + this.gap_penalty;\n            this.tracebackGrid[0][j] = [false, false, true];\n          }\n\n          // Fill in the first column\n          for (var i = 1; i < this.iMax; i++) {\n            this.grid[i][0] = this.grid[i - 1][0] + this.gap_penalty;\n            this.tracebackGrid[i][0] = [false, true, false];\n          }\n\n          // Fill the rest of the grid\n          for (var _i2 = 1; _i2 < this.iMax; _i2++) {\n            for (var _j2 = 1; _j2 < this.jMax; _j2++) {\n              // Find the max score(s) among [`Diag`, `Up`, `Left`]\n              var diag = void 0;\n              if (this.sequence1[_i2 - 1] === this.sequence2[_j2 - 1]) diag = this.grid[_i2 - 1][_j2 - 1] + this.match_score;else diag = this.grid[_i2 - 1][_j2 - 1] + this.mismatch_penalty;\n              var up = this.grid[_i2 - 1][_j2] + this.gap_penalty;\n              var left = this.grid[_i2][_j2 - 1] + this.gap_penalty;\n\n              // If there exists multiple max values, capture them for multiple paths\n              var maxOf = [diag, up, left];\n              var indices = this.arrayAllMaxIndexes(maxOf);\n\n              // Update Grids\n              this.grid[_i2][_j2] = maxOf[indices[0]];\n              this.tracebackGrid[_i2][_j2] = [indices.includes(0), indices.includes(1), indices.includes(2)];\n            }\n          }\n\n          // Update alignment score\n          this.score = this.grid[this.iMax - 1][this.jMax - 1];\n        }\n\n        // Gets all possible valid sequence combinations\n      }, {\n        key: \"alignmentTraceback\",\n        value: function alignmentTraceback() {\n          var inProcessAlignments = [];\n          inProcessAlignments.push({\n            pos: [this.sequence1.length, this.sequence2.length],\n            seq1: \"\",\n            seq2: \"\"\n          });\n          while (inProcessAlignments[0]) {\n            var current = inProcessAlignments[0];\n            var directions = this.tracebackGrid[current.pos[0]][current.pos[1]];\n            if (directions[0]) {\n              inProcessAlignments.push({\n                pos: [current.pos[0] - 1, current.pos[1] - 1],\n                seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n              });\n            }\n            if (directions[1]) {\n              inProcessAlignments.push({\n                pos: [current.pos[0] - 1, current.pos[1]],\n                seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                seq2: '-' + current.seq2\n              });\n            }\n            if (directions[2]) {\n              inProcessAlignments.push({\n                pos: [current.pos[0], current.pos[1] - 1],\n                seq1: '-' + current.seq1,\n                seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n              });\n            }\n            if (current.pos[0] === 0 && current.pos[1] === 0) this.alignments.push({\n              sequence1: current.seq1,\n              sequence2: current.seq2\n            });\n            inProcessAlignments.shift();\n          }\n          return this.alignments;\n        }\n\n        // Helper Functions\n      }, {\n        key: \"getAllIndexes\",\n        value: function getAllIndexes(arr, val) {\n          var indexes = [],\n            i = -1;\n          while ((i = arr.indexOf(val, i + 1)) !== -1) {\n            indexes.push(i);\n          }\n          return indexes;\n        }\n      }, {\n        key: \"arrayAllMaxIndexes\",\n        value: function arrayAllMaxIndexes(array) {\n          return this.getAllIndexes(array, Math.max.apply(null, array));\n        }\n      }]);\n      return NeedlemanWunsch;\n    }();\n    module.exports = NeedlemanWunsch;\n\n    /***/\n  }), (/* 26 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var layoutBase = function layoutBase() {\n      return;\n    };\n    layoutBase.FDLayout = __webpack_require__(18);\n    layoutBase.FDLayoutConstants = __webpack_require__(7);\n    layoutBase.FDLayoutEdge = __webpack_require__(19);\n    layoutBase.FDLayoutNode = __webpack_require__(20);\n    layoutBase.DimensionD = __webpack_require__(21);\n    layoutBase.HashMap = __webpack_require__(22);\n    layoutBase.HashSet = __webpack_require__(23);\n    layoutBase.IGeometry = __webpack_require__(8);\n    layoutBase.IMath = __webpack_require__(9);\n    layoutBase.Integer = __webpack_require__(10);\n    layoutBase.Point = __webpack_require__(12);\n    layoutBase.PointD = __webpack_require__(4);\n    layoutBase.RandomSeed = __webpack_require__(16);\n    layoutBase.RectangleD = __webpack_require__(13);\n    layoutBase.Transform = __webpack_require__(17);\n    layoutBase.UniqueIDGeneretor = __webpack_require__(14);\n    layoutBase.Quicksort = __webpack_require__(24);\n    layoutBase.LinkedList = __webpack_require__(11);\n    layoutBase.LGraphObject = __webpack_require__(2);\n    layoutBase.LGraph = __webpack_require__(5);\n    layoutBase.LEdge = __webpack_require__(1);\n    layoutBase.LGraphManager = __webpack_require__(6);\n    layoutBase.LNode = __webpack_require__(3);\n    layoutBase.Layout = __webpack_require__(15);\n    layoutBase.LayoutConstants = __webpack_require__(0);\n    layoutBase.NeedlemanWunsch = __webpack_require__(25);\n    module.exports = layoutBase;\n\n    /***/\n  }), (/* 27 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    function Emitter() {\n      this.listeners = [];\n    }\n    var p = Emitter.prototype;\n    p.addListener = function (event, callback) {\n      this.listeners.push({\n        event: event,\n        callback: callback\n      });\n    };\n    p.removeListener = function (event, callback) {\n      for (var i = this.listeners.length; i >= 0; i--) {\n        var l = this.listeners[i];\n        if (l.event === event && l.callback === callback) {\n          this.listeners.splice(i, 1);\n        }\n      }\n    };\n    p.emit = function (event, data) {\n      for (var i = 0; i < this.listeners.length; i++) {\n        var l = this.listeners[i];\n        if (event === l.event) {\n          l.callback(data);\n        }\n      }\n    };\n    module.exports = Emitter;\n\n    /***/\n  }\n  /******/)]);\n});","import { l as log, c as getConfig, B as defaultConfig, d as sanitizeText, D as parseFontSize, A as selectSvgElement, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport cytoscape from \"cytoscape\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport { select } from \"d3\";\nimport { a as createText } from \"./createText-2e5e7dd3.js\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"mdast-util-from-markdown\";\nvar parser = function () {\n  var o = function (k, v, o2, l) {\n      for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v);\n      return o2;\n    },\n    $V0 = [1, 4],\n    $V1 = [1, 13],\n    $V2 = [1, 12],\n    $V3 = [1, 15],\n    $V4 = [1, 16],\n    $V5 = [1, 20],\n    $V6 = [1, 19],\n    $V7 = [6, 7, 8],\n    $V8 = [1, 26],\n    $V9 = [1, 24],\n    $Va = [1, 25],\n    $Vb = [6, 7, 11],\n    $Vc = [1, 6, 13, 15, 16, 19, 22],\n    $Vd = [1, 33],\n    $Ve = [1, 34],\n    $Vf = [1, 6, 7, 11, 13, 15, 16, 19, 22];\n  var parser2 = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"start\": 3,\n      \"mindMap\": 4,\n      \"spaceLines\": 5,\n      \"SPACELINE\": 6,\n      \"NL\": 7,\n      \"MINDMAP\": 8,\n      \"document\": 9,\n      \"stop\": 10,\n      \"EOF\": 11,\n      \"statement\": 12,\n      \"SPACELIST\": 13,\n      \"node\": 14,\n      \"ICON\": 15,\n      \"CLASS\": 16,\n      \"nodeWithId\": 17,\n      \"nodeWithoutId\": 18,\n      \"NODE_DSTART\": 19,\n      \"NODE_DESCR\": 20,\n      \"NODE_DEND\": 21,\n      \"NODE_ID\": 22,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      6: \"SPACELINE\",\n      7: \"NL\",\n      8: \"MINDMAP\",\n      11: \"EOF\",\n      13: \"SPACELIST\",\n      15: \"ICON\",\n      16: \"CLASS\",\n      19: \"NODE_DSTART\",\n      20: \"NODE_DESCR\",\n      21: \"NODE_DEND\",\n      22: \"NODE_ID\"\n    },\n    productions_: [0, [3, 1], [3, 2], [5, 1], [5, 2], [5, 2], [4, 2], [4, 3], [10, 1], [10, 1], [10, 1], [10, 2], [10, 2], [9, 3], [9, 2], [12, 2], [12, 2], [12, 2], [12, 1], [12, 1], [12, 1], [12, 1], [12, 1], [14, 1], [14, 1], [18, 3], [17, 1], [17, 4]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 6:\n        case 7:\n          return yy;\n        case 8:\n          yy.getLogger().trace(\"Stop NL \");\n          break;\n        case 9:\n          yy.getLogger().trace(\"Stop EOF \");\n          break;\n        case 11:\n          yy.getLogger().trace(\"Stop NL2 \");\n          break;\n        case 12:\n          yy.getLogger().trace(\"Stop EOF2 \");\n          break;\n        case 15:\n          yy.getLogger().info(\"Node: \", $$[$0].id);\n          yy.addNode($$[$0 - 1].length, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n        case 16:\n          yy.getLogger().trace(\"Icon: \", $$[$0]);\n          yy.decorateNode({\n            icon: $$[$0]\n          });\n          break;\n        case 17:\n        case 21:\n          yy.decorateNode({\n            class: $$[$0]\n          });\n          break;\n        case 18:\n          yy.getLogger().trace(\"SPACELIST\");\n          break;\n        case 19:\n          yy.getLogger().trace(\"Node: \", $$[$0].id);\n          yy.addNode(0, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n        case 20:\n          yy.decorateNode({\n            icon: $$[$0]\n          });\n          break;\n        case 25:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 2]);\n          this.$ = {\n            id: $$[$0 - 1],\n            descr: $$[$0 - 1],\n            type: yy.getType($$[$0 - 2], $$[$0])\n          };\n          break;\n        case 26:\n          this.$ = {\n            id: $$[$0],\n            descr: $$[$0],\n            type: yy.nodeType.DEFAULT\n          };\n          break;\n        case 27:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 3]);\n          this.$ = {\n            id: $$[$0 - 3],\n            descr: $$[$0 - 1],\n            type: yy.getType($$[$0 - 2], $$[$0])\n          };\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      5: 3,\n      6: [1, 5],\n      8: $V0\n    }, {\n      1: [3]\n    }, {\n      1: [2, 1]\n    }, {\n      4: 6,\n      6: [1, 7],\n      7: [1, 8],\n      8: $V0\n    }, {\n      6: $V1,\n      7: [1, 10],\n      9: 9,\n      12: 11,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, o($V7, [2, 3]), {\n      1: [2, 2]\n    }, o($V7, [2, 4]), o($V7, [2, 5]), {\n      1: [2, 6],\n      6: $V1,\n      12: 21,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, {\n      6: $V1,\n      9: 22,\n      12: 11,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, {\n      6: $V8,\n      7: $V9,\n      10: 23,\n      11: $Va\n    }, o($Vb, [2, 22], {\n      17: 17,\n      18: 18,\n      14: 27,\n      15: [1, 28],\n      16: [1, 29],\n      19: $V5,\n      22: $V6\n    }), o($Vb, [2, 18]), o($Vb, [2, 19]), o($Vb, [2, 20]), o($Vb, [2, 21]), o($Vb, [2, 23]), o($Vb, [2, 24]), o($Vb, [2, 26], {\n      19: [1, 30]\n    }), {\n      20: [1, 31]\n    }, {\n      6: $V8,\n      7: $V9,\n      10: 32,\n      11: $Va\n    }, {\n      1: [2, 7],\n      6: $V1,\n      12: 21,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, o($Vc, [2, 14], {\n      7: $Vd,\n      11: $Ve\n    }), o($Vf, [2, 8]), o($Vf, [2, 9]), o($Vf, [2, 10]), o($Vb, [2, 15]), o($Vb, [2, 16]), o($Vb, [2, 17]), {\n      20: [1, 35]\n    }, {\n      21: [1, 36]\n    }, o($Vc, [2, 13], {\n      7: $Vd,\n      11: $Ve\n    }), o($Vf, [2, 11]), o($Vf, [2, 12]), {\n      21: [1, 37]\n    }, o($Vb, [2, 25]), o($Vb, [2, 27])],\n    defaultActions: {\n      2: [2, 1],\n      6: [2, 2]\n    },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n        stack = [0],\n        tstack = [],\n        vstack = [null],\n        lstack = [],\n        table = this.table,\n        yytext = \"\",\n        yylineno = 0,\n        yyleng = 0,\n        TERROR = 2,\n        EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol,\n        state,\n        action,\n        r,\n        yyval = {},\n        p,\n        len,\n        newState,\n        expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function () {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function () {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function () {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function (n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function () {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function (match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function () {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {\n        \"case-insensitive\": true\n      },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            yy.getLogger().trace(\"Found comment\", yy_.yytext);\n            return 6;\n          case 1:\n            return 8;\n          case 2:\n            this.begin(\"CLASS\");\n            break;\n          case 3:\n            this.popState();\n            return 16;\n          case 4:\n            this.popState();\n            break;\n          case 5:\n            yy.getLogger().trace(\"Begin icon\");\n            this.begin(\"ICON\");\n            break;\n          case 6:\n            yy.getLogger().trace(\"SPACELINE\");\n            return 6;\n          case 7:\n            return 7;\n          case 8:\n            return 15;\n          case 9:\n            yy.getLogger().trace(\"end icon\");\n            this.popState();\n            break;\n          case 10:\n            yy.getLogger().trace(\"Exploding node\");\n            this.begin(\"NODE\");\n            return 19;\n          case 11:\n            yy.getLogger().trace(\"Cloud\");\n            this.begin(\"NODE\");\n            return 19;\n          case 12:\n            yy.getLogger().trace(\"Explosion Bang\");\n            this.begin(\"NODE\");\n            return 19;\n          case 13:\n            yy.getLogger().trace(\"Cloud Bang\");\n            this.begin(\"NODE\");\n            return 19;\n          case 14:\n            this.begin(\"NODE\");\n            return 19;\n          case 15:\n            this.begin(\"NODE\");\n            return 19;\n          case 16:\n            this.begin(\"NODE\");\n            return 19;\n          case 17:\n            this.begin(\"NODE\");\n            return 19;\n          case 18:\n            return 13;\n          case 19:\n            return 22;\n          case 20:\n            return 11;\n          case 21:\n            this.begin(\"NSTR2\");\n            break;\n          case 22:\n            return \"NODE_DESCR\";\n          case 23:\n            this.popState();\n            break;\n          case 24:\n            yy.getLogger().trace(\"Starting NSTR\");\n            this.begin(\"NSTR\");\n            break;\n          case 25:\n            yy.getLogger().trace(\"description:\", yy_.yytext);\n            return \"NODE_DESCR\";\n          case 26:\n            this.popState();\n            break;\n          case 27:\n            this.popState();\n            yy.getLogger().trace(\"node end ))\");\n            return \"NODE_DEND\";\n          case 28:\n            this.popState();\n            yy.getLogger().trace(\"node end )\");\n            return \"NODE_DEND\";\n          case 29:\n            this.popState();\n            yy.getLogger().trace(\"node end ...\", yy_.yytext);\n            return \"NODE_DEND\";\n          case 30:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 31:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n          case 32:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n          case 33:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 34:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n          case 35:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n          case 36:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n        }\n      },\n      rules: [/^(?:\\s*%%.*)/i, /^(?:mindmap\\b)/i, /^(?::::)/i, /^(?:.+)/i, /^(?:\\n)/i, /^(?:::icon\\()/i, /^(?:[\\s]+[\\n])/i, /^(?:[\\n]+)/i, /^(?:[^\\)]+)/i, /^(?:\\))/i, /^(?:-\\))/i, /^(?:\\(-)/i, /^(?:\\)\\))/i, /^(?:\\))/i, /^(?:\\(\\()/i, /^(?:\\{\\{)/i, /^(?:\\()/i, /^(?:\\[)/i, /^(?:[\\s]+)/i, /^(?:[^\\(\\[\\n\\)\\{\\}]+)/i, /^(?:$)/i, /^(?:[\"][`])/i, /^(?:[^`\"]+)/i, /^(?:[`][\"])/i, /^(?:[\"])/i, /^(?:[^\"]+)/i, /^(?:[\"])/i, /^(?:[\\)]\\))/i, /^(?:[\\)])/i, /^(?:[\\]])/i, /^(?:\\}\\})/i, /^(?:\\(-)/i, /^(?:-\\))/i, /^(?:\\(\\()/i, /^(?:\\()/i, /^(?:[^\\)\\]\\(\\}]+)/i, /^(?:.+(?!\\(\\())/i],\n      conditions: {\n        \"CLASS\": {\n          \"rules\": [3, 4],\n          \"inclusive\": false\n        },\n        \"ICON\": {\n          \"rules\": [8, 9],\n          \"inclusive\": false\n        },\n        \"NSTR2\": {\n          \"rules\": [22, 23],\n          \"inclusive\": false\n        },\n        \"NSTR\": {\n          \"rules\": [25, 26],\n          \"inclusive\": false\n        },\n        \"NODE\": {\n          \"rules\": [21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],\n          \"inclusive\": false\n        },\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet nodes = [];\nlet cnt = 0;\nlet elements = {};\nconst clear = () => {\n  nodes = [];\n  cnt = 0;\n  elements = {};\n};\nconst getParent = function (level) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].level < level) {\n      return nodes[i];\n    }\n  }\n  return null;\n};\nconst getMindmap = () => {\n  return nodes.length > 0 ? nodes[0] : null;\n};\nconst addNode = (level, id, descr, type) => {\n  var _a, _b;\n  log.info(\"addNode\", level, id, descr, type);\n  const conf = getConfig();\n  let padding = ((_a = conf.mindmap) == null ? void 0 : _a.padding) ?? defaultConfig.mindmap.padding;\n  switch (type) {\n    case nodeType.ROUNDED_RECT:\n    case nodeType.RECT:\n    case nodeType.HEXAGON:\n      padding *= 2;\n  }\n  const node = {\n    id: cnt++,\n    nodeId: sanitizeText(id, conf),\n    level,\n    descr: sanitizeText(descr, conf),\n    type,\n    children: [],\n    width: ((_b = conf.mindmap) == null ? void 0 : _b.maxNodeWidth) ?? defaultConfig.mindmap.maxNodeWidth,\n    padding\n  };\n  const parent = getParent(level);\n  if (parent) {\n    parent.children.push(node);\n    nodes.push(node);\n  } else {\n    if (nodes.length === 0) {\n      nodes.push(node);\n    } else {\n      throw new Error('There can be only one root. No parent could be found for (\"' + node.descr + '\")');\n    }\n  }\n};\nconst nodeType = {\n  DEFAULT: 0,\n  NO_BORDER: 0,\n  ROUNDED_RECT: 1,\n  RECT: 2,\n  CIRCLE: 3,\n  CLOUD: 4,\n  BANG: 5,\n  HEXAGON: 6\n};\nconst getType = (startStr, endStr) => {\n  log.debug(\"In get type\", startStr, endStr);\n  switch (startStr) {\n    case \"[\":\n      return nodeType.RECT;\n    case \"(\":\n      return endStr === \")\" ? nodeType.ROUNDED_RECT : nodeType.CLOUD;\n    case \"((\":\n      return nodeType.CIRCLE;\n    case \")\":\n      return nodeType.CLOUD;\n    case \"))\":\n      return nodeType.BANG;\n    case \"{{\":\n      return nodeType.HEXAGON;\n    default:\n      return nodeType.DEFAULT;\n  }\n};\nconst setElementForId = (id, element) => {\n  elements[id] = element;\n};\nconst decorateNode = decoration => {\n  if (!decoration) {\n    return;\n  }\n  const config = getConfig();\n  const node = nodes[nodes.length - 1];\n  if (decoration.icon) {\n    node.icon = sanitizeText(decoration.icon, config);\n  }\n  if (decoration.class) {\n    node.class = sanitizeText(decoration.class, config);\n  }\n};\nconst type2Str = type => {\n  switch (type) {\n    case nodeType.DEFAULT:\n      return \"no-border\";\n    case nodeType.RECT:\n      return \"rect\";\n    case nodeType.ROUNDED_RECT:\n      return \"rounded-rect\";\n    case nodeType.CIRCLE:\n      return \"circle\";\n    case nodeType.CLOUD:\n      return \"cloud\";\n    case nodeType.BANG:\n      return \"bang\";\n    case nodeType.HEXAGON:\n      return \"hexgon\";\n    default:\n      return \"no-border\";\n  }\n};\nconst getLogger = () => log;\nconst getElementById = id => elements[id];\nconst db = {\n  clear,\n  addNode,\n  getMindmap,\n  nodeType,\n  getType,\n  setElementForId,\n  decorateNode,\n  type2Str,\n  getLogger,\n  getElementById\n};\nconst db$1 = db;\nconst MAX_SECTIONS = 12;\nconst defaultBkg = function (db2, elem, node, section) {\n  const rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"d\", `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`);\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\nconst rectBkg = function (db2, elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"height\", node.height).attr(\"width\", node.width);\n};\nconst cloudBkg = function (db2, elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r1 = 0.15 * w;\n  const r2 = 0.25 * w;\n  const r3 = 0.35 * w;\n  const r4 = 0.2 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"d\", `M0 0 a${r1},${r1} 0 0,1 ${w * 0.25},${-1 * w * 0.1}\n      a${r3},${r3} 1 0,1 ${w * 0.4},${-1 * w * 0.1}\n      a${r2},${r2} 1 0,1 ${w * 0.35},${1 * w * 0.2}\n\n      a${r1},${r1} 1 0,1 ${w * 0.15},${1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${-1 * w * 0.15},${1 * h * 0.65}\n\n      a${r2},${r1} 1 0,1 ${-1 * w * 0.25},${w * 0.15}\n      a${r3},${r3} 1 0,1 ${-1 * w * 0.5},${0}\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.25},${-1 * w * 0.15}\n\n      a${r1},${r1} 1 0,1 ${-1 * w * 0.1},${-1 * h * 0.35}\n      a${r4},${r4} 1 0,1 ${w * 0.1},${-1 * h * 0.65}\n\n    H0 V0 Z`);\n};\nconst bangBkg = function (db2, elem, node) {\n  const w = node.width;\n  const h = node.height;\n  const r = 0.15 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"d\", `M0 0 a${r},${r} 1 0,0 ${w * 0.25},${-1 * h * 0.1}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${0}\n      a${r},${r} 1 0,0 ${w * 0.25},${1 * h * 0.1}\n\n      a${r},${r} 1 0,0 ${w * 0.15},${1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${1 * h * 0.34}\n      a${r},${r} 1 0,0 ${-1 * w * 0.15},${1 * h * 0.33}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${h * 0.15}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${0}\n      a${r},${r} 1 0,0 ${-1 * w * 0.25},${-1 * h * 0.15}\n\n      a${r},${r} 1 0,0 ${-1 * w * 0.1},${-1 * h * 0.33}\n      a${r * 0.8},${r * 0.8} 1 0,0 ${0},${-1 * h * 0.34}\n      a${r},${r} 1 0,0 ${w * 0.1},${-1 * h * 0.33}\n\n    H0 V0 Z`);\n};\nconst circleBkg = function (db2, elem, node) {\n  elem.append(\"circle\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"r\", node.width / 2);\n};\nfunction insertPolygonShape(parent, w, h, points, node) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\"points\", points.map(function (d) {\n    return d.x + \",\" + d.y;\n  }).join(\" \")).attr(\"transform\", \"translate(\" + (node.width - w) / 2 + \", \" + h + \")\");\n}\nconst hexagonBkg = function (_db, elem, node) {\n  const h = node.height;\n  const f = 4;\n  const m = h / f;\n  const w = node.width - node.padding + 2 * m;\n  const points = [{\n    x: m,\n    y: 0\n  }, {\n    x: w - m,\n    y: 0\n  }, {\n    x: w,\n    y: -h / 2\n  }, {\n    x: w - m,\n    y: -h\n  }, {\n    x: m,\n    y: -h\n  }, {\n    x: 0,\n    y: -h / 2\n  }];\n  insertPolygonShape(elem, w, h, points, node);\n};\nconst roundedRectBkg = function (db2, elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + db2.type2Str(node.type)).attr(\"height\", node.height).attr(\"rx\", node.padding).attr(\"ry\", node.padding).attr(\"width\", node.width);\n};\nconst drawNode = function (db2, elem, node, fullSection, conf) {\n  const htmlLabels = conf.htmlLabels;\n  const section = fullSection % (MAX_SECTIONS - 1);\n  const nodeElem = elem.append(\"g\");\n  node.section = section;\n  let sectionClass = \"section-\" + section;\n  if (section < 0) {\n    sectionClass += \" section-root\";\n  }\n  nodeElem.attr(\"class\", (node.class ? node.class + \" \" : \"\") + \"mindmap-node \" + sectionClass);\n  const bkgElem = nodeElem.append(\"g\");\n  const textElem = nodeElem.append(\"g\");\n  const description = node.descr.replace(/(<br\\/*>)/g, \"\\n\");\n  createText(textElem, description, {\n    useHtmlLabels: htmlLabels,\n    width: node.width,\n    classes: \"mindmap-node-label\"\n  });\n  if (!htmlLabels) {\n    textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n  }\n  const bbox = textElem.node().getBBox();\n  const [fontSize] = parseFontSize(conf.fontSize);\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.width = bbox.width + 2 * node.padding;\n  if (node.icon) {\n    if (node.type === db2.nodeType.CIRCLE) {\n      node.height += 50;\n      node.width += 50;\n      const icon = nodeElem.append(\"foreignObject\").attr(\"height\", \"50px\").attr(\"width\", node.width).attr(\"style\", \"text-align: center;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + (node.height / 2 - 1.5 * node.padding) + \")\");\n    } else {\n      node.width += 50;\n      const orgHeight = node.height;\n      node.height = Math.max(orgHeight, 60);\n      const heightDiff = Math.abs(node.height - orgHeight);\n      const icon = nodeElem.append(\"foreignObject\").attr(\"width\", \"60px\").attr(\"height\", node.height).attr(\"style\", \"text-align: center;margin-top:\" + heightDiff / 2 + \"px;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\"transform\", \"translate(\" + (25 + node.width / 2) + \", \" + (heightDiff / 2 + node.padding / 2) + \")\");\n    }\n  } else {\n    if (!htmlLabels) {\n      const dx = node.width / 2;\n      const dy = node.padding / 2;\n      textElem.attr(\"transform\", \"translate(\" + dx + \", \" + dy + \")\");\n    } else {\n      const dx = (node.width - bbox.width) / 2;\n      const dy = (node.height - bbox.height) / 2;\n      textElem.attr(\"transform\", \"translate(\" + dx + \", \" + dy + \")\");\n    }\n  }\n  switch (node.type) {\n    case db2.nodeType.DEFAULT:\n      defaultBkg(db2, bkgElem, node, section);\n      break;\n    case db2.nodeType.ROUNDED_RECT:\n      roundedRectBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.RECT:\n      rectBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.CIRCLE:\n      bkgElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + +node.height / 2 + \")\");\n      circleBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.CLOUD:\n      cloudBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.BANG:\n      bangBkg(db2, bkgElem, node);\n      break;\n    case db2.nodeType.HEXAGON:\n      hexagonBkg(db2, bkgElem, node);\n      break;\n  }\n  db2.setElementForId(node.id, nodeElem);\n  return node.height;\n};\nconst positionNode = function (db2, node) {\n  const nodeElem = db2.getElementById(node.id);\n  const x = node.x || 0;\n  const y = node.y || 0;\n  nodeElem.attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n};\ncytoscape.use(coseBilkent);\nfunction drawNodes(db2, svg, mindmap, section, conf) {\n  drawNode(db2, svg, mindmap, section, conf);\n  if (mindmap.children) {\n    mindmap.children.forEach((child, index) => {\n      drawNodes(db2, svg, child, section < 0 ? index : section, conf);\n    });\n  }\n}\nfunction drawEdges(edgesEl, cy) {\n  cy.edges().map((edge, id) => {\n    const data = edge.data();\n    if (edge[0]._private.bodyBounds) {\n      const bounds = edge[0]._private.rscratch;\n      log.trace(\"Edge: \", id, data);\n      edgesEl.insert(\"path\").attr(\"d\", `M ${bounds.startX},${bounds.startY} L ${bounds.midX},${bounds.midY} L${bounds.endX},${bounds.endY} `).attr(\"class\", \"edge section-edge-\" + data.section + \" edge-depth-\" + data.depth);\n    }\n  });\n}\nfunction addNodes(mindmap, cy, conf, level) {\n  cy.add({\n    group: \"nodes\",\n    data: {\n      id: mindmap.id.toString(),\n      labelText: mindmap.descr,\n      height: mindmap.height,\n      width: mindmap.width,\n      level,\n      nodeId: mindmap.id,\n      padding: mindmap.padding,\n      type: mindmap.type\n    },\n    position: {\n      x: mindmap.x,\n      y: mindmap.y\n    }\n  });\n  if (mindmap.children) {\n    mindmap.children.forEach(child => {\n      addNodes(child, cy, conf, level + 1);\n      cy.add({\n        group: \"edges\",\n        data: {\n          id: `${mindmap.id}_${child.id}`,\n          source: mindmap.id,\n          target: child.id,\n          depth: level,\n          section: child.section\n        }\n      });\n    });\n  }\n}\nfunction layoutMindmap(node, conf) {\n  return new Promise(resolve => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      // container to render in\n      style: [{\n        selector: \"edge\",\n        style: {\n          \"curve-style\": \"bezier\"\n        }\n      }]\n    });\n    renderEl.remove();\n    addNodes(node, cy, conf, 0);\n    cy.nodes().forEach(function (n) {\n      n.layoutDimensions = () => {\n        const data = n.data();\n        return {\n          w: data.width,\n          h: data.height\n        };\n      };\n    });\n    cy.layout({\n      name: \"cose-bilkent\",\n      // @ts-ignore Types for cose-bilkent are not correct?\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false\n    }).run();\n    cy.ready(e => {\n      log.info(\"Ready\", e);\n      resolve(cy);\n    });\n  });\n}\nfunction positionNodes(db2, cy) {\n  cy.nodes().map((node, id) => {\n    const data = node.data();\n    data.x = node.position().x;\n    data.y = node.position().y;\n    positionNode(db2, data);\n    const el = db2.getElementById(data.nodeId);\n    log.info(\"Id:\", id, \"Position: (\", node.position().x, \", \", node.position().y, \")\", data);\n    el.attr(\"transform\", `translate(${node.position().x - data.width / 2}, ${node.position().y - data.height / 2})`);\n    el.attr(\"attr\", `apa-${id})`);\n  });\n}\nconst draw = async (text, id, _version, diagObj) => {\n  var _a, _b;\n  log.debug(\"Rendering mindmap diagram\\n\" + text);\n  const db2 = diagObj.db;\n  const mm = db2.getMindmap();\n  if (!mm) {\n    return;\n  }\n  const conf = getConfig();\n  conf.htmlLabels = false;\n  const svg = selectSvgElement(id);\n  const edgesElem = svg.append(\"g\");\n  edgesElem.attr(\"class\", \"mindmap-edges\");\n  const nodesElem = svg.append(\"g\");\n  nodesElem.attr(\"class\", \"mindmap-nodes\");\n  drawNodes(db2, nodesElem, mm, -1, conf);\n  const cy = await layoutMindmap(mm, conf);\n  drawEdges(edgesElem, cy);\n  positionNodes(db2, cy);\n  setupGraphViewbox(void 0, svg, ((_a = conf.mindmap) == null ? void 0 : _a.padding) ?? defaultConfig.mindmap.padding, ((_b = conf.mindmap) == null ? void 0 : _b.useMaxWidth) ?? defaultConfig.mindmap.useMaxWidth);\n};\nconst renderer = {\n  draw\n};\nconst genSections = options => {\n  let sections = \"\";\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = \"\" + (17 - 3 * i);\n    sections += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} polygon, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections;\n};\nconst getStyles = options => `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .mindmap-node-label {\n    dy: 1em;\n    alignment-baseline: middle;\n    text-anchor: middle;\n    dominant-baseline: middle;\n    text-align: center;\n  }\n`;\nconst styles = getStyles;\nconst diagram = {\n  db: db$1,\n  renderer,\n  parser: parser$1,\n  styles\n};\nexport { diagram };","(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"layout-base\"));else if (typeof define === 'function' && define.amd) define([\"layout-base\"], factory);else if (typeof exports === 'object') exports[\"coseBase\"] = factory(require(\"layout-base\"));else root[\"coseBase\"] = factory(root[\"layoutBase\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_0__) {\n  return /******/function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/if (installedModules[moduleId]) {\n        /******/return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = installedModules[moduleId] = {\n        /******/i: moduleId,\n        /******/l: false,\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n      /******/\n      /******/ // Flag the module as loaded\n      /******/\n      module.l = true;\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // identity function for calling harmony imports with the correct context\n    /******/\n    __webpack_require__.i = function (value) {\n      return value;\n    };\n    /******/\n    /******/ // define getter function for harmony exports\n    /******/\n    __webpack_require__.d = function (exports, name, getter) {\n      /******/if (!__webpack_require__.o(exports, name)) {\n        /******/Object.defineProperty(exports, name, {\n          /******/configurable: false,\n          /******/enumerable: true,\n          /******/get: getter\n          /******/\n        });\n        /******/\n      }\n      /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    __webpack_require__.n = function (module) {\n      /******/var getter = module && module.__esModule ? /******/function getDefault() {\n        return module['default'];\n      } : /******/function getModuleExports() {\n        return module;\n      };\n      /******/\n      __webpack_require__.d(getter, 'a', getter);\n      /******/\n      return getter;\n      /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/\n    __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(__webpack_require__.s = 7);\n    /******/\n  }\n  /************************************************************************/\n  /******/([(/* 0 */\n  /***/function (module, exports) {\n    module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n    /***/\n  }), (/* 1 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\n    function CoSEConstants() {}\n\n    //CoSEConstants inherits static props in FDLayoutConstants\n    for (var prop in FDLayoutConstants) {\n      CoSEConstants[prop] = FDLayoutConstants[prop];\n    }\n    CoSEConstants.DEFAULT_USE_MULTI_LEVEL_SCALING = false;\n    CoSEConstants.DEFAULT_RADIAL_SEPARATION = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n    CoSEConstants.DEFAULT_COMPONENT_SEPERATION = 60;\n    CoSEConstants.TILE = true;\n    CoSEConstants.TILING_PADDING_VERTICAL = 10;\n    CoSEConstants.TILING_PADDING_HORIZONTAL = 10;\n    CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = false; // make this true when cose is used incrementally as a part of other non-incremental layout\n\n    module.exports = CoSEConstants;\n\n    /***/\n  }), (/* 2 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var FDLayoutEdge = __webpack_require__(0).FDLayoutEdge;\n    function CoSEEdge(source, target, vEdge) {\n      FDLayoutEdge.call(this, source, target, vEdge);\n    }\n    CoSEEdge.prototype = Object.create(FDLayoutEdge.prototype);\n    for (var prop in FDLayoutEdge) {\n      CoSEEdge[prop] = FDLayoutEdge[prop];\n    }\n    module.exports = CoSEEdge;\n\n    /***/\n  }), (/* 3 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LGraph = __webpack_require__(0).LGraph;\n    function CoSEGraph(parent, graphMgr, vGraph) {\n      LGraph.call(this, parent, graphMgr, vGraph);\n    }\n    CoSEGraph.prototype = Object.create(LGraph.prototype);\n    for (var prop in LGraph) {\n      CoSEGraph[prop] = LGraph[prop];\n    }\n    module.exports = CoSEGraph;\n\n    /***/\n  }), (/* 4 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LGraphManager = __webpack_require__(0).LGraphManager;\n    function CoSEGraphManager(layout) {\n      LGraphManager.call(this, layout);\n    }\n    CoSEGraphManager.prototype = Object.create(LGraphManager.prototype);\n    for (var prop in LGraphManager) {\n      CoSEGraphManager[prop] = LGraphManager[prop];\n    }\n    module.exports = CoSEGraphManager;\n\n    /***/\n  }), (/* 5 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var FDLayoutNode = __webpack_require__(0).FDLayoutNode;\n    var IMath = __webpack_require__(0).IMath;\n    function CoSENode(gm, loc, size, vNode) {\n      FDLayoutNode.call(this, gm, loc, size, vNode);\n    }\n    CoSENode.prototype = Object.create(FDLayoutNode.prototype);\n    for (var prop in FDLayoutNode) {\n      CoSENode[prop] = FDLayoutNode[prop];\n    }\n    CoSENode.prototype.move = function () {\n      var layout = this.graphManager.getLayout();\n      this.displacementX = layout.coolingFactor * (this.springForceX + this.repulsionForceX + this.gravitationForceX) / this.noOfChildren;\n      this.displacementY = layout.coolingFactor * (this.springForceY + this.repulsionForceY + this.gravitationForceY) / this.noOfChildren;\n      if (Math.abs(this.displacementX) > layout.coolingFactor * layout.maxNodeDisplacement) {\n        this.displacementX = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementX);\n      }\n      if (Math.abs(this.displacementY) > layout.coolingFactor * layout.maxNodeDisplacement) {\n        this.displacementY = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementY);\n      }\n\n      // a simple node, just move it\n      if (this.child == null) {\n        this.moveBy(this.displacementX, this.displacementY);\n      }\n      // an empty compound node, again just move it\n      else if (this.child.getNodes().length == 0) {\n        this.moveBy(this.displacementX, this.displacementY);\n      }\n      // non-empty compound node, propogate movement to children as well\n      else {\n        this.propogateDisplacementToChildren(this.displacementX, this.displacementY);\n      }\n      layout.totalDisplacement += Math.abs(this.displacementX) + Math.abs(this.displacementY);\n      this.springForceX = 0;\n      this.springForceY = 0;\n      this.repulsionForceX = 0;\n      this.repulsionForceY = 0;\n      this.gravitationForceX = 0;\n      this.gravitationForceY = 0;\n      this.displacementX = 0;\n      this.displacementY = 0;\n    };\n    CoSENode.prototype.propogateDisplacementToChildren = function (dX, dY) {\n      var nodes = this.getChild().getNodes();\n      var node;\n      for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.getChild() == null) {\n          node.moveBy(dX, dY);\n          node.displacementX += dX;\n          node.displacementY += dY;\n        } else {\n          node.propogateDisplacementToChildren(dX, dY);\n        }\n      }\n    };\n    CoSENode.prototype.setPred1 = function (pred1) {\n      this.pred1 = pred1;\n    };\n    CoSENode.prototype.getPred1 = function () {\n      return pred1;\n    };\n    CoSENode.prototype.getPred2 = function () {\n      return pred2;\n    };\n    CoSENode.prototype.setNext = function (next) {\n      this.next = next;\n    };\n    CoSENode.prototype.getNext = function () {\n      return next;\n    };\n    CoSENode.prototype.setProcessed = function (processed) {\n      this.processed = processed;\n    };\n    CoSENode.prototype.isProcessed = function () {\n      return processed;\n    };\n    module.exports = CoSENode;\n\n    /***/\n  }), (/* 6 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var FDLayout = __webpack_require__(0).FDLayout;\n    var CoSEGraphManager = __webpack_require__(4);\n    var CoSEGraph = __webpack_require__(3);\n    var CoSENode = __webpack_require__(5);\n    var CoSEEdge = __webpack_require__(2);\n    var CoSEConstants = __webpack_require__(1);\n    var FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\n    var LayoutConstants = __webpack_require__(0).LayoutConstants;\n    var Point = __webpack_require__(0).Point;\n    var PointD = __webpack_require__(0).PointD;\n    var Layout = __webpack_require__(0).Layout;\n    var Integer = __webpack_require__(0).Integer;\n    var IGeometry = __webpack_require__(0).IGeometry;\n    var LGraph = __webpack_require__(0).LGraph;\n    var Transform = __webpack_require__(0).Transform;\n    function CoSELayout() {\n      FDLayout.call(this);\n      this.toBeTiled = {}; // Memorize if a node is to be tiled or is tiled\n    }\n    CoSELayout.prototype = Object.create(FDLayout.prototype);\n    for (var prop in FDLayout) {\n      CoSELayout[prop] = FDLayout[prop];\n    }\n    CoSELayout.prototype.newGraphManager = function () {\n      var gm = new CoSEGraphManager(this);\n      this.graphManager = gm;\n      return gm;\n    };\n    CoSELayout.prototype.newGraph = function (vGraph) {\n      return new CoSEGraph(null, this.graphManager, vGraph);\n    };\n    CoSELayout.prototype.newNode = function (vNode) {\n      return new CoSENode(this.graphManager, vNode);\n    };\n    CoSELayout.prototype.newEdge = function (vEdge) {\n      return new CoSEEdge(null, null, vEdge);\n    };\n    CoSELayout.prototype.initParameters = function () {\n      FDLayout.prototype.initParameters.call(this, arguments);\n      if (!this.isSubLayout) {\n        if (CoSEConstants.DEFAULT_EDGE_LENGTH < 10) {\n          this.idealEdgeLength = 10;\n        } else {\n          this.idealEdgeLength = CoSEConstants.DEFAULT_EDGE_LENGTH;\n        }\n        this.useSmartIdealEdgeLengthCalculation = CoSEConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n        this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n        this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n        this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n        this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n        this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n        this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n\n        // variables for tree reduction support\n        this.prunedNodesAll = [];\n        this.growTreeIterations = 0;\n        this.afterGrowthIterations = 0;\n        this.isTreeGrowing = false;\n        this.isGrowthFinished = false;\n\n        // variables for cooling\n        this.coolingCycle = 0;\n        this.maxCoolingCycle = this.maxIterations / FDLayoutConstants.CONVERGENCE_CHECK_PERIOD;\n        this.finalTemperature = FDLayoutConstants.CONVERGENCE_CHECK_PERIOD / this.maxIterations;\n        this.coolingAdjuster = 1;\n      }\n    };\n    CoSELayout.prototype.layout = function () {\n      var createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n      if (createBendsAsNeeded) {\n        this.createBendpoints();\n        this.graphManager.resetAllEdges();\n      }\n      this.level = 0;\n      return this.classicLayout();\n    };\n    CoSELayout.prototype.classicLayout = function () {\n      this.nodesWithGravity = this.calculateNodesToApplyGravitationTo();\n      this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity);\n      this.calcNoOfChildrenForAllNodes();\n      this.graphManager.calcLowestCommonAncestors();\n      this.graphManager.calcInclusionTreeDepths();\n      this.graphManager.getRoot().calcEstimatedSize();\n      this.calcIdealEdgeLengths();\n      if (!this.incremental) {\n        var forest = this.getFlatForest();\n\n        // The graph associated with this layout is flat and a forest\n        if (forest.length > 0) {\n          this.positionNodesRadially(forest);\n        }\n        // The graph associated with this layout is not flat or a forest\n        else {\n          // Reduce the trees when incremental mode is not enabled and graph is not a forest \n          this.reduceTrees();\n          // Update nodes that gravity will be applied\n          this.graphManager.resetAllNodesToApplyGravitation();\n          var allNodes = new Set(this.getAllNodes());\n          var intersection = this.nodesWithGravity.filter(function (x) {\n            return allNodes.has(x);\n          });\n          this.graphManager.setAllNodesToApplyGravitation(intersection);\n          this.positionNodesRandomly();\n        }\n      } else {\n        if (CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL) {\n          // Reduce the trees in incremental mode if only this constant is set to true \n          this.reduceTrees();\n          // Update nodes that gravity will be applied\n          this.graphManager.resetAllNodesToApplyGravitation();\n          var allNodes = new Set(this.getAllNodes());\n          var intersection = this.nodesWithGravity.filter(function (x) {\n            return allNodes.has(x);\n          });\n          this.graphManager.setAllNodesToApplyGravitation(intersection);\n        }\n      }\n      this.initSpringEmbedder();\n      this.runSpringEmbedder();\n      return true;\n    };\n    CoSELayout.prototype.tick = function () {\n      this.totalIterations++;\n      if (this.totalIterations === this.maxIterations && !this.isTreeGrowing && !this.isGrowthFinished) {\n        if (this.prunedNodesAll.length > 0) {\n          this.isTreeGrowing = true;\n        } else {\n          return true;\n        }\n      }\n      if (this.totalIterations % FDLayoutConstants.CONVERGENCE_CHECK_PERIOD == 0 && !this.isTreeGrowing && !this.isGrowthFinished) {\n        if (this.isConverged()) {\n          if (this.prunedNodesAll.length > 0) {\n            this.isTreeGrowing = true;\n          } else {\n            return true;\n          }\n        }\n        this.coolingCycle++;\n        if (this.layoutQuality == 0) {\n          // quality - \"draft\"\n          this.coolingAdjuster = this.coolingCycle;\n        } else if (this.layoutQuality == 1) {\n          // quality - \"default\"\n          this.coolingAdjuster = this.coolingCycle / 3;\n        }\n\n        // cooling schedule is based on http://www.btluke.com/simanf1.html -> cooling schedule 3\n        this.coolingFactor = Math.max(this.initialCoolingFactor - Math.pow(this.coolingCycle, Math.log(100 * (this.initialCoolingFactor - this.finalTemperature)) / Math.log(this.maxCoolingCycle)) / 100 * this.coolingAdjuster, this.finalTemperature);\n        this.animationPeriod = Math.ceil(this.initialAnimationPeriod * Math.sqrt(this.coolingFactor));\n      }\n      // Operations while tree is growing again \n      if (this.isTreeGrowing) {\n        if (this.growTreeIterations % 10 == 0) {\n          if (this.prunedNodesAll.length > 0) {\n            this.graphManager.updateBounds();\n            this.updateGrid();\n            this.growTree(this.prunedNodesAll);\n            // Update nodes that gravity will be applied\n            this.graphManager.resetAllNodesToApplyGravitation();\n            var allNodes = new Set(this.getAllNodes());\n            var intersection = this.nodesWithGravity.filter(function (x) {\n              return allNodes.has(x);\n            });\n            this.graphManager.setAllNodesToApplyGravitation(intersection);\n            this.graphManager.updateBounds();\n            this.updateGrid();\n            this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n          } else {\n            this.isTreeGrowing = false;\n            this.isGrowthFinished = true;\n          }\n        }\n        this.growTreeIterations++;\n      }\n      // Operations after growth is finished\n      if (this.isGrowthFinished) {\n        if (this.isConverged()) {\n          return true;\n        }\n        if (this.afterGrowthIterations % 10 == 0) {\n          this.graphManager.updateBounds();\n          this.updateGrid();\n        }\n        this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL * ((100 - this.afterGrowthIterations) / 100);\n        this.afterGrowthIterations++;\n      }\n      var gridUpdateAllowed = !this.isTreeGrowing && !this.isGrowthFinished;\n      var forceToNodeSurroundingUpdate = this.growTreeIterations % 10 == 1 && this.isTreeGrowing || this.afterGrowthIterations % 10 == 1 && this.isGrowthFinished;\n      this.totalDisplacement = 0;\n      this.graphManager.updateBounds();\n      this.calcSpringForces();\n      this.calcRepulsionForces(gridUpdateAllowed, forceToNodeSurroundingUpdate);\n      this.calcGravitationalForces();\n      this.moveNodes();\n      this.animate();\n      return false; // Layout is not ended yet return false\n    };\n    CoSELayout.prototype.getPositionsData = function () {\n      var allNodes = this.graphManager.getAllNodes();\n      var pData = {};\n      for (var i = 0; i < allNodes.length; i++) {\n        var rect = allNodes[i].rect;\n        var id = allNodes[i].id;\n        pData[id] = {\n          id: id,\n          x: rect.getCenterX(),\n          y: rect.getCenterY(),\n          w: rect.width,\n          h: rect.height\n        };\n      }\n      return pData;\n    };\n    CoSELayout.prototype.runSpringEmbedder = function () {\n      this.initialAnimationPeriod = 25;\n      this.animationPeriod = this.initialAnimationPeriod;\n      var layoutEnded = false;\n\n      // If aminate option is 'during' signal that layout is supposed to start iterating\n      if (FDLayoutConstants.ANIMATE === 'during') {\n        this.emit('layoutstarted');\n      } else {\n        // If aminate option is 'during' tick() function will be called on index.js\n        while (!layoutEnded) {\n          layoutEnded = this.tick();\n        }\n        this.graphManager.updateBounds();\n      }\n    };\n    CoSELayout.prototype.calculateNodesToApplyGravitationTo = function () {\n      var nodeList = [];\n      var graph;\n      var graphs = this.graphManager.getGraphs();\n      var size = graphs.length;\n      var i;\n      for (i = 0; i < size; i++) {\n        graph = graphs[i];\n        graph.updateConnected();\n        if (!graph.isConnected) {\n          nodeList = nodeList.concat(graph.getNodes());\n        }\n      }\n      return nodeList;\n    };\n    CoSELayout.prototype.createBendpoints = function () {\n      var edges = [];\n      edges = edges.concat(this.graphManager.getAllEdges());\n      var visited = new Set();\n      var i;\n      for (i = 0; i < edges.length; i++) {\n        var edge = edges[i];\n        if (!visited.has(edge)) {\n          var source = edge.getSource();\n          var target = edge.getTarget();\n          if (source == target) {\n            edge.getBendpoints().push(new PointD());\n            edge.getBendpoints().push(new PointD());\n            this.createDummyNodesForBendpoints(edge);\n            visited.add(edge);\n          } else {\n            var edgeList = [];\n            edgeList = edgeList.concat(source.getEdgeListToNode(target));\n            edgeList = edgeList.concat(target.getEdgeListToNode(source));\n            if (!visited.has(edgeList[0])) {\n              if (edgeList.length > 1) {\n                var k;\n                for (k = 0; k < edgeList.length; k++) {\n                  var multiEdge = edgeList[k];\n                  multiEdge.getBendpoints().push(new PointD());\n                  this.createDummyNodesForBendpoints(multiEdge);\n                }\n              }\n              edgeList.forEach(function (edge) {\n                visited.add(edge);\n              });\n            }\n          }\n        }\n        if (visited.size == edges.length) {\n          break;\n        }\n      }\n    };\n    CoSELayout.prototype.positionNodesRadially = function (forest) {\n      // We tile the trees to a grid row by row; first tree starts at (0,0)\n      var currentStartingPoint = new Point(0, 0);\n      var numberOfColumns = Math.ceil(Math.sqrt(forest.length));\n      var height = 0;\n      var currentY = 0;\n      var currentX = 0;\n      var point = new PointD(0, 0);\n      for (var i = 0; i < forest.length; i++) {\n        if (i % numberOfColumns == 0) {\n          // Start of a new row, make the x coordinate 0, increment the\n          // y coordinate with the max height of the previous row\n          currentX = 0;\n          currentY = height;\n          if (i != 0) {\n            currentY += CoSEConstants.DEFAULT_COMPONENT_SEPERATION;\n          }\n          height = 0;\n        }\n        var tree = forest[i];\n\n        // Find the center of the tree\n        var centerNode = Layout.findCenterOfTree(tree);\n\n        // Set the staring point of the next tree\n        currentStartingPoint.x = currentX;\n        currentStartingPoint.y = currentY;\n\n        // Do a radial layout starting with the center\n        point = CoSELayout.radialLayout(tree, centerNode, currentStartingPoint);\n        if (point.y > height) {\n          height = Math.floor(point.y);\n        }\n        currentX = Math.floor(point.x + CoSEConstants.DEFAULT_COMPONENT_SEPERATION);\n      }\n      this.transform(new PointD(LayoutConstants.WORLD_CENTER_X - point.x / 2, LayoutConstants.WORLD_CENTER_Y - point.y / 2));\n    };\n    CoSELayout.radialLayout = function (tree, centerNode, startingPoint) {\n      var radialSep = Math.max(this.maxDiagonalInTree(tree), CoSEConstants.DEFAULT_RADIAL_SEPARATION);\n      CoSELayout.branchRadialLayout(centerNode, null, 0, 359, 0, radialSep);\n      var bounds = LGraph.calculateBounds(tree);\n      var transform = new Transform();\n      transform.setDeviceOrgX(bounds.getMinX());\n      transform.setDeviceOrgY(bounds.getMinY());\n      transform.setWorldOrgX(startingPoint.x);\n      transform.setWorldOrgY(startingPoint.y);\n      for (var i = 0; i < tree.length; i++) {\n        var node = tree[i];\n        node.transform(transform);\n      }\n      var bottomRight = new PointD(bounds.getMaxX(), bounds.getMaxY());\n      return transform.inverseTransformPoint(bottomRight);\n    };\n    CoSELayout.branchRadialLayout = function (node, parentOfNode, startAngle, endAngle, distance, radialSeparation) {\n      // First, position this node by finding its angle.\n      var halfInterval = (endAngle - startAngle + 1) / 2;\n      if (halfInterval < 0) {\n        halfInterval += 180;\n      }\n      var nodeAngle = (halfInterval + startAngle) % 360;\n      var teta = nodeAngle * IGeometry.TWO_PI / 360;\n\n      // Make polar to java cordinate conversion.\n      var cos_teta = Math.cos(teta);\n      var x_ = distance * Math.cos(teta);\n      var y_ = distance * Math.sin(teta);\n      node.setCenter(x_, y_);\n\n      // Traverse all neighbors of this node and recursively call this\n      // function.\n      var neighborEdges = [];\n      neighborEdges = neighborEdges.concat(node.getEdges());\n      var childCount = neighborEdges.length;\n      if (parentOfNode != null) {\n        childCount--;\n      }\n      var branchCount = 0;\n      var incEdgesCount = neighborEdges.length;\n      var startIndex;\n      var edges = node.getEdgesBetween(parentOfNode);\n\n      // If there are multiple edges, prune them until there remains only one\n      // edge.\n      while (edges.length > 1) {\n        //neighborEdges.remove(edges.remove(0));\n        var temp = edges[0];\n        edges.splice(0, 1);\n        var index = neighborEdges.indexOf(temp);\n        if (index >= 0) {\n          neighborEdges.splice(index, 1);\n        }\n        incEdgesCount--;\n        childCount--;\n      }\n      if (parentOfNode != null) {\n        //assert edges.length == 1;\n        startIndex = (neighborEdges.indexOf(edges[0]) + 1) % incEdgesCount;\n      } else {\n        startIndex = 0;\n      }\n      var stepAngle = Math.abs(endAngle - startAngle) / childCount;\n      for (var i = startIndex; branchCount != childCount; i = ++i % incEdgesCount) {\n        var currentNeighbor = neighborEdges[i].getOtherEnd(node);\n\n        // Don't back traverse to root node in current tree.\n        if (currentNeighbor == parentOfNode) {\n          continue;\n        }\n        var childStartAngle = (startAngle + branchCount * stepAngle) % 360;\n        var childEndAngle = (childStartAngle + stepAngle) % 360;\n        CoSELayout.branchRadialLayout(currentNeighbor, node, childStartAngle, childEndAngle, distance + radialSeparation, radialSeparation);\n        branchCount++;\n      }\n    };\n    CoSELayout.maxDiagonalInTree = function (tree) {\n      var maxDiagonal = Integer.MIN_VALUE;\n      for (var i = 0; i < tree.length; i++) {\n        var node = tree[i];\n        var diagonal = node.getDiagonal();\n        if (diagonal > maxDiagonal) {\n          maxDiagonal = diagonal;\n        }\n      }\n      return maxDiagonal;\n    };\n    CoSELayout.prototype.calcRepulsionRange = function () {\n      // formula is 2 x (level + 1) x idealEdgeLength\n      return 2 * (this.level + 1) * this.idealEdgeLength;\n    };\n\n    // Tiling methods\n\n    // Group zero degree members whose parents are not to be tiled, create dummy parents where needed and fill memberGroups by their dummp parent id's\n    CoSELayout.prototype.groupZeroDegreeMembers = function () {\n      var self = this;\n      // array of [parent_id x oneDegreeNode_id]\n      var tempMemberGroups = {}; // A temporary map of parent node and its zero degree members\n      this.memberGroups = {}; // A map of dummy parent node and its zero degree members whose parents are not to be tiled\n      this.idToDummyNode = {}; // A map of id to dummy node \n\n      var zeroDegree = []; // List of zero degree nodes whose parents are not to be tiled\n      var allNodes = this.graphManager.getAllNodes();\n\n      // Fill zero degree list\n      for (var i = 0; i < allNodes.length; i++) {\n        var node = allNodes[i];\n        var parent = node.getParent();\n        // If a node has zero degree and its parent is not to be tiled if exists add that node to zeroDegres list\n        if (this.getNodeDegreeWithChildren(node) === 0 && (parent.id == undefined || !this.getToBeTiled(parent))) {\n          zeroDegree.push(node);\n        }\n      }\n\n      // Create a map of parent node and its zero degree members\n      for (var i = 0; i < zeroDegree.length; i++) {\n        var node = zeroDegree[i]; // Zero degree node itself\n        var p_id = node.getParent().id; // Parent id\n\n        if (typeof tempMemberGroups[p_id] === \"undefined\") tempMemberGroups[p_id] = [];\n        tempMemberGroups[p_id] = tempMemberGroups[p_id].concat(node); // Push node to the list belongs to its parent in tempMemberGroups\n      }\n\n      // If there are at least two nodes at a level, create a dummy compound for them\n      Object.keys(tempMemberGroups).forEach(function (p_id) {\n        if (tempMemberGroups[p_id].length > 1) {\n          var dummyCompoundId = \"DummyCompound_\" + p_id; // The id of dummy compound which will be created soon\n          self.memberGroups[dummyCompoundId] = tempMemberGroups[p_id]; // Add dummy compound to memberGroups\n\n          var parent = tempMemberGroups[p_id][0].getParent(); // The parent of zero degree nodes will be the parent of new dummy compound\n\n          // Create a dummy compound with calculated id\n          var dummyCompound = new CoSENode(self.graphManager);\n          dummyCompound.id = dummyCompoundId;\n          dummyCompound.paddingLeft = parent.paddingLeft || 0;\n          dummyCompound.paddingRight = parent.paddingRight || 0;\n          dummyCompound.paddingBottom = parent.paddingBottom || 0;\n          dummyCompound.paddingTop = parent.paddingTop || 0;\n          self.idToDummyNode[dummyCompoundId] = dummyCompound;\n          var dummyParentGraph = self.getGraphManager().add(self.newGraph(), dummyCompound);\n          var parentGraph = parent.getChild();\n\n          // Add dummy compound to parent the graph\n          parentGraph.add(dummyCompound);\n\n          // For each zero degree node in this level remove it from its parent graph and add it to the graph of dummy parent\n          for (var i = 0; i < tempMemberGroups[p_id].length; i++) {\n            var node = tempMemberGroups[p_id][i];\n            parentGraph.remove(node);\n            dummyParentGraph.add(node);\n          }\n        }\n      });\n    };\n    CoSELayout.prototype.clearCompounds = function () {\n      var childGraphMap = {};\n      var idToNode = {};\n\n      // Get compound ordering by finding the inner one first\n      this.performDFSOnCompounds();\n      for (var i = 0; i < this.compoundOrder.length; i++) {\n        idToNode[this.compoundOrder[i].id] = this.compoundOrder[i];\n        childGraphMap[this.compoundOrder[i].id] = [].concat(this.compoundOrder[i].getChild().getNodes());\n\n        // Remove children of compounds\n        this.graphManager.remove(this.compoundOrder[i].getChild());\n        this.compoundOrder[i].child = null;\n      }\n      this.graphManager.resetAllNodes();\n\n      // Tile the removed children\n      this.tileCompoundMembers(childGraphMap, idToNode);\n    };\n    CoSELayout.prototype.clearZeroDegreeMembers = function () {\n      var self = this;\n      var tiledZeroDegreePack = this.tiledZeroDegreePack = [];\n      Object.keys(this.memberGroups).forEach(function (id) {\n        var compoundNode = self.idToDummyNode[id]; // Get the dummy compound\n\n        tiledZeroDegreePack[id] = self.tileNodes(self.memberGroups[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n        // Set the width and height of the dummy compound as calculated\n        compoundNode.rect.width = tiledZeroDegreePack[id].width;\n        compoundNode.rect.height = tiledZeroDegreePack[id].height;\n      });\n    };\n    CoSELayout.prototype.repopulateCompounds = function () {\n      for (var i = this.compoundOrder.length - 1; i >= 0; i--) {\n        var lCompoundNode = this.compoundOrder[i];\n        var id = lCompoundNode.id;\n        var horizontalMargin = lCompoundNode.paddingLeft;\n        var verticalMargin = lCompoundNode.paddingTop;\n        this.adjustLocations(this.tiledMemberPack[id], lCompoundNode.rect.x, lCompoundNode.rect.y, horizontalMargin, verticalMargin);\n      }\n    };\n    CoSELayout.prototype.repopulateZeroDegreeMembers = function () {\n      var self = this;\n      var tiledPack = this.tiledZeroDegreePack;\n      Object.keys(tiledPack).forEach(function (id) {\n        var compoundNode = self.idToDummyNode[id]; // Get the dummy compound by its id\n        var horizontalMargin = compoundNode.paddingLeft;\n        var verticalMargin = compoundNode.paddingTop;\n\n        // Adjust the positions of nodes wrt its compound\n        self.adjustLocations(tiledPack[id], compoundNode.rect.x, compoundNode.rect.y, horizontalMargin, verticalMargin);\n      });\n    };\n    CoSELayout.prototype.getToBeTiled = function (node) {\n      var id = node.id;\n      //firstly check the previous results\n      if (this.toBeTiled[id] != null) {\n        return this.toBeTiled[id];\n      }\n\n      //only compound nodes are to be tiled\n      var childGraph = node.getChild();\n      if (childGraph == null) {\n        this.toBeTiled[id] = false;\n        return false;\n      }\n      var children = childGraph.getNodes(); // Get the children nodes\n\n      //a compound node is not to be tiled if all of its compound children are not to be tiled\n      for (var i = 0; i < children.length; i++) {\n        var theChild = children[i];\n        if (this.getNodeDegree(theChild) > 0) {\n          this.toBeTiled[id] = false;\n          return false;\n        }\n\n        //pass the children not having the compound structure\n        if (theChild.getChild() == null) {\n          this.toBeTiled[theChild.id] = false;\n          continue;\n        }\n        if (!this.getToBeTiled(theChild)) {\n          this.toBeTiled[id] = false;\n          return false;\n        }\n      }\n      this.toBeTiled[id] = true;\n      return true;\n    };\n\n    // Get degree of a node depending of its edges and independent of its children\n    CoSELayout.prototype.getNodeDegree = function (node) {\n      var id = node.id;\n      var edges = node.getEdges();\n      var degree = 0;\n\n      // For the edges connected\n      for (var i = 0; i < edges.length; i++) {\n        var edge = edges[i];\n        if (edge.getSource().id !== edge.getTarget().id) {\n          degree = degree + 1;\n        }\n      }\n      return degree;\n    };\n\n    // Get degree of a node with its children\n    CoSELayout.prototype.getNodeDegreeWithChildren = function (node) {\n      var degree = this.getNodeDegree(node);\n      if (node.getChild() == null) {\n        return degree;\n      }\n      var children = node.getChild().getNodes();\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        degree += this.getNodeDegreeWithChildren(child);\n      }\n      return degree;\n    };\n    CoSELayout.prototype.performDFSOnCompounds = function () {\n      this.compoundOrder = [];\n      this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes());\n    };\n    CoSELayout.prototype.fillCompexOrderByDFS = function (children) {\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        if (child.getChild() != null) {\n          this.fillCompexOrderByDFS(child.getChild().getNodes());\n        }\n        if (this.getToBeTiled(child)) {\n          this.compoundOrder.push(child);\n        }\n      }\n    };\n\n    /**\n    * This method places each zero degree member wrt given (x,y) coordinates (top left).\n    */\n    CoSELayout.prototype.adjustLocations = function (organization, x, y, compoundHorizontalMargin, compoundVerticalMargin) {\n      x += compoundHorizontalMargin;\n      y += compoundVerticalMargin;\n      var left = x;\n      for (var i = 0; i < organization.rows.length; i++) {\n        var row = organization.rows[i];\n        x = left;\n        var maxHeight = 0;\n        for (var j = 0; j < row.length; j++) {\n          var lnode = row[j];\n          lnode.rect.x = x; // + lnode.rect.width / 2;\n          lnode.rect.y = y; // + lnode.rect.height / 2;\n\n          x += lnode.rect.width + organization.horizontalPadding;\n          if (lnode.rect.height > maxHeight) maxHeight = lnode.rect.height;\n        }\n        y += maxHeight + organization.verticalPadding;\n      }\n    };\n    CoSELayout.prototype.tileCompoundMembers = function (childGraphMap, idToNode) {\n      var self = this;\n      this.tiledMemberPack = [];\n      Object.keys(childGraphMap).forEach(function (id) {\n        // Get the compound node\n        var compoundNode = idToNode[id];\n        self.tiledMemberPack[id] = self.tileNodes(childGraphMap[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n        compoundNode.rect.width = self.tiledMemberPack[id].width;\n        compoundNode.rect.height = self.tiledMemberPack[id].height;\n      });\n    };\n    CoSELayout.prototype.tileNodes = function (nodes, minWidth) {\n      var verticalPadding = CoSEConstants.TILING_PADDING_VERTICAL;\n      var horizontalPadding = CoSEConstants.TILING_PADDING_HORIZONTAL;\n      var organization = {\n        rows: [],\n        rowWidth: [],\n        rowHeight: [],\n        width: 0,\n        height: minWidth,\n        // assume minHeight equals to minWidth\n        verticalPadding: verticalPadding,\n        horizontalPadding: horizontalPadding\n      };\n\n      // Sort the nodes in ascending order of their areas\n      nodes.sort(function (n1, n2) {\n        if (n1.rect.width * n1.rect.height > n2.rect.width * n2.rect.height) return -1;\n        if (n1.rect.width * n1.rect.height < n2.rect.width * n2.rect.height) return 1;\n        return 0;\n      });\n\n      // Create the organization -> tile members\n      for (var i = 0; i < nodes.length; i++) {\n        var lNode = nodes[i];\n        if (organization.rows.length == 0) {\n          this.insertNodeToRow(organization, lNode, 0, minWidth);\n        } else if (this.canAddHorizontal(organization, lNode.rect.width, lNode.rect.height)) {\n          this.insertNodeToRow(organization, lNode, this.getShortestRowIndex(organization), minWidth);\n        } else {\n          this.insertNodeToRow(organization, lNode, organization.rows.length, minWidth);\n        }\n        this.shiftToLastRow(organization);\n      }\n      return organization;\n    };\n    CoSELayout.prototype.insertNodeToRow = function (organization, node, rowIndex, minWidth) {\n      var minCompoundSize = minWidth;\n\n      // Add new row if needed\n      if (rowIndex == organization.rows.length) {\n        var secondDimension = [];\n        organization.rows.push(secondDimension);\n        organization.rowWidth.push(minCompoundSize);\n        organization.rowHeight.push(0);\n      }\n\n      // Update row width\n      var w = organization.rowWidth[rowIndex] + node.rect.width;\n      if (organization.rows[rowIndex].length > 0) {\n        w += organization.horizontalPadding;\n      }\n      organization.rowWidth[rowIndex] = w;\n      // Update compound width\n      if (organization.width < w) {\n        organization.width = w;\n      }\n\n      // Update height\n      var h = node.rect.height;\n      if (rowIndex > 0) h += organization.verticalPadding;\n      var extraHeight = 0;\n      if (h > organization.rowHeight[rowIndex]) {\n        extraHeight = organization.rowHeight[rowIndex];\n        organization.rowHeight[rowIndex] = h;\n        extraHeight = organization.rowHeight[rowIndex] - extraHeight;\n      }\n      organization.height += extraHeight;\n\n      // Insert node\n      organization.rows[rowIndex].push(node);\n    };\n\n    //Scans the rows of an organization and returns the one with the min width\n    CoSELayout.prototype.getShortestRowIndex = function (organization) {\n      var r = -1;\n      var min = Number.MAX_VALUE;\n      for (var i = 0; i < organization.rows.length; i++) {\n        if (organization.rowWidth[i] < min) {\n          r = i;\n          min = organization.rowWidth[i];\n        }\n      }\n      return r;\n    };\n\n    //Scans the rows of an organization and returns the one with the max width\n    CoSELayout.prototype.getLongestRowIndex = function (organization) {\n      var r = -1;\n      var max = Number.MIN_VALUE;\n      for (var i = 0; i < organization.rows.length; i++) {\n        if (organization.rowWidth[i] > max) {\n          r = i;\n          max = organization.rowWidth[i];\n        }\n      }\n      return r;\n    };\n\n    /**\n    * This method checks whether adding extra width to the organization violates\n    * the aspect ratio(1) or not.\n    */\n    CoSELayout.prototype.canAddHorizontal = function (organization, extraWidth, extraHeight) {\n      var sri = this.getShortestRowIndex(organization);\n      if (sri < 0) {\n        return true;\n      }\n      var min = organization.rowWidth[sri];\n      if (min + organization.horizontalPadding + extraWidth <= organization.width) return true;\n      var hDiff = 0;\n\n      // Adding to an existing row\n      if (organization.rowHeight[sri] < extraHeight) {\n        if (sri > 0) hDiff = extraHeight + organization.verticalPadding - organization.rowHeight[sri];\n      }\n      var add_to_row_ratio;\n      if (organization.width - min >= extraWidth + organization.horizontalPadding) {\n        add_to_row_ratio = (organization.height + hDiff) / (min + extraWidth + organization.horizontalPadding);\n      } else {\n        add_to_row_ratio = (organization.height + hDiff) / organization.width;\n      }\n\n      // Adding a new row for this node\n      hDiff = extraHeight + organization.verticalPadding;\n      var add_new_row_ratio;\n      if (organization.width < extraWidth) {\n        add_new_row_ratio = (organization.height + hDiff) / extraWidth;\n      } else {\n        add_new_row_ratio = (organization.height + hDiff) / organization.width;\n      }\n      if (add_new_row_ratio < 1) add_new_row_ratio = 1 / add_new_row_ratio;\n      if (add_to_row_ratio < 1) add_to_row_ratio = 1 / add_to_row_ratio;\n      return add_to_row_ratio < add_new_row_ratio;\n    };\n\n    //If moving the last node from the longest row and adding it to the last\n    //row makes the bounding box smaller, do it.\n    CoSELayout.prototype.shiftToLastRow = function (organization) {\n      var longest = this.getLongestRowIndex(organization);\n      var last = organization.rowWidth.length - 1;\n      var row = organization.rows[longest];\n      var node = row[row.length - 1];\n      var diff = node.width + organization.horizontalPadding;\n\n      // Check if there is enough space on the last row\n      if (organization.width - organization.rowWidth[last] > diff && longest != last) {\n        // Remove the last element of the longest row\n        row.splice(-1, 1);\n\n        // Push it to the last row\n        organization.rows[last].push(node);\n        organization.rowWidth[longest] = organization.rowWidth[longest] - diff;\n        organization.rowWidth[last] = organization.rowWidth[last] + diff;\n        organization.width = organization.rowWidth[instance.getLongestRowIndex(organization)];\n\n        // Update heights of the organization\n        var maxHeight = Number.MIN_VALUE;\n        for (var i = 0; i < row.length; i++) {\n          if (row[i].height > maxHeight) maxHeight = row[i].height;\n        }\n        if (longest > 0) maxHeight += organization.verticalPadding;\n        var prevTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n        organization.rowHeight[longest] = maxHeight;\n        if (organization.rowHeight[last] < node.height + organization.verticalPadding) organization.rowHeight[last] = node.height + organization.verticalPadding;\n        var finalTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n        organization.height += finalTotal - prevTotal;\n        this.shiftToLastRow(organization);\n      }\n    };\n    CoSELayout.prototype.tilingPreLayout = function () {\n      if (CoSEConstants.TILE) {\n        // Find zero degree nodes and create a compound for each level\n        this.groupZeroDegreeMembers();\n        // Tile and clear children of each compound\n        this.clearCompounds();\n        // Separately tile and clear zero degree nodes for each level\n        this.clearZeroDegreeMembers();\n      }\n    };\n    CoSELayout.prototype.tilingPostLayout = function () {\n      if (CoSEConstants.TILE) {\n        this.repopulateZeroDegreeMembers();\n        this.repopulateCompounds();\n      }\n    };\n\n    // -----------------------------------------------------------------------------\n    // Section: Tree Reduction methods\n    // -----------------------------------------------------------------------------\n    // Reduce trees \n    CoSELayout.prototype.reduceTrees = function () {\n      var prunedNodesAll = [];\n      var containsLeaf = true;\n      var node;\n      while (containsLeaf) {\n        var allNodes = this.graphManager.getAllNodes();\n        var prunedNodesInStepTemp = [];\n        containsLeaf = false;\n        for (var i = 0; i < allNodes.length; i++) {\n          node = allNodes[i];\n          if (node.getEdges().length == 1 && !node.getEdges()[0].isInterGraph && node.getChild() == null) {\n            prunedNodesInStepTemp.push([node, node.getEdges()[0], node.getOwner()]);\n            containsLeaf = true;\n          }\n        }\n        if (containsLeaf == true) {\n          var prunedNodesInStep = [];\n          for (var j = 0; j < prunedNodesInStepTemp.length; j++) {\n            if (prunedNodesInStepTemp[j][0].getEdges().length == 1) {\n              prunedNodesInStep.push(prunedNodesInStepTemp[j]);\n              prunedNodesInStepTemp[j][0].getOwner().remove(prunedNodesInStepTemp[j][0]);\n            }\n          }\n          prunedNodesAll.push(prunedNodesInStep);\n          this.graphManager.resetAllNodes();\n          this.graphManager.resetAllEdges();\n        }\n      }\n      this.prunedNodesAll = prunedNodesAll;\n    };\n\n    // Grow tree one step \n    CoSELayout.prototype.growTree = function (prunedNodesAll) {\n      var lengthOfPrunedNodesInStep = prunedNodesAll.length;\n      var prunedNodesInStep = prunedNodesAll[lengthOfPrunedNodesInStep - 1];\n      var nodeData;\n      for (var i = 0; i < prunedNodesInStep.length; i++) {\n        nodeData = prunedNodesInStep[i];\n        this.findPlaceforPrunedNode(nodeData);\n        nodeData[2].add(nodeData[0]);\n        nodeData[2].add(nodeData[1], nodeData[1].source, nodeData[1].target);\n      }\n      prunedNodesAll.splice(prunedNodesAll.length - 1, 1);\n      this.graphManager.resetAllNodes();\n      this.graphManager.resetAllEdges();\n    };\n\n    // Find an appropriate position to replace pruned node, this method can be improved\n    CoSELayout.prototype.findPlaceforPrunedNode = function (nodeData) {\n      var gridForPrunedNode;\n      var nodeToConnect;\n      var prunedNode = nodeData[0];\n      if (prunedNode == nodeData[1].source) {\n        nodeToConnect = nodeData[1].target;\n      } else {\n        nodeToConnect = nodeData[1].source;\n      }\n      var startGridX = nodeToConnect.startX;\n      var finishGridX = nodeToConnect.finishX;\n      var startGridY = nodeToConnect.startY;\n      var finishGridY = nodeToConnect.finishY;\n      var upNodeCount = 0;\n      var downNodeCount = 0;\n      var rightNodeCount = 0;\n      var leftNodeCount = 0;\n      var controlRegions = [upNodeCount, rightNodeCount, downNodeCount, leftNodeCount];\n      if (startGridY > 0) {\n        for (var i = startGridX; i <= finishGridX; i++) {\n          controlRegions[0] += this.grid[i][startGridY - 1].length + this.grid[i][startGridY].length - 1;\n        }\n      }\n      if (finishGridX < this.grid.length - 1) {\n        for (var i = startGridY; i <= finishGridY; i++) {\n          controlRegions[1] += this.grid[finishGridX + 1][i].length + this.grid[finishGridX][i].length - 1;\n        }\n      }\n      if (finishGridY < this.grid[0].length - 1) {\n        for (var i = startGridX; i <= finishGridX; i++) {\n          controlRegions[2] += this.grid[i][finishGridY + 1].length + this.grid[i][finishGridY].length - 1;\n        }\n      }\n      if (startGridX > 0) {\n        for (var i = startGridY; i <= finishGridY; i++) {\n          controlRegions[3] += this.grid[startGridX - 1][i].length + this.grid[startGridX][i].length - 1;\n        }\n      }\n      var min = Integer.MAX_VALUE;\n      var minCount;\n      var minIndex;\n      for (var j = 0; j < controlRegions.length; j++) {\n        if (controlRegions[j] < min) {\n          min = controlRegions[j];\n          minCount = 1;\n          minIndex = j;\n        } else if (controlRegions[j] == min) {\n          minCount++;\n        }\n      }\n      if (minCount == 3 && min == 0) {\n        if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[2] == 0) {\n          gridForPrunedNode = 1;\n        } else if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[3] == 0) {\n          gridForPrunedNode = 0;\n        } else if (controlRegions[0] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n          gridForPrunedNode = 3;\n        } else if (controlRegions[1] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n          gridForPrunedNode = 2;\n        }\n      } else if (minCount == 2 && min == 0) {\n        var random = Math.floor(Math.random() * 2);\n        if (controlRegions[0] == 0 && controlRegions[1] == 0) {\n          ;\n          if (random == 0) {\n            gridForPrunedNode = 0;\n          } else {\n            gridForPrunedNode = 1;\n          }\n        } else if (controlRegions[0] == 0 && controlRegions[2] == 0) {\n          if (random == 0) {\n            gridForPrunedNode = 0;\n          } else {\n            gridForPrunedNode = 2;\n          }\n        } else if (controlRegions[0] == 0 && controlRegions[3] == 0) {\n          if (random == 0) {\n            gridForPrunedNode = 0;\n          } else {\n            gridForPrunedNode = 3;\n          }\n        } else if (controlRegions[1] == 0 && controlRegions[2] == 0) {\n          if (random == 0) {\n            gridForPrunedNode = 1;\n          } else {\n            gridForPrunedNode = 2;\n          }\n        } else if (controlRegions[1] == 0 && controlRegions[3] == 0) {\n          if (random == 0) {\n            gridForPrunedNode = 1;\n          } else {\n            gridForPrunedNode = 3;\n          }\n        } else {\n          if (random == 0) {\n            gridForPrunedNode = 2;\n          } else {\n            gridForPrunedNode = 3;\n          }\n        }\n      } else if (minCount == 4 && min == 0) {\n        var random = Math.floor(Math.random() * 4);\n        gridForPrunedNode = random;\n      } else {\n        gridForPrunedNode = minIndex;\n      }\n      if (gridForPrunedNode == 0) {\n        prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() - nodeToConnect.getHeight() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getHeight() / 2);\n      } else if (gridForPrunedNode == 1) {\n        prunedNode.setCenter(nodeToConnect.getCenterX() + nodeToConnect.getWidth() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n      } else if (gridForPrunedNode == 2) {\n        prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() + nodeToConnect.getHeight() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getHeight() / 2);\n      } else {\n        prunedNode.setCenter(nodeToConnect.getCenterX() - nodeToConnect.getWidth() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n      }\n    };\n    module.exports = CoSELayout;\n\n    /***/\n  }), (/* 7 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var coseBase = {};\n    coseBase.layoutBase = __webpack_require__(0);\n    coseBase.CoSEConstants = __webpack_require__(1);\n    coseBase.CoSEEdge = __webpack_require__(2);\n    coseBase.CoSEGraph = __webpack_require__(3);\n    coseBase.CoSEGraphManager = __webpack_require__(4);\n    coseBase.CoSELayout = __webpack_require__(6);\n    coseBase.CoSENode = __webpack_require__(5);\n    module.exports = coseBase;\n\n    /***/\n  }\n  /******/)]);\n});","(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"cose-base\"));else if (typeof define === 'function' && define.amd) define([\"cose-base\"], factory);else if (typeof exports === 'object') exports[\"cytoscapeCoseBilkent\"] = factory(require(\"cose-base\"));else root[\"cytoscapeCoseBilkent\"] = factory(root[\"coseBase\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_0__) {\n  return /******/function (modules) {\n    // webpackBootstrap\n    /******/ // The module cache\n    /******/\n    var installedModules = {};\n    /******/\n    /******/ // The require function\n    /******/\n    function __webpack_require__(moduleId) {\n      /******/\n      /******/ // Check if module is in cache\n      /******/if (installedModules[moduleId]) {\n        /******/return installedModules[moduleId].exports;\n        /******/\n      }\n      /******/ // Create a new module (and put it into the cache)\n      /******/\n      var module = installedModules[moduleId] = {\n        /******/i: moduleId,\n        /******/l: false,\n        /******/exports: {}\n        /******/\n      };\n      /******/\n      /******/ // Execute the module function\n      /******/\n      modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n      /******/\n      /******/ // Flag the module as loaded\n      /******/\n      module.l = true;\n      /******/\n      /******/ // Return the exports of the module\n      /******/\n      return module.exports;\n      /******/\n    }\n    /******/\n    /******/\n    /******/ // expose the modules object (__webpack_modules__)\n    /******/\n    __webpack_require__.m = modules;\n    /******/\n    /******/ // expose the module cache\n    /******/\n    __webpack_require__.c = installedModules;\n    /******/\n    /******/ // identity function for calling harmony imports with the correct context\n    /******/\n    __webpack_require__.i = function (value) {\n      return value;\n    };\n    /******/\n    /******/ // define getter function for harmony exports\n    /******/\n    __webpack_require__.d = function (exports, name, getter) {\n      /******/if (!__webpack_require__.o(exports, name)) {\n        /******/Object.defineProperty(exports, name, {\n          /******/configurable: false,\n          /******/enumerable: true,\n          /******/get: getter\n          /******/\n        });\n        /******/\n      }\n      /******/\n    };\n    /******/\n    /******/ // getDefaultExport function for compatibility with non-harmony modules\n    /******/\n    __webpack_require__.n = function (module) {\n      /******/var getter = module && module.__esModule ? /******/function getDefault() {\n        return module['default'];\n      } : /******/function getModuleExports() {\n        return module;\n      };\n      /******/\n      __webpack_require__.d(getter, 'a', getter);\n      /******/\n      return getter;\n      /******/\n    };\n    /******/\n    /******/ // Object.prototype.hasOwnProperty.call\n    /******/\n    __webpack_require__.o = function (object, property) {\n      return Object.prototype.hasOwnProperty.call(object, property);\n    };\n    /******/\n    /******/ // __webpack_public_path__\n    /******/\n    __webpack_require__.p = \"\";\n    /******/\n    /******/ // Load entry module and return exports\n    /******/\n    return __webpack_require__(__webpack_require__.s = 1);\n    /******/\n  }\n  /************************************************************************/\n  /******/([(/* 0 */\n  /***/function (module, exports) {\n    module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n    /***/\n  }), (/* 1 */\n  /***/function (module, exports, __webpack_require__) {\n    \"use strict\";\n\n    var LayoutConstants = __webpack_require__(0).layoutBase.LayoutConstants;\n    var FDLayoutConstants = __webpack_require__(0).layoutBase.FDLayoutConstants;\n    var CoSEConstants = __webpack_require__(0).CoSEConstants;\n    var CoSELayout = __webpack_require__(0).CoSELayout;\n    var CoSENode = __webpack_require__(0).CoSENode;\n    var PointD = __webpack_require__(0).layoutBase.PointD;\n    var DimensionD = __webpack_require__(0).layoutBase.DimensionD;\n    var defaults = {\n      // Called on `layoutready`\n      ready: function ready() {},\n      // Called on `layoutstop`\n      stop: function stop() {},\n      // 'draft', 'default' or 'proof\" \n      // - 'draft' fast cooling rate \n      // - 'default' moderate cooling rate \n      // - \"proof\" slow cooling rate\n      quality: 'default',\n      // include labels in node dimensions\n      nodeDimensionsIncludeLabels: false,\n      // number of ticks per frame; higher is faster but more jerky\n      refresh: 30,\n      // Whether to fit the network view after when done\n      fit: true,\n      // Padding on fit\n      padding: 10,\n      // Whether to enable incremental mode\n      randomize: true,\n      // Node repulsion (non overlapping) multiplier\n      nodeRepulsion: 4500,\n      // Ideal edge (non nested) length\n      idealEdgeLength: 50,\n      // Divisor to compute edge forces\n      edgeElasticity: 0.45,\n      // Nesting factor (multiplier) to compute ideal edge length for nested edges\n      nestingFactor: 0.1,\n      // Gravity force (constant)\n      gravity: 0.25,\n      // Maximum number of iterations to perform\n      numIter: 2500,\n      // For enabling tiling\n      tile: true,\n      // Type of layout animation. The option set is {'during', 'end', false}\n      animate: 'end',\n      // Duration for animate:end\n      animationDuration: 500,\n      // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\n      tilingPaddingVertical: 10,\n      // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\n      tilingPaddingHorizontal: 10,\n      // Gravity range (constant) for compounds\n      gravityRangeCompound: 1.5,\n      // Gravity force (constant) for compounds\n      gravityCompound: 1.0,\n      // Gravity range (constant)\n      gravityRange: 3.8,\n      // Initial cooling factor for incremental layout\n      initialEnergyOnIncremental: 0.5\n    };\n    function extend(defaults, options) {\n      var obj = {};\n      for (var i in defaults) {\n        obj[i] = defaults[i];\n      }\n      for (var i in options) {\n        obj[i] = options[i];\n      }\n      return obj;\n    }\n    ;\n    function _CoSELayout(_options) {\n      this.options = extend(defaults, _options);\n      getUserOptions(this.options);\n    }\n    var getUserOptions = function getUserOptions(options) {\n      if (options.nodeRepulsion != null) CoSEConstants.DEFAULT_REPULSION_STRENGTH = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH = options.nodeRepulsion;\n      if (options.idealEdgeLength != null) CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = options.idealEdgeLength;\n      if (options.edgeElasticity != null) CoSEConstants.DEFAULT_SPRING_STRENGTH = FDLayoutConstants.DEFAULT_SPRING_STRENGTH = options.edgeElasticity;\n      if (options.nestingFactor != null) CoSEConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = options.nestingFactor;\n      if (options.gravity != null) CoSEConstants.DEFAULT_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = options.gravity;\n      if (options.numIter != null) CoSEConstants.MAX_ITERATIONS = FDLayoutConstants.MAX_ITERATIONS = options.numIter;\n      if (options.gravityRange != null) CoSEConstants.DEFAULT_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = options.gravityRange;\n      if (options.gravityCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = options.gravityCompound;\n      if (options.gravityRangeCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = options.gravityRangeCompound;\n      if (options.initialEnergyOnIncremental != null) CoSEConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = options.initialEnergyOnIncremental;\n      if (options.quality == 'draft') LayoutConstants.QUALITY = 0;else if (options.quality == 'proof') LayoutConstants.QUALITY = 2;else LayoutConstants.QUALITY = 1;\n      CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS = FDLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = options.nodeDimensionsIncludeLabels;\n      CoSEConstants.DEFAULT_INCREMENTAL = FDLayoutConstants.DEFAULT_INCREMENTAL = LayoutConstants.DEFAULT_INCREMENTAL = !options.randomize;\n      CoSEConstants.ANIMATE = FDLayoutConstants.ANIMATE = LayoutConstants.ANIMATE = options.animate;\n      CoSEConstants.TILE = options.tile;\n      CoSEConstants.TILING_PADDING_VERTICAL = typeof options.tilingPaddingVertical === 'function' ? options.tilingPaddingVertical.call() : options.tilingPaddingVertical;\n      CoSEConstants.TILING_PADDING_HORIZONTAL = typeof options.tilingPaddingHorizontal === 'function' ? options.tilingPaddingHorizontal.call() : options.tilingPaddingHorizontal;\n    };\n    _CoSELayout.prototype.run = function () {\n      var ready;\n      var frameId;\n      var options = this.options;\n      var idToLNode = this.idToLNode = {};\n      var layout = this.layout = new CoSELayout();\n      var self = this;\n      self.stopped = false;\n      this.cy = this.options.cy;\n      this.cy.trigger({\n        type: 'layoutstart',\n        layout: this\n      });\n      var gm = layout.newGraphManager();\n      this.gm = gm;\n      var nodes = this.options.eles.nodes();\n      var edges = this.options.eles.edges();\n      this.root = gm.addRoot();\n      this.processChildrenList(this.root, this.getTopMostNodes(nodes), layout);\n      for (var i = 0; i < edges.length; i++) {\n        var edge = edges[i];\n        var sourceNode = this.idToLNode[edge.data(\"source\")];\n        var targetNode = this.idToLNode[edge.data(\"target\")];\n        if (sourceNode !== targetNode && sourceNode.getEdgesBetween(targetNode).length == 0) {\n          var e1 = gm.add(layout.newEdge(), sourceNode, targetNode);\n          e1.id = edge.id();\n        }\n      }\n      var getPositions = function getPositions(ele, i) {\n        if (typeof ele === \"number\") {\n          ele = i;\n        }\n        var theId = ele.data('id');\n        var lNode = self.idToLNode[theId];\n        return {\n          x: lNode.getRect().getCenterX(),\n          y: lNode.getRect().getCenterY()\n        };\n      };\n\n      /*\n       * Reposition nodes in iterations animatedly\n       */\n      var iterateAnimated = function iterateAnimated() {\n        // Thigs to perform after nodes are repositioned on screen\n        var afterReposition = function afterReposition() {\n          if (options.fit) {\n            options.cy.fit(options.eles, options.padding);\n          }\n          if (!ready) {\n            ready = true;\n            self.cy.one('layoutready', options.ready);\n            self.cy.trigger({\n              type: 'layoutready',\n              layout: self\n            });\n          }\n        };\n        var ticksPerFrame = self.options.refresh;\n        var isDone;\n        for (var i = 0; i < ticksPerFrame && !isDone; i++) {\n          isDone = self.stopped || self.layout.tick();\n        }\n\n        // If layout is done\n        if (isDone) {\n          // If the layout is not a sublayout and it is successful perform post layout.\n          if (layout.checkLayoutSuccess() && !layout.isSubLayout) {\n            layout.doPostLayout();\n          }\n\n          // If layout has a tilingPostLayout function property call it.\n          if (layout.tilingPostLayout) {\n            layout.tilingPostLayout();\n          }\n          layout.isLayoutFinished = true;\n          self.options.eles.nodes().positions(getPositions);\n          afterReposition();\n\n          // trigger layoutstop when the layout stops (e.g. finishes)\n          self.cy.one('layoutstop', self.options.stop);\n          self.cy.trigger({\n            type: 'layoutstop',\n            layout: self\n          });\n          if (frameId) {\n            cancelAnimationFrame(frameId);\n          }\n          ready = false;\n          return;\n        }\n        var animationData = self.layout.getPositionsData(); // Get positions of layout nodes note that all nodes may not be layout nodes because of tiling\n\n        // Position nodes, for the nodes whose id does not included in data (because they are removed from their parents and included in dummy compounds)\n        // use position of their ancestors or dummy ancestors\n        options.eles.nodes().positions(function (ele, i) {\n          if (typeof ele === \"number\") {\n            ele = i;\n          }\n          // If ele is a compound node, then its position will be defined by its children\n          if (!ele.isParent()) {\n            var theId = ele.id();\n            var pNode = animationData[theId];\n            var temp = ele;\n            // If pNode is undefined search until finding position data of its first ancestor (It may be dummy as well)\n            while (pNode == null) {\n              pNode = animationData[temp.data('parent')] || animationData['DummyCompound_' + temp.data('parent')];\n              animationData[theId] = pNode;\n              temp = temp.parent()[0];\n              if (temp == undefined) {\n                break;\n              }\n            }\n            if (pNode != null) {\n              return {\n                x: pNode.x,\n                y: pNode.y\n              };\n            } else {\n              return {\n                x: ele.position('x'),\n                y: ele.position('y')\n              };\n            }\n          }\n        });\n        afterReposition();\n        frameId = requestAnimationFrame(iterateAnimated);\n      };\n\n      /*\n      * Listen 'layoutstarted' event and start animated iteration if animate option is 'during'\n      */\n      layout.addListener('layoutstarted', function () {\n        if (self.options.animate === 'during') {\n          frameId = requestAnimationFrame(iterateAnimated);\n        }\n      });\n      layout.runLayout(); // Run cose layout\n\n      /*\n       * If animate option is not 'during' ('end' or false) perform these here (If it is 'during' similar things are already performed)\n       */\n      if (this.options.animate !== \"during\") {\n        self.options.eles.nodes().not(\":parent\").layoutPositions(self, self.options, getPositions); // Use layout positions to reposition the nodes it considers the options parameter\n        ready = false;\n      }\n      return this; // chaining\n    };\n\n    //Get the top most ones of a list of nodes\n    _CoSELayout.prototype.getTopMostNodes = function (nodes) {\n      var nodesMap = {};\n      for (var i = 0; i < nodes.length; i++) {\n        nodesMap[nodes[i].id()] = true;\n      }\n      var roots = nodes.filter(function (ele, i) {\n        if (typeof ele === \"number\") {\n          ele = i;\n        }\n        var parent = ele.parent()[0];\n        while (parent != null) {\n          if (nodesMap[parent.id()]) {\n            return false;\n          }\n          parent = parent.parent()[0];\n        }\n        return true;\n      });\n      return roots;\n    };\n    _CoSELayout.prototype.processChildrenList = function (parent, children, layout) {\n      var size = children.length;\n      for (var i = 0; i < size; i++) {\n        var theChild = children[i];\n        var children_of_children = theChild.children();\n        var theNode;\n        var dimensions = theChild.layoutDimensions({\n          nodeDimensionsIncludeLabels: this.options.nodeDimensionsIncludeLabels\n        });\n        if (theChild.outerWidth() != null && theChild.outerHeight() != null) {\n          theNode = parent.add(new CoSENode(layout.graphManager, new PointD(theChild.position('x') - dimensions.w / 2, theChild.position('y') - dimensions.h / 2), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n        } else {\n          theNode = parent.add(new CoSENode(this.graphManager));\n        }\n        // Attach id to the layout node\n        theNode.id = theChild.data(\"id\");\n        // Attach the paddings of cy node to layout node\n        theNode.paddingLeft = parseInt(theChild.css('padding'));\n        theNode.paddingTop = parseInt(theChild.css('padding'));\n        theNode.paddingRight = parseInt(theChild.css('padding'));\n        theNode.paddingBottom = parseInt(theChild.css('padding'));\n\n        //Attach the label properties to compound if labels will be included in node dimensions  \n        if (this.options.nodeDimensionsIncludeLabels) {\n          if (theChild.isParent()) {\n            var labelWidth = theChild.boundingBox({\n              includeLabels: true,\n              includeNodes: false\n            }).w;\n            var labelHeight = theChild.boundingBox({\n              includeLabels: true,\n              includeNodes: false\n            }).h;\n            var labelPos = theChild.css(\"text-halign\");\n            theNode.labelWidth = labelWidth;\n            theNode.labelHeight = labelHeight;\n            theNode.labelPos = labelPos;\n          }\n        }\n\n        // Map the layout node\n        this.idToLNode[theChild.data(\"id\")] = theNode;\n        if (isNaN(theNode.rect.x)) {\n          theNode.rect.x = 0;\n        }\n        if (isNaN(theNode.rect.y)) {\n          theNode.rect.y = 0;\n        }\n        if (children_of_children != null && children_of_children.length > 0) {\n          var theNewGraph;\n          theNewGraph = layout.getGraphManager().add(layout.newGraph(), theNode);\n          this.processChildrenList(theNewGraph, children_of_children, layout);\n        }\n      }\n    };\n\n    /**\n     * @brief : called on continuous layouts to stop them before they finish\n     */\n    _CoSELayout.prototype.stop = function () {\n      this.stopped = true;\n      return this; // chaining\n    };\n    var register = function register(cytoscape) {\n      //  var Layout = getLayout( cytoscape );\n\n      cytoscape('layout', 'cose-bilkent', _CoSELayout);\n    };\n\n    // auto reg for globals\n    if (typeof cytoscape !== 'undefined') {\n      register(cytoscape);\n    }\n    module.exports = register;\n\n    /***/\n  }\n  /******/)]);\n});"],"names":["factory","modules","installedModules","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_require__","LayoutConstants","QUALITY","DEFAULT_CREATE_BENDS_AS_NEEDED","DEFAULT_INCREMENTAL","DEFAULT_ANIMATION_ON_LAYOUT","DEFAULT_ANIMATION_DURING_LAYOUT","DEFAULT_ANIMATION_PERIOD","DEFAULT_UNIFORM_LEAF_NODE_SIZES","DEFAULT_GRAPH_MARGIN","NODE_DIMENSIONS_INCLUDE_LABELS","SIMPLE_NODE_SIZE","SIMPLE_NODE_HALF_SIZE","EMPTY_COMPOUND_NODE_SIZE","MIN_EDGE_LENGTH","WORLD_BOUNDARY","INITIAL_WORLD_BOUNDARY","WORLD_CENTER_X","WORLD_CENTER_Y","LGraphObject","IGeometry","IMath","LEdge","source","target","vEdge","this","isOverlapingSourceAndTarget","vGraphObject","bendpoints","prop","create","getSource","getTarget","isInterGraph","getLength","length","getBendpoints","getLca","lca","getSourceInLca","sourceInLca","getTargetInLca","targetInLca","getOtherEnd","node","getOtherEndInGraph","graph","otherEnd","root","getGraphManager","getRoot","getOwner","getParent","updateLength","clipPointCoordinates","Array","getIntersection","getRect","lengthX","lengthY","Math","abs","sign","sqrt","updateLengthSimple","getCenterX","getCenterY","Integer","RectangleD","RandomSeed","PointD","LNode","gm","loc","size","vNode","graphManager","estimatedSize","MIN_VALUE","inclusionTreeDepth","MAX_VALUE","edges","rect","x","y","width","height","getEdges","getChild","child","owner","getWidth","setWidth","getHeight","setHeight","getCenter","getLocation","getDiagonal","getHalfTheDiagonal","setRect","upperLeft","dimension","setCenter","cx","cy","setLocation","moveBy","dx","dy","getEdgeListToNode","to","edgeList","self","forEach","edge","push","getEdgesBetween","other","getNeighborsList","neighbors","Set","add","withChildren","withNeighborsList","nodes","getNodes","getNoOfChildren","noOfChildren","getEstimatedSize","calcEstimatedSize","scatter","randomCenterX","randomCenterY","minX","maxX","nextDouble","minY","maxY","updateBounds","childGraph","getLeft","getTop","getRight","getBottom","labelWidth","labelHeight","labelPos","getInclusionTreeDepth","transform","trans","left","top","leftTop","vLeftTop","inverseTransformPoint","getX","getY","setX","setY","getDifference","pt","DimensionD","getCopy","translate","dim","LGraphManager","Point","LinkedList","LGraph","parent","obj2","vGraph","margin","isConnected","Layout","right","bottom","obj1","sourceNode","targetNode","newNode","indexOf","newEdge","remove","obj","edgesToBeRemoved","slice","index","splice","sourceIndex","targetIndex","updateLeftTop","nodeTop","nodeLeft","lNode","undefined","paddingLeft","recursive","nodeRight","nodeBottom","boundingRect","calculateBounds","updateConnected","neighborEdges","currentNeighbor","queue","visited","currentNode","shift","has","noOfVisitedInThisGraph","visitedNode","layout","graphs","addRoot","ngraph","newGraph","nnode","setRootGraph","rootGraph","parentNode","sourceGraph","targetGraph","lObj","concat","nodesToBeRemoved","getGraphs","getAllNodes","allNodes","nodeList","resetAllNodes","resetAllEdges","allEdges","resetAllNodesToApplyGravitation","allNodesToApplyGravitation","getAllEdges","getAllNodesToApplyGravitation","setAllNodesToApplyGravitation","getLayout","isOneAncestorOfOther","firstNode","secondNode","ownerGraph","calcLowestCommonAncestors","sourceAncestorGraph","targetAncestorGraph","calcLowestCommonAncestor","firstOwnerGraph","secondOwnerGraph","calcInclusionTreeDepths","depth","includesInvalidEdge","FDLayoutConstants","MAX_ITERATIONS","DEFAULT_EDGE_LENGTH","DEFAULT_SPRING_STRENGTH","DEFAULT_REPULSION_STRENGTH","DEFAULT_GRAVITY_STRENGTH","DEFAULT_COMPOUND_GRAVITY_STRENGTH","DEFAULT_GRAVITY_RANGE_FACTOR","DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR","DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION","DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION","DEFAULT_COOLING_FACTOR_INCREMENTAL","COOLING_ADAPTATION_FACTOR","ADAPTATION_LOWER_NODE_LIMIT","ADAPTATION_UPPER_NODE_LIMIT","MAX_NODE_DISPLACEMENT_INCREMENTAL","MAX_NODE_DISPLACEMENT","MIN_REPULSION_DIST","CONVERGENCE_CHECK_PERIOD","PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR","GRID_CALCULATION_CHECK_PERIOD","calcSeparationAmount","rectA","rectB","overlapAmount","separationBuffer","intersects","directions","decideDirectionsForOverlappingNodes","min","max","slope","moveByY","moveByX","getIntersection2","result","p1x","p1y","p2x","p2y","topLeftAx","topLeftAy","topRightAx","bottomLeftAx","bottomLeftAy","bottomRightAx","halfWidthA","getWidthHalf","halfHeightA","getHeightHalf","topLeftBx","topLeftBy","topRightBx","bottomLeftBx","bottomLeftBy","bottomRightBx","halfWidthB","halfHeightB","clipPointAFound","clipPointBFound","slopeA","slopeB","slopePrime","cardinalDirectionA","cardinalDirectionB","tempPointAx","tempPointAy","tempPointBx","tempPointBy","getCardinalDirection","line","s1","s2","f1","f2","a1","a2","b1","b2","c1","c2","denom","x1","y1","x2","y2","x3","y3","x4","y4","angleOfVector","Cx","Cy","Nx","Ny","C_angle","atan","PI","TWO_PI","ONE_AND_HALF_PI","HALF_PI","doIntersect","p1","p2","p3","p4","a","b","q","r","det","lambda","gamma","THREE_PI","floor","ceil","_createClass","defineProperties","props","descriptor","writable","key","Constructor","protoProps","staticProps","nodeFrom","next","prev","list","head","tail","_remove","vals","_this","instance","TypeError","_classCallCheck","v","val","otherNode","current","constructor","parseInt","move","equals","toString","getMinX","getMaxX","getMinY","getMaxY","_typeof","Symbol","iterator","UniqueIDGeneretor","lastID","createID","isPrimitive","uniqueID","getString","id","arg","type","_toConsumableArray","arr","isArray","arr2","from","Transform","Emitter","isRemoteUse","layoutQuality","createBendsAsNeeded","incremental","animationOnLayout","animationDuringLayout","animationPeriod","uniformLeafNodeSizes","edgeToDummyNodes","Map","isLayoutFinished","isSubLayout","RANDOM_SEED","newGraphManager","checkLayoutSuccess","runLayout","isLayoutSuccessfull","tilingPreLayout","initParameters","ANIMATE","doPostLayout","tilingPostLayout","update","update2","createBendpointsFromDummyNodes","newLeftTop","setWorldOrgX","setWorldOrgY","setDeviceOrgX","setDeviceOrgY","positionNodesRandomly","getFlatForest","flatForest","isForest","isFlat","toBeVisited","parents","unProcessedNodes","set","temp","createDummyNodesForBendpoints","dummyNodes","dummyNode","Dimension","dummyEdge","keys","k","lEdge","path","ebp","sliderValue","defaultValue","minDiv","maxMul","findCenterOfTree","removedNodes","remainingDegrees","foundCenter","centerNode","degree","tempList","tempList2","neighbour","newDegree","setGraphManager","seed","sin","lworldOrgX","lworldOrgY","ldeviceOrgX","ldeviceOrgY","lworldExtX","lworldExtY","ldeviceExtX","ldeviceExtY","getWorldOrgX","wox","getWorldOrgY","woy","getWorldExtX","setWorldExtX","wex","getWorldExtY","setWorldExtY","wey","getDeviceOrgX","dox","getDeviceOrgY","doy","getDeviceExtX","setDeviceExtX","dex","getDeviceExtY","setDeviceExtY","dey","transformX","xDevice","worldExtX","transformY","yDevice","worldExtY","inverseTransformX","xWorld","deviceExtX","inverseTransformY","yWorld","deviceExtY","inPoint","FDLayout","useSmartIdealEdgeLengthCalculation","idealEdgeLength","springConstant","repulsionConstant","gravityConstant","compoundGravityConstant","gravityRangeFactor","compoundGravityRangeFactor","displacementThresholdPerNode","coolingFactor","initialCoolingFactor","totalDisplacement","oldTotalDisplacement","maxIterations","arguments","totalIterations","notAnimatedIterations","useFRGridVariant","grid","calcIdealEdgeLengths","lcaDepth","sizeOfSourceInLca","sizeOfTargetInLca","idealLength","initSpringEmbedder","maxNodeDisplacement","totalDisplacementThreshold","repulsionRange","calcRepulsionRange","calcSpringForces","lEdges","calcSpringForce","calcRepulsionForces","j","nodeA","nodeB","processedNodeSet","gridUpdateAllowed","forceToNodeSurroundingUpdate","lNodes","updateGrid","calculateRepulsionForceOfANode","calcRepulsionForce","calcGravitationalForces","calcGravitationalForce","moveNodes","springForce","springForceX","springForceY","distanceX","distanceY","distanceSquared","distance","repulsionForce","repulsionForceX","repulsionForceY","clipPoints","childrenConstant","ownerCenterX","ownerCenterY","absDistanceX","absDistanceY","gravitationForceX","gravitationForceY","isConverged","converged","oscilating","animate","calcNoOfChildrenForAllNodes","calcGrid","sizeX","sizeY","addNodeToGrid","startX","finishX","startY","finishY","setGridCoordinates","surrounding","FDLayoutEdge","FDLayoutNode","displacementX","displacementY","_startX","_finishX","_startY","_finishY","HashMap","map","put","theId","contains","keySet","HashSet","clear","isEmpty","addAllTo","addAll","Quicksort","A","compareFunction","_defaultCompareFunction","_quicksort","_partition","_get","_swap","get_object_at","set_object_at","_set","NeedlemanWunsch","sequence1","sequence2","match_score","mismatch_penalty","gap_penalty","iMax","jMax","tracebackGrid","_i","_j","alignments","score","computeGrids","_i2","_j2","maxOf","indices","arrayAllMaxIndexes","includes","inProcessAlignments","pos","seq1","seq2","indexes","array","getAllIndexes","apply","layoutBase","listeners","addListener","event","callback","removeListener","emit","data","parser","o2","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","parser2","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","getLogger","info","addNode","descr","decorateNode","icon","class","$","getType","nodeType","DEFAULT","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","stack","tstack","vstack","lstack","args","lexer2","lexer","sharedState","setInput","yylloc","yyloc","ranges","options","getPrototypeOf","symbol","state","action","len","newState","expected","token","yyval","pop","lex","errStr","showPosition","join","text","match","first_line","last_line","first_column","last_column","range","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","parser$1","cnt","elements","NO_BORDER","ROUNDED_RECT","RECT","CIRCLE","CLOUD","BANG","HEXAGON","db$1","level","_a","_b","conf","padding","mindmap","nodeId","children","maxNodeWidth","getMindmap","startStr","endStr","debug","setElementForId","element","decoration","config","type2Str","getElementById","drawNodes","db2","svg","section","elem","fullSection","htmlLabels","nodeElem","append","sectionClass","attr","bkgElem","textElem","description","useHtmlLabels","classes","bbox","getBBox","fontSize","orgHeight","heightDiff","defaultBkg","roundedRectBkg","rectBkg","circleBkg","w","h","r1","r2","r3","r4","cloudBkg","bangBkg","_db","points","insert","insertPolygonShape","hexagonBkg","drawNode","addNodes","group","labelText","position","layoutMindmap","Promise","resolve","renderEl","container","document","style","selector","layoutDimensions","quality","styleEnabled","run","ready","e","use","diagram","db","renderer","draw","async","_version","diagObj","mm","edgesElem","nodesElem","edgesEl","_private","bodyBounds","bounds","rscratch","midX","midY","endX","endY","drawEdges","positionNode","el","positionNodes","useMaxWidth","styles","sections","THEME_COLOR_LIMIT","sw","genSections","git0","gitBranchLabel0","__WEBPACK_EXTERNAL_MODULE_0__","CoSEConstants","DEFAULT_USE_MULTI_LEVEL_SCALING","DEFAULT_RADIAL_SEPARATION","DEFAULT_COMPONENT_SEPERATION","TILE","TILING_PADDING_VERTICAL","TILING_PADDING_HORIZONTAL","TREE_REDUCTION_ON_INCREMENTAL","CoSEEdge","CoSEGraph","graphMgr","CoSEGraphManager","CoSENode","propogateDisplacementToChildren","dX","dY","setPred1","pred1","getPred1","getPred2","pred2","setNext","getNext","setProcessed","processed","isProcessed","CoSELayout","toBeTiled","prunedNodesAll","growTreeIterations","afterGrowthIterations","isTreeGrowing","isGrowthFinished","coolingCycle","maxCoolingCycle","finalTemperature","coolingAdjuster","createBendpoints","classicLayout","nodesWithGravity","calculateNodesToApplyGravitationTo","reduceTrees","intersection","filter","forest","positionNodesRadially","runSpringEmbedder","tick","pow","log","initialAnimationPeriod","growTree","getPositionsData","pData","layoutEnded","multiEdge","currentStartingPoint","numberOfColumns","currentY","currentX","point","tree","radialLayout","startingPoint","radialSep","maxDiagonalInTree","branchRadialLayout","bottomRight","parentOfNode","startAngle","endAngle","radialSeparation","halfInterval","teta","x_","cos","y_","childCount","startIndex","branchCount","incEdgesCount","stepAngle","childStartAngle","childEndAngle","maxDiagonal","diagonal","groupZeroDegreeMembers","tempMemberGroups","memberGroups","idToDummyNode","zeroDegree","getNodeDegreeWithChildren","getToBeTiled","p_id","dummyCompoundId","dummyCompound","paddingRight","paddingBottom","paddingTop","dummyParentGraph","parentGraph","clearCompounds","childGraphMap","idToNode","performDFSOnCompounds","compoundOrder","tileCompoundMembers","clearZeroDegreeMembers","tiledZeroDegreePack","compoundNode","tileNodes","repopulateCompounds","lCompoundNode","horizontalMargin","verticalMargin","adjustLocations","tiledMemberPack","repopulateZeroDegreeMembers","tiledPack","theChild","getNodeDegree","fillCompexOrderByDFS","organization","compoundHorizontalMargin","compoundVerticalMargin","rows","row","maxHeight","lnode","horizontalPadding","verticalPadding","minWidth","rowWidth","rowHeight","sort","n1","n2","insertNodeToRow","canAddHorizontal","getShortestRowIndex","shiftToLastRow","rowIndex","minCompoundSize","extraHeight","Number","getLongestRowIndex","extraWidth","sri","add_to_row_ratio","add_new_row_ratio","hDiff","longest","last","diff","prevTotal","finalTotal","containsLeaf","prunedNodesInStepTemp","prunedNodesInStep","nodeData","findPlaceforPrunedNode","gridForPrunedNode","nodeToConnect","prunedNode","startGridX","finishGridX","startGridY","finishGridY","controlRegions","minCount","minIndex","random","coseBase","defaults","stop","nodeDimensionsIncludeLabels","refresh","fit","randomize","nodeRepulsion","edgeElasticity","nestingFactor","gravity","numIter","tile","animationDuration","tilingPaddingVertical","tilingPaddingHorizontal","gravityRangeCompound","gravityCompound","gravityRange","initialEnergyOnIncremental","_CoSELayout","_options","extend","getUserOptions","frameId","idToLNode","stopped","trigger","eles","processChildrenList","getTopMostNodes","getPositions","ele","iterateAnimated","isDone","afterReposition","one","ticksPerFrame","positions","cancelAnimationFrame","animationData","isParent","pNode","requestAnimationFrame","not","layoutPositions","nodesMap","roots","theNode","theNewGraph","children_of_children","dimensions","outerWidth","outerHeight","parseFloat","css","boundingBox","includeLabels","includeNodes","isNaN","register","cytoscape"],"sourceRoot":""}