{"version":3,"sources":["webpack:///./src/components/Main/Wrapper.tsx","webpack:///./src/components/Main/Article.tsx","webpack:///./src/components/Post/Header.tsx","webpack:///./src/pages/404.tsx","webpack:///./src/components/Main/Main.tsx"],"names":["StyleArticle","styled","div","props","theme","main","minWidth","base","bars","fontSize","css","fonts","content","size","M","sizeM","sizeL","colors","background","sizes","articleMaxWidth","infoBar","linkHover","L","PostWrapper","children","fontSizeState","useSelector","state","fontSizeIncrease","PageContent","article","lineHeight","link","contentHeading","weight","h3Size","blockquoteFrame","text","lines","Article","PostHead","PostTitle","h1","title","PostSubTitle","h2","subTitle","PostDate","time","meta","PostHeader","date","defaultProps","NotFound","StyleMain","info","width","actionsBar","Main","Scroll","isPost"],"mappings":"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","file":"component---src-pages-404-tsx-8675b07d6093c5ec2aca.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { ReduxState } from '../../state/store';\n\nconst StyleArticle = styled.div<{ fontSize: number }>`\n  margin: 0 auto;\n\n  & strong,\n  & b {\n    letter-spacing: -0.02em;\n  }\n\n  ${props => {\n    const { main, minWidth, base, bars } = props.theme;\n    const { fontSize } = props;\n    return css`\n      font-size: calc(${main.fonts.content.size * fontSize}rem);\n\n      @media ${minWidth.M} {\n        font-size: calc(${main.fonts.content.sizeM * fontSize}rem);\n      }\n\n      @media ${minWidth.M} {\n        font-size: calc(${main.fonts.content.sizeL * fontSize}rem);\n      }\n\n      background: ${main.colors.background};\n      max-width: ${main.sizes.articleMaxWidth};\n      padding: calc(${bars.sizes.infoBar}px + 1.5em) 1.5em;\n\n      & a {\n        font-weight: bold;\n        letter-spacing: -0.02em;\n        text-decoration: underline;\n        transition: 0.3s;\n\n        &:hover {\n          color: ${base.colors.linkHover};\n        }\n      }\n\n      @media ${minWidth.M} {\n        padding: calc(2.5rem + ${bars.sizes.infoBar}px) 2.5em;\n      }\n\n      @media ${minWidth.L} {\n        padding: 3.5rem 3.5em;\n      }\n    `;\n  }}\n`;\n\ntype PostWrapperProps = {\n  children: React.ReactNode;\n};\n\nconst PostWrapper = ({ children }: PostWrapperProps): ReactElement => {\n  const fontSizeState = useSelector<ReduxState, number>(\n    state => state.fontSizeIncrease,\n  );\n\n  return <StyleArticle fontSize={fontSizeState}>{children}</StyleArticle>;\n};\n\nexport default PostWrapper;\n","import React, { ReactElement } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst PageContent = styled.article`\n  & li {\n    margin: 0 0 0.5em 0;\n  }\n\n  & p {\n    margin: 0 0 1.5em 0;\n    font-weight: 400;\n  }\n\n  & table {\n    display: inline-block;\n    overflow-x: auto;\n    margin: 0.5em 0 2.5em;\n    max-width: 100%;\n    width: auto;\n    border-spacing: 0;\n    border-collapse: collapse;\n    white-space: nowrap;\n    vertical-align: top;\n  }\n\n  ${props => {\n    const { main, base, minWidth } = props.theme;\n    return css`\n      color: ${main.colors.content};\n      line-height: ${main.fonts.content.lineHeight};\n\n      & a {\n        color: ${base.colors.link};\n      }\n\n      & h1,\n      & h2,\n      & h3 {\n        color: ${main.colors.contentHeading};\n        font-weight: ${main.fonts.contentHeading.weight};\n        line-height: ${main.fonts.contentHeading.lineHeight};\n        margin: 2em 0 1em;\n        letter-spacing: -0.02em;\n      }\n      & h3 {\n        font-size: ${main.fonts.contentHeading.h3Size}em;\n      }\n      & ul {\n        list-style: circle;\n        padding: 0 0 0 1.3em;\n        @media ${minWidth.M} {\n          padding: 0 0 0 2em;\n        }\n      }\n      & blockquote {\n        border: 5px solid ${main.colors.blockquoteFrame};\n        font-style: italic;\n        margin: 2.5em 0;\n        padding: 1em 1.1em 1em 1.3em;\n        position: relative;\n        & p {\n          margin: 0;\n        }\n        &::before,\n        &::after {\n          background: ${main.colors.background};\n          content: '';\n          height: 5px;\n          left: 50%;\n          margin-left: -47%;\n          position: absolute;\n          top: -5px;\n          width: 94%;\n        }\n        &::after {\n          top: auto;\n          bottom: -5px;\n        }\n      }\n\n      & table th {\n        // color: ${base.colors.text};\n        font-size: 1.2rem;\n        font-weight: 700;\n        letter-spacing: 0.2px;\n        text-align: left;\n        text-transform: uppercase;\n        background-color: ${base.colors.lines};\n      }\n\n      & table th,\n      & table td {\n        padding: 6px 12px;\n        border: 1px solid ${base.colors.text};\n      }\n    `;\n  }}\n`;\n\ntype ArticleProps = {\n  children: React.ReactNode;\n};\n\nfunction Article({ children }: ArticleProps): ReactElement {\n  return <PageContent>{children}</PageContent>;\n}\n\nexport default Article;\n","import React, { ReactElement } from 'react';\nimport styled, { css } from 'styled-components';\n\nconst PostHead = styled.div`\n  margin: 0 0 3em;\n`;\n\nconst PostTitle = styled.h1`\n  letter-spacing: -0.04em;\n\n  ${props => {\n    const { main, minWidth } = props.theme;\n    return css`\n      color: ${main.colors.title};\n      font-size: ${main.fonts.title.size}em;\n      font-weight: ${main.fonts.title.weight};\n      line-height: ${main.fonts.title.lineHeight};\n      margin: 0 0 0.4em;\n\n      @media ${minWidth.M} {\n        font-size: ${main.fonts.title.sizeM}em;\n      }\n\n      @media ${minWidth.L} {\n        font-size: ${main.fonts.title.sizeL}em;\n        letter-spacing: -0.05em;\n      }\n    `;\n  }}\n`;\n\nconst PostSubTitle = styled.h2`\n  ${props => {\n    const { main, minWidth } = props.theme;\n    return css`\n      color: ${main.colors.subTitle};\n      font-size: ${main.fonts.subTitle.size}em;\n      line-height: ${main.fonts.subTitle.lineHeight};\n      font-weight: ${main.fonts.subTitle.weight};\n\n      @media ${minWidth.M} {\n        font-size: ${main.fonts.subTitle.sizeM}em;\n      }\n\n      @media ${minWidth.L} {\n        font-size: ${main.fonts.subTitle.sizeL}em;\n      }\n    `;\n  }}\n`;\n\nconst PostDate = styled.time`\n  ${props => {\n    const { main } = props.theme;\n    return css`\n      font-size: ${main.fonts.meta.size}em;\n      font-weight: ${main.fonts.meta.weight};\n      color: ${main.colors.meta};\n    `;\n  }}\n`;\n\ntype PostHeaderProps = {\n  title: string;\n  subTitle?: string;\n  date?: string;\n};\n\nfunction PostHeader({ title, subTitle, date }: PostHeaderProps): ReactElement {\n  return (\n    <PostHead>\n      <PostTitle>{title}</PostTitle>\n      <PostSubTitle>{subTitle}</PostSubTitle>\n      <PostDate>{date}</PostDate>\n    </PostHead>\n  );\n}\n\nPostHeader.defaultProps = {\n  subTitle: '',\n  date: '',\n};\n\nexport default PostHeader;\n","import React, { ReactElement } from 'react';\nimport Main from '../components/Main';\nimport PostWrapper from '../components/Main/Wrapper';\nimport Article from '../components/Main/Article';\nimport PageHeader from '../components/Post/Header';\n\nfunction NotFound(): ReactElement {\n  return (\n    <Main>\n      <PostWrapper>\n        <Article>\n          <PageHeader title=\"404 Error: Page not Found\" />\n          404 Error: Page not Found\n        </Article>\n      </PostWrapper>\n    </Main>\n  );\n}\n\nexport default NotFound;\n","import React, { ReactElement } from 'react';\nimport styled, { css } from 'styled-components';\nimport Scroll from '../Scroll';\n\nconst StyleMain = styled.main`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  animation-name: main-entry;\n  animation-duration: 0.5s;\n\n  @media print {\n    position: relative;\n\n    & > div {\n      overflow: visible !important;\n    }\n\n    & > div > div {\n      position: relative !important;\n    }\n  }\n\n  @keyframes main-entry {\n    0% {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  ${props => {\n    const { minWidth, info, bars } = props.theme;\n    return css`\n      @media ${minWidth.L} {\n        width: calc(100vw - ${info.sizes.width}px - ${bars.sizes.actionsBar}px);\n        left: ${info.sizes.width}px;\n      }\n    `;\n  }}\n`;\n\ntype MainProps = {\n  children: React.ReactNode;\n};\n\nfunction Main({ children }: MainProps): ReactElement {\n  return (\n    <StyleMain>\n      <Scroll isPost>{children}</Scroll>\n    </StyleMain>\n  );\n}\n\nexport default Main;\n"],"sourceRoot":""}