{"version":3,"file":"22-e7a57d5ac19fc4c7e862.js","mappings":"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","sources":["webpack://bradkim06/./node_modules/cose-base/cose-base.js","webpack://bradkim06/./node_modules/cytoscape-cose-bilkent/cytoscape-cose-bilkent.js","webpack://bradkim06/./node_modules/layout-base/layout-base.js","webpack://bradkim06/./node_modules/mermaid/dist/mindmap-definition-65b51176.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"layout-base\"));else if (typeof define === 'function' && define.amd) define([\"layout-base\"], factory);else if (typeof exports === 'object') exports[\"coseBase\"] = factory(require(\"layout-base\"));else root[\"coseBase\"] = factory(root[\"layoutBase\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_0__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // identity function for calling harmony imports with the correct context\n\n      /******/\n\n      __webpack_require__.i = function (value) {\n        return value;\n      };\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 7);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\n\n      function CoSEConstants() {} //CoSEConstants inherits static props in FDLayoutConstants\n\n\n      for (var prop in FDLayoutConstants) {\n        CoSEConstants[prop] = FDLayoutConstants[prop];\n      }\n\n      CoSEConstants.DEFAULT_USE_MULTI_LEVEL_SCALING = false;\n      CoSEConstants.DEFAULT_RADIAL_SEPARATION = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n      CoSEConstants.DEFAULT_COMPONENT_SEPERATION = 60;\n      CoSEConstants.TILE = true;\n      CoSEConstants.TILING_PADDING_VERTICAL = 10;\n      CoSEConstants.TILING_PADDING_HORIZONTAL = 10;\n      CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = false; // make this true when cose is used incrementally as a part of other non-incremental layout\n\n      module.exports = CoSEConstants;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var FDLayoutEdge = __webpack_require__(0).FDLayoutEdge;\n\n      function CoSEEdge(source, target, vEdge) {\n        FDLayoutEdge.call(this, source, target, vEdge);\n      }\n\n      CoSEEdge.prototype = Object.create(FDLayoutEdge.prototype);\n\n      for (var prop in FDLayoutEdge) {\n        CoSEEdge[prop] = FDLayoutEdge[prop];\n      }\n\n      module.exports = CoSEEdge;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LGraph = __webpack_require__(0).LGraph;\n\n      function CoSEGraph(parent, graphMgr, vGraph) {\n        LGraph.call(this, parent, graphMgr, vGraph);\n      }\n\n      CoSEGraph.prototype = Object.create(LGraph.prototype);\n\n      for (var prop in LGraph) {\n        CoSEGraph[prop] = LGraph[prop];\n      }\n\n      module.exports = CoSEGraph;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LGraphManager = __webpack_require__(0).LGraphManager;\n\n      function CoSEGraphManager(layout) {\n        LGraphManager.call(this, layout);\n      }\n\n      CoSEGraphManager.prototype = Object.create(LGraphManager.prototype);\n\n      for (var prop in LGraphManager) {\n        CoSEGraphManager[prop] = LGraphManager[prop];\n      }\n\n      module.exports = CoSEGraphManager;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var FDLayoutNode = __webpack_require__(0).FDLayoutNode;\n\n      var IMath = __webpack_require__(0).IMath;\n\n      function CoSENode(gm, loc, size, vNode) {\n        FDLayoutNode.call(this, gm, loc, size, vNode);\n      }\n\n      CoSENode.prototype = Object.create(FDLayoutNode.prototype);\n\n      for (var prop in FDLayoutNode) {\n        CoSENode[prop] = FDLayoutNode[prop];\n      }\n\n      CoSENode.prototype.move = function () {\n        var layout = this.graphManager.getLayout();\n        this.displacementX = layout.coolingFactor * (this.springForceX + this.repulsionForceX + this.gravitationForceX) / this.noOfChildren;\n        this.displacementY = layout.coolingFactor * (this.springForceY + this.repulsionForceY + this.gravitationForceY) / this.noOfChildren;\n\n        if (Math.abs(this.displacementX) > layout.coolingFactor * layout.maxNodeDisplacement) {\n          this.displacementX = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementX);\n        }\n\n        if (Math.abs(this.displacementY) > layout.coolingFactor * layout.maxNodeDisplacement) {\n          this.displacementY = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementY);\n        } // a simple node, just move it\n\n\n        if (this.child == null) {\n          this.moveBy(this.displacementX, this.displacementY);\n        } // an empty compound node, again just move it\n        else if (this.child.getNodes().length == 0) {\n          this.moveBy(this.displacementX, this.displacementY);\n        } // non-empty compound node, propogate movement to children as well\n        else {\n          this.propogateDisplacementToChildren(this.displacementX, this.displacementY);\n        }\n\n        layout.totalDisplacement += Math.abs(this.displacementX) + Math.abs(this.displacementY);\n        this.springForceX = 0;\n        this.springForceY = 0;\n        this.repulsionForceX = 0;\n        this.repulsionForceY = 0;\n        this.gravitationForceX = 0;\n        this.gravitationForceY = 0;\n        this.displacementX = 0;\n        this.displacementY = 0;\n      };\n\n      CoSENode.prototype.propogateDisplacementToChildren = function (dX, dY) {\n        var nodes = this.getChild().getNodes();\n        var node;\n\n        for (var i = 0; i < nodes.length; i++) {\n          node = nodes[i];\n\n          if (node.getChild() == null) {\n            node.moveBy(dX, dY);\n            node.displacementX += dX;\n            node.displacementY += dY;\n          } else {\n            node.propogateDisplacementToChildren(dX, dY);\n          }\n        }\n      };\n\n      CoSENode.prototype.setPred1 = function (pred1) {\n        this.pred1 = pred1;\n      };\n\n      CoSENode.prototype.getPred1 = function () {\n        return pred1;\n      };\n\n      CoSENode.prototype.getPred2 = function () {\n        return pred2;\n      };\n\n      CoSENode.prototype.setNext = function (next) {\n        this.next = next;\n      };\n\n      CoSENode.prototype.getNext = function () {\n        return next;\n      };\n\n      CoSENode.prototype.setProcessed = function (processed) {\n        this.processed = processed;\n      };\n\n      CoSENode.prototype.isProcessed = function () {\n        return processed;\n      };\n\n      module.exports = CoSENode;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var FDLayout = __webpack_require__(0).FDLayout;\n\n      var CoSEGraphManager = __webpack_require__(4);\n\n      var CoSEGraph = __webpack_require__(3);\n\n      var CoSENode = __webpack_require__(5);\n\n      var CoSEEdge = __webpack_require__(2);\n\n      var CoSEConstants = __webpack_require__(1);\n\n      var FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\n\n      var LayoutConstants = __webpack_require__(0).LayoutConstants;\n\n      var Point = __webpack_require__(0).Point;\n\n      var PointD = __webpack_require__(0).PointD;\n\n      var Layout = __webpack_require__(0).Layout;\n\n      var Integer = __webpack_require__(0).Integer;\n\n      var IGeometry = __webpack_require__(0).IGeometry;\n\n      var LGraph = __webpack_require__(0).LGraph;\n\n      var Transform = __webpack_require__(0).Transform;\n\n      function CoSELayout() {\n        FDLayout.call(this);\n        this.toBeTiled = {}; // Memorize if a node is to be tiled or is tiled\n      }\n\n      CoSELayout.prototype = Object.create(FDLayout.prototype);\n\n      for (var prop in FDLayout) {\n        CoSELayout[prop] = FDLayout[prop];\n      }\n\n      CoSELayout.prototype.newGraphManager = function () {\n        var gm = new CoSEGraphManager(this);\n        this.graphManager = gm;\n        return gm;\n      };\n\n      CoSELayout.prototype.newGraph = function (vGraph) {\n        return new CoSEGraph(null, this.graphManager, vGraph);\n      };\n\n      CoSELayout.prototype.newNode = function (vNode) {\n        return new CoSENode(this.graphManager, vNode);\n      };\n\n      CoSELayout.prototype.newEdge = function (vEdge) {\n        return new CoSEEdge(null, null, vEdge);\n      };\n\n      CoSELayout.prototype.initParameters = function () {\n        FDLayout.prototype.initParameters.call(this, arguments);\n\n        if (!this.isSubLayout) {\n          if (CoSEConstants.DEFAULT_EDGE_LENGTH < 10) {\n            this.idealEdgeLength = 10;\n          } else {\n            this.idealEdgeLength = CoSEConstants.DEFAULT_EDGE_LENGTH;\n          }\n\n          this.useSmartIdealEdgeLengthCalculation = CoSEConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n          this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n          this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n          this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n          this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n          this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n          this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR; // variables for tree reduction support\n\n          this.prunedNodesAll = [];\n          this.growTreeIterations = 0;\n          this.afterGrowthIterations = 0;\n          this.isTreeGrowing = false;\n          this.isGrowthFinished = false; // variables for cooling\n\n          this.coolingCycle = 0;\n          this.maxCoolingCycle = this.maxIterations / FDLayoutConstants.CONVERGENCE_CHECK_PERIOD;\n          this.finalTemperature = FDLayoutConstants.CONVERGENCE_CHECK_PERIOD / this.maxIterations;\n          this.coolingAdjuster = 1;\n        }\n      };\n\n      CoSELayout.prototype.layout = function () {\n        var createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n\n        if (createBendsAsNeeded) {\n          this.createBendpoints();\n          this.graphManager.resetAllEdges();\n        }\n\n        this.level = 0;\n        return this.classicLayout();\n      };\n\n      CoSELayout.prototype.classicLayout = function () {\n        this.nodesWithGravity = this.calculateNodesToApplyGravitationTo();\n        this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity);\n        this.calcNoOfChildrenForAllNodes();\n        this.graphManager.calcLowestCommonAncestors();\n        this.graphManager.calcInclusionTreeDepths();\n        this.graphManager.getRoot().calcEstimatedSize();\n        this.calcIdealEdgeLengths();\n\n        if (!this.incremental) {\n          var forest = this.getFlatForest(); // The graph associated with this layout is flat and a forest\n\n          if (forest.length > 0) {\n            this.positionNodesRadially(forest);\n          } // The graph associated with this layout is not flat or a forest\n          else {\n            // Reduce the trees when incremental mode is not enabled and graph is not a forest \n            this.reduceTrees(); // Update nodes that gravity will be applied\n\n            this.graphManager.resetAllNodesToApplyGravitation();\n            var allNodes = new Set(this.getAllNodes());\n            var intersection = this.nodesWithGravity.filter(function (x) {\n              return allNodes.has(x);\n            });\n            this.graphManager.setAllNodesToApplyGravitation(intersection);\n            this.positionNodesRandomly();\n          }\n        } else {\n          if (CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL) {\n            // Reduce the trees in incremental mode if only this constant is set to true \n            this.reduceTrees(); // Update nodes that gravity will be applied\n\n            this.graphManager.resetAllNodesToApplyGravitation();\n            var allNodes = new Set(this.getAllNodes());\n            var intersection = this.nodesWithGravity.filter(function (x) {\n              return allNodes.has(x);\n            });\n            this.graphManager.setAllNodesToApplyGravitation(intersection);\n          }\n        }\n\n        this.initSpringEmbedder();\n        this.runSpringEmbedder();\n        return true;\n      };\n\n      CoSELayout.prototype.tick = function () {\n        this.totalIterations++;\n\n        if (this.totalIterations === this.maxIterations && !this.isTreeGrowing && !this.isGrowthFinished) {\n          if (this.prunedNodesAll.length > 0) {\n            this.isTreeGrowing = true;\n          } else {\n            return true;\n          }\n        }\n\n        if (this.totalIterations % FDLayoutConstants.CONVERGENCE_CHECK_PERIOD == 0 && !this.isTreeGrowing && !this.isGrowthFinished) {\n          if (this.isConverged()) {\n            if (this.prunedNodesAll.length > 0) {\n              this.isTreeGrowing = true;\n            } else {\n              return true;\n            }\n          }\n\n          this.coolingCycle++;\n\n          if (this.layoutQuality == 0) {\n            // quality - \"draft\"\n            this.coolingAdjuster = this.coolingCycle;\n          } else if (this.layoutQuality == 1) {\n            // quality - \"default\"\n            this.coolingAdjuster = this.coolingCycle / 3;\n          } // cooling schedule is based on http://www.btluke.com/simanf1.html -> cooling schedule 3\n\n\n          this.coolingFactor = Math.max(this.initialCoolingFactor - Math.pow(this.coolingCycle, Math.log(100 * (this.initialCoolingFactor - this.finalTemperature)) / Math.log(this.maxCoolingCycle)) / 100 * this.coolingAdjuster, this.finalTemperature);\n          this.animationPeriod = Math.ceil(this.initialAnimationPeriod * Math.sqrt(this.coolingFactor));\n        } // Operations while tree is growing again \n\n\n        if (this.isTreeGrowing) {\n          if (this.growTreeIterations % 10 == 0) {\n            if (this.prunedNodesAll.length > 0) {\n              this.graphManager.updateBounds();\n              this.updateGrid();\n              this.growTree(this.prunedNodesAll); // Update nodes that gravity will be applied\n\n              this.graphManager.resetAllNodesToApplyGravitation();\n              var allNodes = new Set(this.getAllNodes());\n              var intersection = this.nodesWithGravity.filter(function (x) {\n                return allNodes.has(x);\n              });\n              this.graphManager.setAllNodesToApplyGravitation(intersection);\n              this.graphManager.updateBounds();\n              this.updateGrid();\n              this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n            } else {\n              this.isTreeGrowing = false;\n              this.isGrowthFinished = true;\n            }\n          }\n\n          this.growTreeIterations++;\n        } // Operations after growth is finished\n\n\n        if (this.isGrowthFinished) {\n          if (this.isConverged()) {\n            return true;\n          }\n\n          if (this.afterGrowthIterations % 10 == 0) {\n            this.graphManager.updateBounds();\n            this.updateGrid();\n          }\n\n          this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL * ((100 - this.afterGrowthIterations) / 100);\n          this.afterGrowthIterations++;\n        }\n\n        var gridUpdateAllowed = !this.isTreeGrowing && !this.isGrowthFinished;\n        var forceToNodeSurroundingUpdate = this.growTreeIterations % 10 == 1 && this.isTreeGrowing || this.afterGrowthIterations % 10 == 1 && this.isGrowthFinished;\n        this.totalDisplacement = 0;\n        this.graphManager.updateBounds();\n        this.calcSpringForces();\n        this.calcRepulsionForces(gridUpdateAllowed, forceToNodeSurroundingUpdate);\n        this.calcGravitationalForces();\n        this.moveNodes();\n        this.animate();\n        return false; // Layout is not ended yet return false\n      };\n\n      CoSELayout.prototype.getPositionsData = function () {\n        var allNodes = this.graphManager.getAllNodes();\n        var pData = {};\n\n        for (var i = 0; i < allNodes.length; i++) {\n          var rect = allNodes[i].rect;\n          var id = allNodes[i].id;\n          pData[id] = {\n            id: id,\n            x: rect.getCenterX(),\n            y: rect.getCenterY(),\n            w: rect.width,\n            h: rect.height\n          };\n        }\n\n        return pData;\n      };\n\n      CoSELayout.prototype.runSpringEmbedder = function () {\n        this.initialAnimationPeriod = 25;\n        this.animationPeriod = this.initialAnimationPeriod;\n        var layoutEnded = false; // If aminate option is 'during' signal that layout is supposed to start iterating\n\n        if (FDLayoutConstants.ANIMATE === 'during') {\n          this.emit('layoutstarted');\n        } else {\n          // If aminate option is 'during' tick() function will be called on index.js\n          while (!layoutEnded) {\n            layoutEnded = this.tick();\n          }\n\n          this.graphManager.updateBounds();\n        }\n      };\n\n      CoSELayout.prototype.calculateNodesToApplyGravitationTo = function () {\n        var nodeList = [];\n        var graph;\n        var graphs = this.graphManager.getGraphs();\n        var size = graphs.length;\n        var i;\n\n        for (i = 0; i < size; i++) {\n          graph = graphs[i];\n          graph.updateConnected();\n\n          if (!graph.isConnected) {\n            nodeList = nodeList.concat(graph.getNodes());\n          }\n        }\n\n        return nodeList;\n      };\n\n      CoSELayout.prototype.createBendpoints = function () {\n        var edges = [];\n        edges = edges.concat(this.graphManager.getAllEdges());\n        var visited = new Set();\n        var i;\n\n        for (i = 0; i < edges.length; i++) {\n          var edge = edges[i];\n\n          if (!visited.has(edge)) {\n            var source = edge.getSource();\n            var target = edge.getTarget();\n\n            if (source == target) {\n              edge.getBendpoints().push(new PointD());\n              edge.getBendpoints().push(new PointD());\n              this.createDummyNodesForBendpoints(edge);\n              visited.add(edge);\n            } else {\n              var edgeList = [];\n              edgeList = edgeList.concat(source.getEdgeListToNode(target));\n              edgeList = edgeList.concat(target.getEdgeListToNode(source));\n\n              if (!visited.has(edgeList[0])) {\n                if (edgeList.length > 1) {\n                  var k;\n\n                  for (k = 0; k < edgeList.length; k++) {\n                    var multiEdge = edgeList[k];\n                    multiEdge.getBendpoints().push(new PointD());\n                    this.createDummyNodesForBendpoints(multiEdge);\n                  }\n                }\n\n                edgeList.forEach(function (edge) {\n                  visited.add(edge);\n                });\n              }\n            }\n          }\n\n          if (visited.size == edges.length) {\n            break;\n          }\n        }\n      };\n\n      CoSELayout.prototype.positionNodesRadially = function (forest) {\n        // We tile the trees to a grid row by row; first tree starts at (0,0)\n        var currentStartingPoint = new Point(0, 0);\n        var numberOfColumns = Math.ceil(Math.sqrt(forest.length));\n        var height = 0;\n        var currentY = 0;\n        var currentX = 0;\n        var point = new PointD(0, 0);\n\n        for (var i = 0; i < forest.length; i++) {\n          if (i % numberOfColumns == 0) {\n            // Start of a new row, make the x coordinate 0, increment the\n            // y coordinate with the max height of the previous row\n            currentX = 0;\n            currentY = height;\n\n            if (i != 0) {\n              currentY += CoSEConstants.DEFAULT_COMPONENT_SEPERATION;\n            }\n\n            height = 0;\n          }\n\n          var tree = forest[i]; // Find the center of the tree\n\n          var centerNode = Layout.findCenterOfTree(tree); // Set the staring point of the next tree\n\n          currentStartingPoint.x = currentX;\n          currentStartingPoint.y = currentY; // Do a radial layout starting with the center\n\n          point = CoSELayout.radialLayout(tree, centerNode, currentStartingPoint);\n\n          if (point.y > height) {\n            height = Math.floor(point.y);\n          }\n\n          currentX = Math.floor(point.x + CoSEConstants.DEFAULT_COMPONENT_SEPERATION);\n        }\n\n        this.transform(new PointD(LayoutConstants.WORLD_CENTER_X - point.x / 2, LayoutConstants.WORLD_CENTER_Y - point.y / 2));\n      };\n\n      CoSELayout.radialLayout = function (tree, centerNode, startingPoint) {\n        var radialSep = Math.max(this.maxDiagonalInTree(tree), CoSEConstants.DEFAULT_RADIAL_SEPARATION);\n        CoSELayout.branchRadialLayout(centerNode, null, 0, 359, 0, radialSep);\n        var bounds = LGraph.calculateBounds(tree);\n        var transform = new Transform();\n        transform.setDeviceOrgX(bounds.getMinX());\n        transform.setDeviceOrgY(bounds.getMinY());\n        transform.setWorldOrgX(startingPoint.x);\n        transform.setWorldOrgY(startingPoint.y);\n\n        for (var i = 0; i < tree.length; i++) {\n          var node = tree[i];\n          node.transform(transform);\n        }\n\n        var bottomRight = new PointD(bounds.getMaxX(), bounds.getMaxY());\n        return transform.inverseTransformPoint(bottomRight);\n      };\n\n      CoSELayout.branchRadialLayout = function (node, parentOfNode, startAngle, endAngle, distance, radialSeparation) {\n        // First, position this node by finding its angle.\n        var halfInterval = (endAngle - startAngle + 1) / 2;\n\n        if (halfInterval < 0) {\n          halfInterval += 180;\n        }\n\n        var nodeAngle = (halfInterval + startAngle) % 360;\n        var teta = nodeAngle * IGeometry.TWO_PI / 360; // Make polar to java cordinate conversion.\n\n        var cos_teta = Math.cos(teta);\n        var x_ = distance * Math.cos(teta);\n        var y_ = distance * Math.sin(teta);\n        node.setCenter(x_, y_); // Traverse all neighbors of this node and recursively call this\n        // function.\n\n        var neighborEdges = [];\n        neighborEdges = neighborEdges.concat(node.getEdges());\n        var childCount = neighborEdges.length;\n\n        if (parentOfNode != null) {\n          childCount--;\n        }\n\n        var branchCount = 0;\n        var incEdgesCount = neighborEdges.length;\n        var startIndex;\n        var edges = node.getEdgesBetween(parentOfNode); // If there are multiple edges, prune them until there remains only one\n        // edge.\n\n        while (edges.length > 1) {\n          //neighborEdges.remove(edges.remove(0));\n          var temp = edges[0];\n          edges.splice(0, 1);\n          var index = neighborEdges.indexOf(temp);\n\n          if (index >= 0) {\n            neighborEdges.splice(index, 1);\n          }\n\n          incEdgesCount--;\n          childCount--;\n        }\n\n        if (parentOfNode != null) {\n          //assert edges.length == 1;\n          startIndex = (neighborEdges.indexOf(edges[0]) + 1) % incEdgesCount;\n        } else {\n          startIndex = 0;\n        }\n\n        var stepAngle = Math.abs(endAngle - startAngle) / childCount;\n\n        for (var i = startIndex; branchCount != childCount; i = ++i % incEdgesCount) {\n          var currentNeighbor = neighborEdges[i].getOtherEnd(node); // Don't back traverse to root node in current tree.\n\n          if (currentNeighbor == parentOfNode) {\n            continue;\n          }\n\n          var childStartAngle = (startAngle + branchCount * stepAngle) % 360;\n          var childEndAngle = (childStartAngle + stepAngle) % 360;\n          CoSELayout.branchRadialLayout(currentNeighbor, node, childStartAngle, childEndAngle, distance + radialSeparation, radialSeparation);\n          branchCount++;\n        }\n      };\n\n      CoSELayout.maxDiagonalInTree = function (tree) {\n        var maxDiagonal = Integer.MIN_VALUE;\n\n        for (var i = 0; i < tree.length; i++) {\n          var node = tree[i];\n          var diagonal = node.getDiagonal();\n\n          if (diagonal > maxDiagonal) {\n            maxDiagonal = diagonal;\n          }\n        }\n\n        return maxDiagonal;\n      };\n\n      CoSELayout.prototype.calcRepulsionRange = function () {\n        // formula is 2 x (level + 1) x idealEdgeLength\n        return 2 * (this.level + 1) * this.idealEdgeLength;\n      }; // Tiling methods\n      // Group zero degree members whose parents are not to be tiled, create dummy parents where needed and fill memberGroups by their dummp parent id's\n\n\n      CoSELayout.prototype.groupZeroDegreeMembers = function () {\n        var self = this; // array of [parent_id x oneDegreeNode_id]\n\n        var tempMemberGroups = {}; // A temporary map of parent node and its zero degree members\n\n        this.memberGroups = {}; // A map of dummy parent node and its zero degree members whose parents are not to be tiled\n\n        this.idToDummyNode = {}; // A map of id to dummy node \n\n        var zeroDegree = []; // List of zero degree nodes whose parents are not to be tiled\n\n        var allNodes = this.graphManager.getAllNodes(); // Fill zero degree list\n\n        for (var i = 0; i < allNodes.length; i++) {\n          var node = allNodes[i];\n          var parent = node.getParent(); // If a node has zero degree and its parent is not to be tiled if exists add that node to zeroDegres list\n\n          if (this.getNodeDegreeWithChildren(node) === 0 && (parent.id == undefined || !this.getToBeTiled(parent))) {\n            zeroDegree.push(node);\n          }\n        } // Create a map of parent node and its zero degree members\n\n\n        for (var i = 0; i < zeroDegree.length; i++) {\n          var node = zeroDegree[i]; // Zero degree node itself\n\n          var p_id = node.getParent().id; // Parent id\n\n          if (typeof tempMemberGroups[p_id] === \"undefined\") tempMemberGroups[p_id] = [];\n          tempMemberGroups[p_id] = tempMemberGroups[p_id].concat(node); // Push node to the list belongs to its parent in tempMemberGroups\n        } // If there are at least two nodes at a level, create a dummy compound for them\n\n\n        Object.keys(tempMemberGroups).forEach(function (p_id) {\n          if (tempMemberGroups[p_id].length > 1) {\n            var dummyCompoundId = \"DummyCompound_\" + p_id; // The id of dummy compound which will be created soon\n\n            self.memberGroups[dummyCompoundId] = tempMemberGroups[p_id]; // Add dummy compound to memberGroups\n\n            var parent = tempMemberGroups[p_id][0].getParent(); // The parent of zero degree nodes will be the parent of new dummy compound\n            // Create a dummy compound with calculated id\n\n            var dummyCompound = new CoSENode(self.graphManager);\n            dummyCompound.id = dummyCompoundId;\n            dummyCompound.paddingLeft = parent.paddingLeft || 0;\n            dummyCompound.paddingRight = parent.paddingRight || 0;\n            dummyCompound.paddingBottom = parent.paddingBottom || 0;\n            dummyCompound.paddingTop = parent.paddingTop || 0;\n            self.idToDummyNode[dummyCompoundId] = dummyCompound;\n            var dummyParentGraph = self.getGraphManager().add(self.newGraph(), dummyCompound);\n            var parentGraph = parent.getChild(); // Add dummy compound to parent the graph\n\n            parentGraph.add(dummyCompound); // For each zero degree node in this level remove it from its parent graph and add it to the graph of dummy parent\n\n            for (var i = 0; i < tempMemberGroups[p_id].length; i++) {\n              var node = tempMemberGroups[p_id][i];\n              parentGraph.remove(node);\n              dummyParentGraph.add(node);\n            }\n          }\n        });\n      };\n\n      CoSELayout.prototype.clearCompounds = function () {\n        var childGraphMap = {};\n        var idToNode = {}; // Get compound ordering by finding the inner one first\n\n        this.performDFSOnCompounds();\n\n        for (var i = 0; i < this.compoundOrder.length; i++) {\n          idToNode[this.compoundOrder[i].id] = this.compoundOrder[i];\n          childGraphMap[this.compoundOrder[i].id] = [].concat(this.compoundOrder[i].getChild().getNodes()); // Remove children of compounds\n\n          this.graphManager.remove(this.compoundOrder[i].getChild());\n          this.compoundOrder[i].child = null;\n        }\n\n        this.graphManager.resetAllNodes(); // Tile the removed children\n\n        this.tileCompoundMembers(childGraphMap, idToNode);\n      };\n\n      CoSELayout.prototype.clearZeroDegreeMembers = function () {\n        var self = this;\n        var tiledZeroDegreePack = this.tiledZeroDegreePack = [];\n        Object.keys(this.memberGroups).forEach(function (id) {\n          var compoundNode = self.idToDummyNode[id]; // Get the dummy compound\n\n          tiledZeroDegreePack[id] = self.tileNodes(self.memberGroups[id], compoundNode.paddingLeft + compoundNode.paddingRight); // Set the width and height of the dummy compound as calculated\n\n          compoundNode.rect.width = tiledZeroDegreePack[id].width;\n          compoundNode.rect.height = tiledZeroDegreePack[id].height;\n        });\n      };\n\n      CoSELayout.prototype.repopulateCompounds = function () {\n        for (var i = this.compoundOrder.length - 1; i >= 0; i--) {\n          var lCompoundNode = this.compoundOrder[i];\n          var id = lCompoundNode.id;\n          var horizontalMargin = lCompoundNode.paddingLeft;\n          var verticalMargin = lCompoundNode.paddingTop;\n          this.adjustLocations(this.tiledMemberPack[id], lCompoundNode.rect.x, lCompoundNode.rect.y, horizontalMargin, verticalMargin);\n        }\n      };\n\n      CoSELayout.prototype.repopulateZeroDegreeMembers = function () {\n        var self = this;\n        var tiledPack = this.tiledZeroDegreePack;\n        Object.keys(tiledPack).forEach(function (id) {\n          var compoundNode = self.idToDummyNode[id]; // Get the dummy compound by its id\n\n          var horizontalMargin = compoundNode.paddingLeft;\n          var verticalMargin = compoundNode.paddingTop; // Adjust the positions of nodes wrt its compound\n\n          self.adjustLocations(tiledPack[id], compoundNode.rect.x, compoundNode.rect.y, horizontalMargin, verticalMargin);\n        });\n      };\n\n      CoSELayout.prototype.getToBeTiled = function (node) {\n        var id = node.id; //firstly check the previous results\n\n        if (this.toBeTiled[id] != null) {\n          return this.toBeTiled[id];\n        } //only compound nodes are to be tiled\n\n\n        var childGraph = node.getChild();\n\n        if (childGraph == null) {\n          this.toBeTiled[id] = false;\n          return false;\n        }\n\n        var children = childGraph.getNodes(); // Get the children nodes\n        //a compound node is not to be tiled if all of its compound children are not to be tiled\n\n        for (var i = 0; i < children.length; i++) {\n          var theChild = children[i];\n\n          if (this.getNodeDegree(theChild) > 0) {\n            this.toBeTiled[id] = false;\n            return false;\n          } //pass the children not having the compound structure\n\n\n          if (theChild.getChild() == null) {\n            this.toBeTiled[theChild.id] = false;\n            continue;\n          }\n\n          if (!this.getToBeTiled(theChild)) {\n            this.toBeTiled[id] = false;\n            return false;\n          }\n        }\n\n        this.toBeTiled[id] = true;\n        return true;\n      }; // Get degree of a node depending of its edges and independent of its children\n\n\n      CoSELayout.prototype.getNodeDegree = function (node) {\n        var id = node.id;\n        var edges = node.getEdges();\n        var degree = 0; // For the edges connected\n\n        for (var i = 0; i < edges.length; i++) {\n          var edge = edges[i];\n\n          if (edge.getSource().id !== edge.getTarget().id) {\n            degree = degree + 1;\n          }\n        }\n\n        return degree;\n      }; // Get degree of a node with its children\n\n\n      CoSELayout.prototype.getNodeDegreeWithChildren = function (node) {\n        var degree = this.getNodeDegree(node);\n\n        if (node.getChild() == null) {\n          return degree;\n        }\n\n        var children = node.getChild().getNodes();\n\n        for (var i = 0; i < children.length; i++) {\n          var child = children[i];\n          degree += this.getNodeDegreeWithChildren(child);\n        }\n\n        return degree;\n      };\n\n      CoSELayout.prototype.performDFSOnCompounds = function () {\n        this.compoundOrder = [];\n        this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes());\n      };\n\n      CoSELayout.prototype.fillCompexOrderByDFS = function (children) {\n        for (var i = 0; i < children.length; i++) {\n          var child = children[i];\n\n          if (child.getChild() != null) {\n            this.fillCompexOrderByDFS(child.getChild().getNodes());\n          }\n\n          if (this.getToBeTiled(child)) {\n            this.compoundOrder.push(child);\n          }\n        }\n      };\n      /**\n      * This method places each zero degree member wrt given (x,y) coordinates (top left).\n      */\n\n\n      CoSELayout.prototype.adjustLocations = function (organization, x, y, compoundHorizontalMargin, compoundVerticalMargin) {\n        x += compoundHorizontalMargin;\n        y += compoundVerticalMargin;\n        var left = x;\n\n        for (var i = 0; i < organization.rows.length; i++) {\n          var row = organization.rows[i];\n          x = left;\n          var maxHeight = 0;\n\n          for (var j = 0; j < row.length; j++) {\n            var lnode = row[j];\n            lnode.rect.x = x; // + lnode.rect.width / 2;\n\n            lnode.rect.y = y; // + lnode.rect.height / 2;\n\n            x += lnode.rect.width + organization.horizontalPadding;\n            if (lnode.rect.height > maxHeight) maxHeight = lnode.rect.height;\n          }\n\n          y += maxHeight + organization.verticalPadding;\n        }\n      };\n\n      CoSELayout.prototype.tileCompoundMembers = function (childGraphMap, idToNode) {\n        var self = this;\n        this.tiledMemberPack = [];\n        Object.keys(childGraphMap).forEach(function (id) {\n          // Get the compound node\n          var compoundNode = idToNode[id];\n          self.tiledMemberPack[id] = self.tileNodes(childGraphMap[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n          compoundNode.rect.width = self.tiledMemberPack[id].width;\n          compoundNode.rect.height = self.tiledMemberPack[id].height;\n        });\n      };\n\n      CoSELayout.prototype.tileNodes = function (nodes, minWidth) {\n        var verticalPadding = CoSEConstants.TILING_PADDING_VERTICAL;\n        var horizontalPadding = CoSEConstants.TILING_PADDING_HORIZONTAL;\n        var organization = {\n          rows: [],\n          rowWidth: [],\n          rowHeight: [],\n          width: 0,\n          height: minWidth,\n          // assume minHeight equals to minWidth\n          verticalPadding: verticalPadding,\n          horizontalPadding: horizontalPadding\n        }; // Sort the nodes in ascending order of their areas\n\n        nodes.sort(function (n1, n2) {\n          if (n1.rect.width * n1.rect.height > n2.rect.width * n2.rect.height) return -1;\n          if (n1.rect.width * n1.rect.height < n2.rect.width * n2.rect.height) return 1;\n          return 0;\n        }); // Create the organization -> tile members\n\n        for (var i = 0; i < nodes.length; i++) {\n          var lNode = nodes[i];\n\n          if (organization.rows.length == 0) {\n            this.insertNodeToRow(organization, lNode, 0, minWidth);\n          } else if (this.canAddHorizontal(organization, lNode.rect.width, lNode.rect.height)) {\n            this.insertNodeToRow(organization, lNode, this.getShortestRowIndex(organization), minWidth);\n          } else {\n            this.insertNodeToRow(organization, lNode, organization.rows.length, minWidth);\n          }\n\n          this.shiftToLastRow(organization);\n        }\n\n        return organization;\n      };\n\n      CoSELayout.prototype.insertNodeToRow = function (organization, node, rowIndex, minWidth) {\n        var minCompoundSize = minWidth; // Add new row if needed\n\n        if (rowIndex == organization.rows.length) {\n          var secondDimension = [];\n          organization.rows.push(secondDimension);\n          organization.rowWidth.push(minCompoundSize);\n          organization.rowHeight.push(0);\n        } // Update row width\n\n\n        var w = organization.rowWidth[rowIndex] + node.rect.width;\n\n        if (organization.rows[rowIndex].length > 0) {\n          w += organization.horizontalPadding;\n        }\n\n        organization.rowWidth[rowIndex] = w; // Update compound width\n\n        if (organization.width < w) {\n          organization.width = w;\n        } // Update height\n\n\n        var h = node.rect.height;\n        if (rowIndex > 0) h += organization.verticalPadding;\n        var extraHeight = 0;\n\n        if (h > organization.rowHeight[rowIndex]) {\n          extraHeight = organization.rowHeight[rowIndex];\n          organization.rowHeight[rowIndex] = h;\n          extraHeight = organization.rowHeight[rowIndex] - extraHeight;\n        }\n\n        organization.height += extraHeight; // Insert node\n\n        organization.rows[rowIndex].push(node);\n      }; //Scans the rows of an organization and returns the one with the min width\n\n\n      CoSELayout.prototype.getShortestRowIndex = function (organization) {\n        var r = -1;\n        var min = Number.MAX_VALUE;\n\n        for (var i = 0; i < organization.rows.length; i++) {\n          if (organization.rowWidth[i] < min) {\n            r = i;\n            min = organization.rowWidth[i];\n          }\n        }\n\n        return r;\n      }; //Scans the rows of an organization and returns the one with the max width\n\n\n      CoSELayout.prototype.getLongestRowIndex = function (organization) {\n        var r = -1;\n        var max = Number.MIN_VALUE;\n\n        for (var i = 0; i < organization.rows.length; i++) {\n          if (organization.rowWidth[i] > max) {\n            r = i;\n            max = organization.rowWidth[i];\n          }\n        }\n\n        return r;\n      };\n      /**\n      * This method checks whether adding extra width to the organization violates\n      * the aspect ratio(1) or not.\n      */\n\n\n      CoSELayout.prototype.canAddHorizontal = function (organization, extraWidth, extraHeight) {\n        var sri = this.getShortestRowIndex(organization);\n\n        if (sri < 0) {\n          return true;\n        }\n\n        var min = organization.rowWidth[sri];\n        if (min + organization.horizontalPadding + extraWidth <= organization.width) return true;\n        var hDiff = 0; // Adding to an existing row\n\n        if (organization.rowHeight[sri] < extraHeight) {\n          if (sri > 0) hDiff = extraHeight + organization.verticalPadding - organization.rowHeight[sri];\n        }\n\n        var add_to_row_ratio;\n\n        if (organization.width - min >= extraWidth + organization.horizontalPadding) {\n          add_to_row_ratio = (organization.height + hDiff) / (min + extraWidth + organization.horizontalPadding);\n        } else {\n          add_to_row_ratio = (organization.height + hDiff) / organization.width;\n        } // Adding a new row for this node\n\n\n        hDiff = extraHeight + organization.verticalPadding;\n        var add_new_row_ratio;\n\n        if (organization.width < extraWidth) {\n          add_new_row_ratio = (organization.height + hDiff) / extraWidth;\n        } else {\n          add_new_row_ratio = (organization.height + hDiff) / organization.width;\n        }\n\n        if (add_new_row_ratio < 1) add_new_row_ratio = 1 / add_new_row_ratio;\n        if (add_to_row_ratio < 1) add_to_row_ratio = 1 / add_to_row_ratio;\n        return add_to_row_ratio < add_new_row_ratio;\n      }; //If moving the last node from the longest row and adding it to the last\n      //row makes the bounding box smaller, do it.\n\n\n      CoSELayout.prototype.shiftToLastRow = function (organization) {\n        var longest = this.getLongestRowIndex(organization);\n        var last = organization.rowWidth.length - 1;\n        var row = organization.rows[longest];\n        var node = row[row.length - 1];\n        var diff = node.width + organization.horizontalPadding; // Check if there is enough space on the last row\n\n        if (organization.width - organization.rowWidth[last] > diff && longest != last) {\n          // Remove the last element of the longest row\n          row.splice(-1, 1); // Push it to the last row\n\n          organization.rows[last].push(node);\n          organization.rowWidth[longest] = organization.rowWidth[longest] - diff;\n          organization.rowWidth[last] = organization.rowWidth[last] + diff;\n          organization.width = organization.rowWidth[instance.getLongestRowIndex(organization)]; // Update heights of the organization\n\n          var maxHeight = Number.MIN_VALUE;\n\n          for (var i = 0; i < row.length; i++) {\n            if (row[i].height > maxHeight) maxHeight = row[i].height;\n          }\n\n          if (longest > 0) maxHeight += organization.verticalPadding;\n          var prevTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n          organization.rowHeight[longest] = maxHeight;\n          if (organization.rowHeight[last] < node.height + organization.verticalPadding) organization.rowHeight[last] = node.height + organization.verticalPadding;\n          var finalTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n          organization.height += finalTotal - prevTotal;\n          this.shiftToLastRow(organization);\n        }\n      };\n\n      CoSELayout.prototype.tilingPreLayout = function () {\n        if (CoSEConstants.TILE) {\n          // Find zero degree nodes and create a compound for each level\n          this.groupZeroDegreeMembers(); // Tile and clear children of each compound\n\n          this.clearCompounds(); // Separately tile and clear zero degree nodes for each level\n\n          this.clearZeroDegreeMembers();\n        }\n      };\n\n      CoSELayout.prototype.tilingPostLayout = function () {\n        if (CoSEConstants.TILE) {\n          this.repopulateZeroDegreeMembers();\n          this.repopulateCompounds();\n        }\n      }; // -----------------------------------------------------------------------------\n      // Section: Tree Reduction methods\n      // -----------------------------------------------------------------------------\n      // Reduce trees \n\n\n      CoSELayout.prototype.reduceTrees = function () {\n        var prunedNodesAll = [];\n        var containsLeaf = true;\n        var node;\n\n        while (containsLeaf) {\n          var allNodes = this.graphManager.getAllNodes();\n          var prunedNodesInStepTemp = [];\n          containsLeaf = false;\n\n          for (var i = 0; i < allNodes.length; i++) {\n            node = allNodes[i];\n\n            if (node.getEdges().length == 1 && !node.getEdges()[0].isInterGraph && node.getChild() == null) {\n              prunedNodesInStepTemp.push([node, node.getEdges()[0], node.getOwner()]);\n              containsLeaf = true;\n            }\n          }\n\n          if (containsLeaf == true) {\n            var prunedNodesInStep = [];\n\n            for (var j = 0; j < prunedNodesInStepTemp.length; j++) {\n              if (prunedNodesInStepTemp[j][0].getEdges().length == 1) {\n                prunedNodesInStep.push(prunedNodesInStepTemp[j]);\n                prunedNodesInStepTemp[j][0].getOwner().remove(prunedNodesInStepTemp[j][0]);\n              }\n            }\n\n            prunedNodesAll.push(prunedNodesInStep);\n            this.graphManager.resetAllNodes();\n            this.graphManager.resetAllEdges();\n          }\n        }\n\n        this.prunedNodesAll = prunedNodesAll;\n      }; // Grow tree one step \n\n\n      CoSELayout.prototype.growTree = function (prunedNodesAll) {\n        var lengthOfPrunedNodesInStep = prunedNodesAll.length;\n        var prunedNodesInStep = prunedNodesAll[lengthOfPrunedNodesInStep - 1];\n        var nodeData;\n\n        for (var i = 0; i < prunedNodesInStep.length; i++) {\n          nodeData = prunedNodesInStep[i];\n          this.findPlaceforPrunedNode(nodeData);\n          nodeData[2].add(nodeData[0]);\n          nodeData[2].add(nodeData[1], nodeData[1].source, nodeData[1].target);\n        }\n\n        prunedNodesAll.splice(prunedNodesAll.length - 1, 1);\n        this.graphManager.resetAllNodes();\n        this.graphManager.resetAllEdges();\n      }; // Find an appropriate position to replace pruned node, this method can be improved\n\n\n      CoSELayout.prototype.findPlaceforPrunedNode = function (nodeData) {\n        var gridForPrunedNode;\n        var nodeToConnect;\n        var prunedNode = nodeData[0];\n\n        if (prunedNode == nodeData[1].source) {\n          nodeToConnect = nodeData[1].target;\n        } else {\n          nodeToConnect = nodeData[1].source;\n        }\n\n        var startGridX = nodeToConnect.startX;\n        var finishGridX = nodeToConnect.finishX;\n        var startGridY = nodeToConnect.startY;\n        var finishGridY = nodeToConnect.finishY;\n        var upNodeCount = 0;\n        var downNodeCount = 0;\n        var rightNodeCount = 0;\n        var leftNodeCount = 0;\n        var controlRegions = [upNodeCount, rightNodeCount, downNodeCount, leftNodeCount];\n\n        if (startGridY > 0) {\n          for (var i = startGridX; i <= finishGridX; i++) {\n            controlRegions[0] += this.grid[i][startGridY - 1].length + this.grid[i][startGridY].length - 1;\n          }\n        }\n\n        if (finishGridX < this.grid.length - 1) {\n          for (var i = startGridY; i <= finishGridY; i++) {\n            controlRegions[1] += this.grid[finishGridX + 1][i].length + this.grid[finishGridX][i].length - 1;\n          }\n        }\n\n        if (finishGridY < this.grid[0].length - 1) {\n          for (var i = startGridX; i <= finishGridX; i++) {\n            controlRegions[2] += this.grid[i][finishGridY + 1].length + this.grid[i][finishGridY].length - 1;\n          }\n        }\n\n        if (startGridX > 0) {\n          for (var i = startGridY; i <= finishGridY; i++) {\n            controlRegions[3] += this.grid[startGridX - 1][i].length + this.grid[startGridX][i].length - 1;\n          }\n        }\n\n        var min = Integer.MAX_VALUE;\n        var minCount;\n        var minIndex;\n\n        for (var j = 0; j < controlRegions.length; j++) {\n          if (controlRegions[j] < min) {\n            min = controlRegions[j];\n            minCount = 1;\n            minIndex = j;\n          } else if (controlRegions[j] == min) {\n            minCount++;\n          }\n        }\n\n        if (minCount == 3 && min == 0) {\n          if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[2] == 0) {\n            gridForPrunedNode = 1;\n          } else if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[3] == 0) {\n            gridForPrunedNode = 0;\n          } else if (controlRegions[0] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n            gridForPrunedNode = 3;\n          } else if (controlRegions[1] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n            gridForPrunedNode = 2;\n          }\n        } else if (minCount == 2 && min == 0) {\n          var random = Math.floor(Math.random() * 2);\n\n          if (controlRegions[0] == 0 && controlRegions[1] == 0) {\n            ;\n\n            if (random == 0) {\n              gridForPrunedNode = 0;\n            } else {\n              gridForPrunedNode = 1;\n            }\n          } else if (controlRegions[0] == 0 && controlRegions[2] == 0) {\n            if (random == 0) {\n              gridForPrunedNode = 0;\n            } else {\n              gridForPrunedNode = 2;\n            }\n          } else if (controlRegions[0] == 0 && controlRegions[3] == 0) {\n            if (random == 0) {\n              gridForPrunedNode = 0;\n            } else {\n              gridForPrunedNode = 3;\n            }\n          } else if (controlRegions[1] == 0 && controlRegions[2] == 0) {\n            if (random == 0) {\n              gridForPrunedNode = 1;\n            } else {\n              gridForPrunedNode = 2;\n            }\n          } else if (controlRegions[1] == 0 && controlRegions[3] == 0) {\n            if (random == 0) {\n              gridForPrunedNode = 1;\n            } else {\n              gridForPrunedNode = 3;\n            }\n          } else {\n            if (random == 0) {\n              gridForPrunedNode = 2;\n            } else {\n              gridForPrunedNode = 3;\n            }\n          }\n        } else if (minCount == 4 && min == 0) {\n          var random = Math.floor(Math.random() * 4);\n          gridForPrunedNode = random;\n        } else {\n          gridForPrunedNode = minIndex;\n        }\n\n        if (gridForPrunedNode == 0) {\n          prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() - nodeToConnect.getHeight() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getHeight() / 2);\n        } else if (gridForPrunedNode == 1) {\n          prunedNode.setCenter(nodeToConnect.getCenterX() + nodeToConnect.getWidth() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n        } else if (gridForPrunedNode == 2) {\n          prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() + nodeToConnect.getHeight() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getHeight() / 2);\n        } else {\n          prunedNode.setCenter(nodeToConnect.getCenterX() - nodeToConnect.getWidth() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n        }\n      };\n\n      module.exports = CoSELayout;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var coseBase = {};\n      coseBase.layoutBase = __webpack_require__(0);\n      coseBase.CoSEConstants = __webpack_require__(1);\n      coseBase.CoSEEdge = __webpack_require__(2);\n      coseBase.CoSEGraph = __webpack_require__(3);\n      coseBase.CoSEGraphManager = __webpack_require__(4);\n      coseBase.CoSELayout = __webpack_require__(6);\n      coseBase.CoSENode = __webpack_require__(5);\n      module.exports = coseBase;\n      /***/\n    }\n    /******/\n    ])\n  );\n});","(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"cose-base\"));else if (typeof define === 'function' && define.amd) define([\"cose-base\"], factory);else if (typeof exports === 'object') exports[\"cytoscapeCoseBilkent\"] = factory(require(\"cose-base\"));else root[\"cytoscapeCoseBilkent\"] = factory(root[\"coseBase\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_0__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // identity function for calling harmony imports with the correct context\n\n      /******/\n\n      __webpack_require__.i = function (value) {\n        return value;\n      };\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 1);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LayoutConstants = __webpack_require__(0).layoutBase.LayoutConstants;\n\n      var FDLayoutConstants = __webpack_require__(0).layoutBase.FDLayoutConstants;\n\n      var CoSEConstants = __webpack_require__(0).CoSEConstants;\n\n      var CoSELayout = __webpack_require__(0).CoSELayout;\n\n      var CoSENode = __webpack_require__(0).CoSENode;\n\n      var PointD = __webpack_require__(0).layoutBase.PointD;\n\n      var DimensionD = __webpack_require__(0).layoutBase.DimensionD;\n\n      var defaults = {\n        // Called on `layoutready`\n        ready: function ready() {},\n        // Called on `layoutstop`\n        stop: function stop() {},\n        // 'draft', 'default' or 'proof\" \n        // - 'draft' fast cooling rate \n        // - 'default' moderate cooling rate \n        // - \"proof\" slow cooling rate\n        quality: 'default',\n        // include labels in node dimensions\n        nodeDimensionsIncludeLabels: false,\n        // number of ticks per frame; higher is faster but more jerky\n        refresh: 30,\n        // Whether to fit the network view after when done\n        fit: true,\n        // Padding on fit\n        padding: 10,\n        // Whether to enable incremental mode\n        randomize: true,\n        // Node repulsion (non overlapping) multiplier\n        nodeRepulsion: 4500,\n        // Ideal edge (non nested) length\n        idealEdgeLength: 50,\n        // Divisor to compute edge forces\n        edgeElasticity: 0.45,\n        // Nesting factor (multiplier) to compute ideal edge length for nested edges\n        nestingFactor: 0.1,\n        // Gravity force (constant)\n        gravity: 0.25,\n        // Maximum number of iterations to perform\n        numIter: 2500,\n        // For enabling tiling\n        tile: true,\n        // Type of layout animation. The option set is {'during', 'end', false}\n        animate: 'end',\n        // Duration for animate:end\n        animationDuration: 500,\n        // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\n        tilingPaddingVertical: 10,\n        // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\n        tilingPaddingHorizontal: 10,\n        // Gravity range (constant) for compounds\n        gravityRangeCompound: 1.5,\n        // Gravity force (constant) for compounds\n        gravityCompound: 1.0,\n        // Gravity range (constant)\n        gravityRange: 3.8,\n        // Initial cooling factor for incremental layout\n        initialEnergyOnIncremental: 0.5\n      };\n\n      function extend(defaults, options) {\n        var obj = {};\n\n        for (var i in defaults) {\n          obj[i] = defaults[i];\n        }\n\n        for (var i in options) {\n          obj[i] = options[i];\n        }\n\n        return obj;\n      }\n\n      ;\n\n      function _CoSELayout(_options) {\n        this.options = extend(defaults, _options);\n        getUserOptions(this.options);\n      }\n\n      var getUserOptions = function getUserOptions(options) {\n        if (options.nodeRepulsion != null) CoSEConstants.DEFAULT_REPULSION_STRENGTH = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH = options.nodeRepulsion;\n        if (options.idealEdgeLength != null) CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = options.idealEdgeLength;\n        if (options.edgeElasticity != null) CoSEConstants.DEFAULT_SPRING_STRENGTH = FDLayoutConstants.DEFAULT_SPRING_STRENGTH = options.edgeElasticity;\n        if (options.nestingFactor != null) CoSEConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = options.nestingFactor;\n        if (options.gravity != null) CoSEConstants.DEFAULT_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = options.gravity;\n        if (options.numIter != null) CoSEConstants.MAX_ITERATIONS = FDLayoutConstants.MAX_ITERATIONS = options.numIter;\n        if (options.gravityRange != null) CoSEConstants.DEFAULT_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = options.gravityRange;\n        if (options.gravityCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = options.gravityCompound;\n        if (options.gravityRangeCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = options.gravityRangeCompound;\n        if (options.initialEnergyOnIncremental != null) CoSEConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = options.initialEnergyOnIncremental;\n        if (options.quality == 'draft') LayoutConstants.QUALITY = 0;else if (options.quality == 'proof') LayoutConstants.QUALITY = 2;else LayoutConstants.QUALITY = 1;\n        CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS = FDLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = options.nodeDimensionsIncludeLabels;\n        CoSEConstants.DEFAULT_INCREMENTAL = FDLayoutConstants.DEFAULT_INCREMENTAL = LayoutConstants.DEFAULT_INCREMENTAL = !options.randomize;\n        CoSEConstants.ANIMATE = FDLayoutConstants.ANIMATE = LayoutConstants.ANIMATE = options.animate;\n        CoSEConstants.TILE = options.tile;\n        CoSEConstants.TILING_PADDING_VERTICAL = typeof options.tilingPaddingVertical === 'function' ? options.tilingPaddingVertical.call() : options.tilingPaddingVertical;\n        CoSEConstants.TILING_PADDING_HORIZONTAL = typeof options.tilingPaddingHorizontal === 'function' ? options.tilingPaddingHorizontal.call() : options.tilingPaddingHorizontal;\n      };\n\n      _CoSELayout.prototype.run = function () {\n        var ready;\n        var frameId;\n        var options = this.options;\n        var idToLNode = this.idToLNode = {};\n        var layout = this.layout = new CoSELayout();\n        var self = this;\n        self.stopped = false;\n        this.cy = this.options.cy;\n        this.cy.trigger({\n          type: 'layoutstart',\n          layout: this\n        });\n        var gm = layout.newGraphManager();\n        this.gm = gm;\n        var nodes = this.options.eles.nodes();\n        var edges = this.options.eles.edges();\n        this.root = gm.addRoot();\n        this.processChildrenList(this.root, this.getTopMostNodes(nodes), layout);\n\n        for (var i = 0; i < edges.length; i++) {\n          var edge = edges[i];\n          var sourceNode = this.idToLNode[edge.data(\"source\")];\n          var targetNode = this.idToLNode[edge.data(\"target\")];\n\n          if (sourceNode !== targetNode && sourceNode.getEdgesBetween(targetNode).length == 0) {\n            var e1 = gm.add(layout.newEdge(), sourceNode, targetNode);\n            e1.id = edge.id();\n          }\n        }\n\n        var getPositions = function getPositions(ele, i) {\n          if (typeof ele === \"number\") {\n            ele = i;\n          }\n\n          var theId = ele.data('id');\n          var lNode = self.idToLNode[theId];\n          return {\n            x: lNode.getRect().getCenterX(),\n            y: lNode.getRect().getCenterY()\n          };\n        };\n        /*\n         * Reposition nodes in iterations animatedly\n         */\n\n\n        var iterateAnimated = function iterateAnimated() {\n          // Thigs to perform after nodes are repositioned on screen\n          var afterReposition = function afterReposition() {\n            if (options.fit) {\n              options.cy.fit(options.eles, options.padding);\n            }\n\n            if (!ready) {\n              ready = true;\n              self.cy.one('layoutready', options.ready);\n              self.cy.trigger({\n                type: 'layoutready',\n                layout: self\n              });\n            }\n          };\n\n          var ticksPerFrame = self.options.refresh;\n          var isDone;\n\n          for (var i = 0; i < ticksPerFrame && !isDone; i++) {\n            isDone = self.stopped || self.layout.tick();\n          } // If layout is done\n\n\n          if (isDone) {\n            // If the layout is not a sublayout and it is successful perform post layout.\n            if (layout.checkLayoutSuccess() && !layout.isSubLayout) {\n              layout.doPostLayout();\n            } // If layout has a tilingPostLayout function property call it.\n\n\n            if (layout.tilingPostLayout) {\n              layout.tilingPostLayout();\n            }\n\n            layout.isLayoutFinished = true;\n            self.options.eles.nodes().positions(getPositions);\n            afterReposition(); // trigger layoutstop when the layout stops (e.g. finishes)\n\n            self.cy.one('layoutstop', self.options.stop);\n            self.cy.trigger({\n              type: 'layoutstop',\n              layout: self\n            });\n\n            if (frameId) {\n              cancelAnimationFrame(frameId);\n            }\n\n            ready = false;\n            return;\n          }\n\n          var animationData = self.layout.getPositionsData(); // Get positions of layout nodes note that all nodes may not be layout nodes because of tiling\n          // Position nodes, for the nodes whose id does not included in data (because they are removed from their parents and included in dummy compounds)\n          // use position of their ancestors or dummy ancestors\n\n          options.eles.nodes().positions(function (ele, i) {\n            if (typeof ele === \"number\") {\n              ele = i;\n            } // If ele is a compound node, then its position will be defined by its children\n\n\n            if (!ele.isParent()) {\n              var theId = ele.id();\n              var pNode = animationData[theId];\n              var temp = ele; // If pNode is undefined search until finding position data of its first ancestor (It may be dummy as well)\n\n              while (pNode == null) {\n                pNode = animationData[temp.data('parent')] || animationData['DummyCompound_' + temp.data('parent')];\n                animationData[theId] = pNode;\n                temp = temp.parent()[0];\n\n                if (temp == undefined) {\n                  break;\n                }\n              }\n\n              if (pNode != null) {\n                return {\n                  x: pNode.x,\n                  y: pNode.y\n                };\n              } else {\n                return {\n                  x: ele.position('x'),\n                  y: ele.position('y')\n                };\n              }\n            }\n          });\n          afterReposition();\n          frameId = requestAnimationFrame(iterateAnimated);\n        };\n        /*\n        * Listen 'layoutstarted' event and start animated iteration if animate option is 'during'\n        */\n\n\n        layout.addListener('layoutstarted', function () {\n          if (self.options.animate === 'during') {\n            frameId = requestAnimationFrame(iterateAnimated);\n          }\n        });\n        layout.runLayout(); // Run cose layout\n\n        /*\n         * If animate option is not 'during' ('end' or false) perform these here (If it is 'during' similar things are already performed)\n         */\n\n        if (this.options.animate !== \"during\") {\n          self.options.eles.nodes().not(\":parent\").layoutPositions(self, self.options, getPositions); // Use layout positions to reposition the nodes it considers the options parameter\n\n          ready = false;\n        }\n\n        return this; // chaining\n      }; //Get the top most ones of a list of nodes\n\n\n      _CoSELayout.prototype.getTopMostNodes = function (nodes) {\n        var nodesMap = {};\n\n        for (var i = 0; i < nodes.length; i++) {\n          nodesMap[nodes[i].id()] = true;\n        }\n\n        var roots = nodes.filter(function (ele, i) {\n          if (typeof ele === \"number\") {\n            ele = i;\n          }\n\n          var parent = ele.parent()[0];\n\n          while (parent != null) {\n            if (nodesMap[parent.id()]) {\n              return false;\n            }\n\n            parent = parent.parent()[0];\n          }\n\n          return true;\n        });\n        return roots;\n      };\n\n      _CoSELayout.prototype.processChildrenList = function (parent, children, layout) {\n        var size = children.length;\n\n        for (var i = 0; i < size; i++) {\n          var theChild = children[i];\n          var children_of_children = theChild.children();\n          var theNode;\n          var dimensions = theChild.layoutDimensions({\n            nodeDimensionsIncludeLabels: this.options.nodeDimensionsIncludeLabels\n          });\n\n          if (theChild.outerWidth() != null && theChild.outerHeight() != null) {\n            theNode = parent.add(new CoSENode(layout.graphManager, new PointD(theChild.position('x') - dimensions.w / 2, theChild.position('y') - dimensions.h / 2), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n          } else {\n            theNode = parent.add(new CoSENode(this.graphManager));\n          } // Attach id to the layout node\n\n\n          theNode.id = theChild.data(\"id\"); // Attach the paddings of cy node to layout node\n\n          theNode.paddingLeft = parseInt(theChild.css('padding'));\n          theNode.paddingTop = parseInt(theChild.css('padding'));\n          theNode.paddingRight = parseInt(theChild.css('padding'));\n          theNode.paddingBottom = parseInt(theChild.css('padding')); //Attach the label properties to compound if labels will be included in node dimensions  \n\n          if (this.options.nodeDimensionsIncludeLabels) {\n            if (theChild.isParent()) {\n              var labelWidth = theChild.boundingBox({\n                includeLabels: true,\n                includeNodes: false\n              }).w;\n              var labelHeight = theChild.boundingBox({\n                includeLabels: true,\n                includeNodes: false\n              }).h;\n              var labelPos = theChild.css(\"text-halign\");\n              theNode.labelWidth = labelWidth;\n              theNode.labelHeight = labelHeight;\n              theNode.labelPos = labelPos;\n            }\n          } // Map the layout node\n\n\n          this.idToLNode[theChild.data(\"id\")] = theNode;\n\n          if (isNaN(theNode.rect.x)) {\n            theNode.rect.x = 0;\n          }\n\n          if (isNaN(theNode.rect.y)) {\n            theNode.rect.y = 0;\n          }\n\n          if (children_of_children != null && children_of_children.length > 0) {\n            var theNewGraph;\n            theNewGraph = layout.getGraphManager().add(layout.newGraph(), theNode);\n            this.processChildrenList(theNewGraph, children_of_children, layout);\n          }\n        }\n      };\n      /**\n       * @brief : called on continuous layouts to stop them before they finish\n       */\n\n\n      _CoSELayout.prototype.stop = function () {\n        this.stopped = true;\n        return this; // chaining\n      };\n\n      var register = function register(cytoscape) {\n        //  var Layout = getLayout( cytoscape );\n        cytoscape('layout', 'cose-bilkent', _CoSELayout);\n      }; // auto reg for globals\n\n\n      if (typeof cytoscape !== 'undefined') {\n        register(cytoscape);\n      }\n\n      module.exports = register;\n      /***/\n    }\n    /******/\n    ])\n  );\n});","(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"layoutBase\"] = factory();else root[\"layoutBase\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // identity function for calling harmony imports with the correct context\n\n      /******/\n\n      __webpack_require__.i = function (value) {\n        return value;\n      };\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 26);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function LayoutConstants() {}\n      /**\r\n       * Layout Quality: 0:draft, 1:default, 2:proof\r\n       */\n\n\n      LayoutConstants.QUALITY = 1;\n      /**\r\n       * Default parameters\r\n       */\n\n      LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED = false;\n      LayoutConstants.DEFAULT_INCREMENTAL = false;\n      LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT = true;\n      LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT = false;\n      LayoutConstants.DEFAULT_ANIMATION_PERIOD = 50;\n      LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES = false; // -----------------------------------------------------------------------------\n      // Section: General other constants\n      // -----------------------------------------------------------------------------\n\n      /*\r\n       * Margins of a graph to be applied on bouding rectangle of its contents. We\r\n       * assume margins on all four sides to be uniform.\r\n       */\n\n      LayoutConstants.DEFAULT_GRAPH_MARGIN = 15;\n      /*\r\n       * Whether to consider labels in node dimensions or not\r\n       */\n\n      LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = false;\n      /*\r\n       * Default dimension of a non-compound node.\r\n       */\n\n      LayoutConstants.SIMPLE_NODE_SIZE = 40;\n      /*\r\n       * Default dimension of a non-compound node.\r\n       */\n\n      LayoutConstants.SIMPLE_NODE_HALF_SIZE = LayoutConstants.SIMPLE_NODE_SIZE / 2;\n      /*\r\n       * Empty compound node size. When a compound node is empty, its both\r\n       * dimensions should be of this value.\r\n       */\n\n      LayoutConstants.EMPTY_COMPOUND_NODE_SIZE = 40;\n      /*\r\n       * Minimum length that an edge should take during layout\r\n       */\n\n      LayoutConstants.MIN_EDGE_LENGTH = 1;\n      /*\r\n       * World boundaries that layout operates on\r\n       */\n\n      LayoutConstants.WORLD_BOUNDARY = 1000000;\n      /*\r\n       * World boundaries that random positioning can be performed with\r\n       */\n\n      LayoutConstants.INITIAL_WORLD_BOUNDARY = LayoutConstants.WORLD_BOUNDARY / 1000;\n      /*\r\n       * Coordinates of the world center\r\n       */\n\n      LayoutConstants.WORLD_CENTER_X = 1200;\n      LayoutConstants.WORLD_CENTER_Y = 900;\n      module.exports = LayoutConstants;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LGraphObject = __webpack_require__(2);\n\n      var IGeometry = __webpack_require__(8);\n\n      var IMath = __webpack_require__(9);\n\n      function LEdge(source, target, vEdge) {\n        LGraphObject.call(this, vEdge);\n        this.isOverlapingSourceAndTarget = false;\n        this.vGraphObject = vEdge;\n        this.bendpoints = [];\n        this.source = source;\n        this.target = target;\n      }\n\n      LEdge.prototype = Object.create(LGraphObject.prototype);\n\n      for (var prop in LGraphObject) {\n        LEdge[prop] = LGraphObject[prop];\n      }\n\n      LEdge.prototype.getSource = function () {\n        return this.source;\n      };\n\n      LEdge.prototype.getTarget = function () {\n        return this.target;\n      };\n\n      LEdge.prototype.isInterGraph = function () {\n        return this.isInterGraph;\n      };\n\n      LEdge.prototype.getLength = function () {\n        return this.length;\n      };\n\n      LEdge.prototype.isOverlapingSourceAndTarget = function () {\n        return this.isOverlapingSourceAndTarget;\n      };\n\n      LEdge.prototype.getBendpoints = function () {\n        return this.bendpoints;\n      };\n\n      LEdge.prototype.getLca = function () {\n        return this.lca;\n      };\n\n      LEdge.prototype.getSourceInLca = function () {\n        return this.sourceInLca;\n      };\n\n      LEdge.prototype.getTargetInLca = function () {\n        return this.targetInLca;\n      };\n\n      LEdge.prototype.getOtherEnd = function (node) {\n        if (this.source === node) {\n          return this.target;\n        } else if (this.target === node) {\n          return this.source;\n        } else {\n          throw \"Node is not incident with this edge\";\n        }\n      };\n\n      LEdge.prototype.getOtherEndInGraph = function (node, graph) {\n        var otherEnd = this.getOtherEnd(node);\n        var root = graph.getGraphManager().getRoot();\n\n        while (true) {\n          if (otherEnd.getOwner() == graph) {\n            return otherEnd;\n          }\n\n          if (otherEnd.getOwner() == root) {\n            break;\n          }\n\n          otherEnd = otherEnd.getOwner().getParent();\n        }\n\n        return null;\n      };\n\n      LEdge.prototype.updateLength = function () {\n        var clipPointCoordinates = new Array(4);\n        this.isOverlapingSourceAndTarget = IGeometry.getIntersection(this.target.getRect(), this.source.getRect(), clipPointCoordinates);\n\n        if (!this.isOverlapingSourceAndTarget) {\n          this.lengthX = clipPointCoordinates[0] - clipPointCoordinates[2];\n          this.lengthY = clipPointCoordinates[1] - clipPointCoordinates[3];\n\n          if (Math.abs(this.lengthX) < 1.0) {\n            this.lengthX = IMath.sign(this.lengthX);\n          }\n\n          if (Math.abs(this.lengthY) < 1.0) {\n            this.lengthY = IMath.sign(this.lengthY);\n          }\n\n          this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n        }\n      };\n\n      LEdge.prototype.updateLengthSimple = function () {\n        this.lengthX = this.target.getCenterX() - this.source.getCenterX();\n        this.lengthY = this.target.getCenterY() - this.source.getCenterY();\n\n        if (Math.abs(this.lengthX) < 1.0) {\n          this.lengthX = IMath.sign(this.lengthX);\n        }\n\n        if (Math.abs(this.lengthY) < 1.0) {\n          this.lengthY = IMath.sign(this.lengthY);\n        }\n\n        this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n      };\n\n      module.exports = LEdge;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function LGraphObject(vGraphObject) {\n        this.vGraphObject = vGraphObject;\n      }\n\n      module.exports = LGraphObject;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LGraphObject = __webpack_require__(2);\n\n      var Integer = __webpack_require__(10);\n\n      var RectangleD = __webpack_require__(13);\n\n      var LayoutConstants = __webpack_require__(0);\n\n      var RandomSeed = __webpack_require__(16);\n\n      var PointD = __webpack_require__(4);\n\n      function LNode(gm, loc, size, vNode) {\n        //Alternative constructor 1 : LNode(LGraphManager gm, Point loc, Dimension size, Object vNode)\n        if (size == null && vNode == null) {\n          vNode = loc;\n        }\n\n        LGraphObject.call(this, vNode); //Alternative constructor 2 : LNode(Layout layout, Object vNode)\n\n        if (gm.graphManager != null) gm = gm.graphManager;\n        this.estimatedSize = Integer.MIN_VALUE;\n        this.inclusionTreeDepth = Integer.MAX_VALUE;\n        this.vGraphObject = vNode;\n        this.edges = [];\n        this.graphManager = gm;\n        if (size != null && loc != null) this.rect = new RectangleD(loc.x, loc.y, size.width, size.height);else this.rect = new RectangleD();\n      }\n\n      LNode.prototype = Object.create(LGraphObject.prototype);\n\n      for (var prop in LGraphObject) {\n        LNode[prop] = LGraphObject[prop];\n      }\n\n      LNode.prototype.getEdges = function () {\n        return this.edges;\n      };\n\n      LNode.prototype.getChild = function () {\n        return this.child;\n      };\n\n      LNode.prototype.getOwner = function () {\n        //  if (this.owner != null) {\n        //    if (!(this.owner == null || this.owner.getNodes().indexOf(this) > -1)) {\n        //      throw \"assert failed\";\n        //    }\n        //  }\n        return this.owner;\n      };\n\n      LNode.prototype.getWidth = function () {\n        return this.rect.width;\n      };\n\n      LNode.prototype.setWidth = function (width) {\n        this.rect.width = width;\n      };\n\n      LNode.prototype.getHeight = function () {\n        return this.rect.height;\n      };\n\n      LNode.prototype.setHeight = function (height) {\n        this.rect.height = height;\n      };\n\n      LNode.prototype.getCenterX = function () {\n        return this.rect.x + this.rect.width / 2;\n      };\n\n      LNode.prototype.getCenterY = function () {\n        return this.rect.y + this.rect.height / 2;\n      };\n\n      LNode.prototype.getCenter = function () {\n        return new PointD(this.rect.x + this.rect.width / 2, this.rect.y + this.rect.height / 2);\n      };\n\n      LNode.prototype.getLocation = function () {\n        return new PointD(this.rect.x, this.rect.y);\n      };\n\n      LNode.prototype.getRect = function () {\n        return this.rect;\n      };\n\n      LNode.prototype.getDiagonal = function () {\n        return Math.sqrt(this.rect.width * this.rect.width + this.rect.height * this.rect.height);\n      };\n      /**\n       * This method returns half the diagonal length of this node.\n       */\n\n\n      LNode.prototype.getHalfTheDiagonal = function () {\n        return Math.sqrt(this.rect.height * this.rect.height + this.rect.width * this.rect.width) / 2;\n      };\n\n      LNode.prototype.setRect = function (upperLeft, dimension) {\n        this.rect.x = upperLeft.x;\n        this.rect.y = upperLeft.y;\n        this.rect.width = dimension.width;\n        this.rect.height = dimension.height;\n      };\n\n      LNode.prototype.setCenter = function (cx, cy) {\n        this.rect.x = cx - this.rect.width / 2;\n        this.rect.y = cy - this.rect.height / 2;\n      };\n\n      LNode.prototype.setLocation = function (x, y) {\n        this.rect.x = x;\n        this.rect.y = y;\n      };\n\n      LNode.prototype.moveBy = function (dx, dy) {\n        this.rect.x += dx;\n        this.rect.y += dy;\n      };\n\n      LNode.prototype.getEdgeListToNode = function (to) {\n        var edgeList = [];\n        var edge;\n        var self = this;\n        self.edges.forEach(function (edge) {\n          if (edge.target == to) {\n            if (edge.source != self) throw \"Incorrect edge source!\";\n            edgeList.push(edge);\n          }\n        });\n        return edgeList;\n      };\n\n      LNode.prototype.getEdgesBetween = function (other) {\n        var edgeList = [];\n        var edge;\n        var self = this;\n        self.edges.forEach(function (edge) {\n          if (!(edge.source == self || edge.target == self)) throw \"Incorrect edge source and/or target\";\n\n          if (edge.target == other || edge.source == other) {\n            edgeList.push(edge);\n          }\n        });\n        return edgeList;\n      };\n\n      LNode.prototype.getNeighborsList = function () {\n        var neighbors = new Set();\n        var self = this;\n        self.edges.forEach(function (edge) {\n          if (edge.source == self) {\n            neighbors.add(edge.target);\n          } else {\n            if (edge.target != self) {\n              throw \"Incorrect incidency!\";\n            }\n\n            neighbors.add(edge.source);\n          }\n        });\n        return neighbors;\n      };\n\n      LNode.prototype.withChildren = function () {\n        var withNeighborsList = new Set();\n        var childNode;\n        var children;\n        withNeighborsList.add(this);\n\n        if (this.child != null) {\n          var nodes = this.child.getNodes();\n\n          for (var i = 0; i < nodes.length; i++) {\n            childNode = nodes[i];\n            children = childNode.withChildren();\n            children.forEach(function (node) {\n              withNeighborsList.add(node);\n            });\n          }\n        }\n\n        return withNeighborsList;\n      };\n\n      LNode.prototype.getNoOfChildren = function () {\n        var noOfChildren = 0;\n        var childNode;\n\n        if (this.child == null) {\n          noOfChildren = 1;\n        } else {\n          var nodes = this.child.getNodes();\n\n          for (var i = 0; i < nodes.length; i++) {\n            childNode = nodes[i];\n            noOfChildren += childNode.getNoOfChildren();\n          }\n        }\n\n        if (noOfChildren == 0) {\n          noOfChildren = 1;\n        }\n\n        return noOfChildren;\n      };\n\n      LNode.prototype.getEstimatedSize = function () {\n        if (this.estimatedSize == Integer.MIN_VALUE) {\n          throw \"assert failed\";\n        }\n\n        return this.estimatedSize;\n      };\n\n      LNode.prototype.calcEstimatedSize = function () {\n        if (this.child == null) {\n          return this.estimatedSize = (this.rect.width + this.rect.height) / 2;\n        } else {\n          this.estimatedSize = this.child.calcEstimatedSize();\n          this.rect.width = this.estimatedSize;\n          this.rect.height = this.estimatedSize;\n          return this.estimatedSize;\n        }\n      };\n\n      LNode.prototype.scatter = function () {\n        var randomCenterX;\n        var randomCenterY;\n        var minX = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n        var maxX = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n        randomCenterX = LayoutConstants.WORLD_CENTER_X + RandomSeed.nextDouble() * (maxX - minX) + minX;\n        var minY = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n        var maxY = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n        randomCenterY = LayoutConstants.WORLD_CENTER_Y + RandomSeed.nextDouble() * (maxY - minY) + minY;\n        this.rect.x = randomCenterX;\n        this.rect.y = randomCenterY;\n      };\n\n      LNode.prototype.updateBounds = function () {\n        if (this.getChild() == null) {\n          throw \"assert failed\";\n        }\n\n        if (this.getChild().getNodes().length != 0) {\n          // wrap the children nodes by re-arranging the boundaries\n          var childGraph = this.getChild();\n          childGraph.updateBounds(true);\n          this.rect.x = childGraph.getLeft();\n          this.rect.y = childGraph.getTop();\n          this.setWidth(childGraph.getRight() - childGraph.getLeft());\n          this.setHeight(childGraph.getBottom() - childGraph.getTop()); // Update compound bounds considering its label properties    \n\n          if (LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n            var width = childGraph.getRight() - childGraph.getLeft();\n            var height = childGraph.getBottom() - childGraph.getTop();\n\n            if (this.labelWidth > width) {\n              this.rect.x -= (this.labelWidth - width) / 2;\n              this.setWidth(this.labelWidth);\n            }\n\n            if (this.labelHeight > height) {\n              if (this.labelPos == \"center\") {\n                this.rect.y -= (this.labelHeight - height) / 2;\n              } else if (this.labelPos == \"top\") {\n                this.rect.y -= this.labelHeight - height;\n              }\n\n              this.setHeight(this.labelHeight);\n            }\n          }\n        }\n      };\n\n      LNode.prototype.getInclusionTreeDepth = function () {\n        if (this.inclusionTreeDepth == Integer.MAX_VALUE) {\n          throw \"assert failed\";\n        }\n\n        return this.inclusionTreeDepth;\n      };\n\n      LNode.prototype.transform = function (trans) {\n        var left = this.rect.x;\n\n        if (left > LayoutConstants.WORLD_BOUNDARY) {\n          left = LayoutConstants.WORLD_BOUNDARY;\n        } else if (left < -LayoutConstants.WORLD_BOUNDARY) {\n          left = -LayoutConstants.WORLD_BOUNDARY;\n        }\n\n        var top = this.rect.y;\n\n        if (top > LayoutConstants.WORLD_BOUNDARY) {\n          top = LayoutConstants.WORLD_BOUNDARY;\n        } else if (top < -LayoutConstants.WORLD_BOUNDARY) {\n          top = -LayoutConstants.WORLD_BOUNDARY;\n        }\n\n        var leftTop = new PointD(left, top);\n        var vLeftTop = trans.inverseTransformPoint(leftTop);\n        this.setLocation(vLeftTop.x, vLeftTop.y);\n      };\n\n      LNode.prototype.getLeft = function () {\n        return this.rect.x;\n      };\n\n      LNode.prototype.getRight = function () {\n        return this.rect.x + this.rect.width;\n      };\n\n      LNode.prototype.getTop = function () {\n        return this.rect.y;\n      };\n\n      LNode.prototype.getBottom = function () {\n        return this.rect.y + this.rect.height;\n      };\n\n      LNode.prototype.getParent = function () {\n        if (this.owner == null) {\n          return null;\n        }\n\n        return this.owner.getParent();\n      };\n\n      module.exports = LNode;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function PointD(x, y) {\n        if (x == null && y == null) {\n          this.x = 0;\n          this.y = 0;\n        } else {\n          this.x = x;\n          this.y = y;\n        }\n      }\n\n      PointD.prototype.getX = function () {\n        return this.x;\n      };\n\n      PointD.prototype.getY = function () {\n        return this.y;\n      };\n\n      PointD.prototype.setX = function (x) {\n        this.x = x;\n      };\n\n      PointD.prototype.setY = function (y) {\n        this.y = y;\n      };\n\n      PointD.prototype.getDifference = function (pt) {\n        return new DimensionD(this.x - pt.x, this.y - pt.y);\n      };\n\n      PointD.prototype.getCopy = function () {\n        return new PointD(this.x, this.y);\n      };\n\n      PointD.prototype.translate = function (dim) {\n        this.x += dim.width;\n        this.y += dim.height;\n        return this;\n      };\n\n      module.exports = PointD;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LGraphObject = __webpack_require__(2);\n\n      var Integer = __webpack_require__(10);\n\n      var LayoutConstants = __webpack_require__(0);\n\n      var LGraphManager = __webpack_require__(6);\n\n      var LNode = __webpack_require__(3);\n\n      var LEdge = __webpack_require__(1);\n\n      var RectangleD = __webpack_require__(13);\n\n      var Point = __webpack_require__(12);\n\n      var LinkedList = __webpack_require__(11);\n\n      function LGraph(parent, obj2, vGraph) {\n        LGraphObject.call(this, vGraph);\n        this.estimatedSize = Integer.MIN_VALUE;\n        this.margin = LayoutConstants.DEFAULT_GRAPH_MARGIN;\n        this.edges = [];\n        this.nodes = [];\n        this.isConnected = false;\n        this.parent = parent;\n\n        if (obj2 != null && obj2 instanceof LGraphManager) {\n          this.graphManager = obj2;\n        } else if (obj2 != null && obj2 instanceof Layout) {\n          this.graphManager = obj2.graphManager;\n        }\n      }\n\n      LGraph.prototype = Object.create(LGraphObject.prototype);\n\n      for (var prop in LGraphObject) {\n        LGraph[prop] = LGraphObject[prop];\n      }\n\n      LGraph.prototype.getNodes = function () {\n        return this.nodes;\n      };\n\n      LGraph.prototype.getEdges = function () {\n        return this.edges;\n      };\n\n      LGraph.prototype.getGraphManager = function () {\n        return this.graphManager;\n      };\n\n      LGraph.prototype.getParent = function () {\n        return this.parent;\n      };\n\n      LGraph.prototype.getLeft = function () {\n        return this.left;\n      };\n\n      LGraph.prototype.getRight = function () {\n        return this.right;\n      };\n\n      LGraph.prototype.getTop = function () {\n        return this.top;\n      };\n\n      LGraph.prototype.getBottom = function () {\n        return this.bottom;\n      };\n\n      LGraph.prototype.isConnected = function () {\n        return this.isConnected;\n      };\n\n      LGraph.prototype.add = function (obj1, sourceNode, targetNode) {\n        if (sourceNode == null && targetNode == null) {\n          var newNode = obj1;\n\n          if (this.graphManager == null) {\n            throw \"Graph has no graph mgr!\";\n          }\n\n          if (this.getNodes().indexOf(newNode) > -1) {\n            throw \"Node already in graph!\";\n          }\n\n          newNode.owner = this;\n          this.getNodes().push(newNode);\n          return newNode;\n        } else {\n          var newEdge = obj1;\n\n          if (!(this.getNodes().indexOf(sourceNode) > -1 && this.getNodes().indexOf(targetNode) > -1)) {\n            throw \"Source or target not in graph!\";\n          }\n\n          if (!(sourceNode.owner == targetNode.owner && sourceNode.owner == this)) {\n            throw \"Both owners must be this graph!\";\n          }\n\n          if (sourceNode.owner != targetNode.owner) {\n            return null;\n          } // set source and target\n\n\n          newEdge.source = sourceNode;\n          newEdge.target = targetNode; // set as intra-graph edge\n\n          newEdge.isInterGraph = false; // add to graph edge list\n\n          this.getEdges().push(newEdge); // add to incidency lists\n\n          sourceNode.edges.push(newEdge);\n\n          if (targetNode != sourceNode) {\n            targetNode.edges.push(newEdge);\n          }\n\n          return newEdge;\n        }\n      };\n\n      LGraph.prototype.remove = function (obj) {\n        var node = obj;\n\n        if (obj instanceof LNode) {\n          if (node == null) {\n            throw \"Node is null!\";\n          }\n\n          if (!(node.owner != null && node.owner == this)) {\n            throw \"Owner graph is invalid!\";\n          }\n\n          if (this.graphManager == null) {\n            throw \"Owner graph manager is invalid!\";\n          } // remove incident edges first (make a copy to do it safely)\n\n\n          var edgesToBeRemoved = node.edges.slice();\n          var edge;\n          var s = edgesToBeRemoved.length;\n\n          for (var i = 0; i < s; i++) {\n            edge = edgesToBeRemoved[i];\n\n            if (edge.isInterGraph) {\n              this.graphManager.remove(edge);\n            } else {\n              edge.source.owner.remove(edge);\n            }\n          } // now the node itself\n\n\n          var index = this.nodes.indexOf(node);\n\n          if (index == -1) {\n            throw \"Node not in owner node list!\";\n          }\n\n          this.nodes.splice(index, 1);\n        } else if (obj instanceof LEdge) {\n          var edge = obj;\n\n          if (edge == null) {\n            throw \"Edge is null!\";\n          }\n\n          if (!(edge.source != null && edge.target != null)) {\n            throw \"Source and/or target is null!\";\n          }\n\n          if (!(edge.source.owner != null && edge.target.owner != null && edge.source.owner == this && edge.target.owner == this)) {\n            throw \"Source and/or target owner is invalid!\";\n          }\n\n          var sourceIndex = edge.source.edges.indexOf(edge);\n          var targetIndex = edge.target.edges.indexOf(edge);\n\n          if (!(sourceIndex > -1 && targetIndex > -1)) {\n            throw \"Source and/or target doesn't know this edge!\";\n          }\n\n          edge.source.edges.splice(sourceIndex, 1);\n\n          if (edge.target != edge.source) {\n            edge.target.edges.splice(targetIndex, 1);\n          }\n\n          var index = edge.source.owner.getEdges().indexOf(edge);\n\n          if (index == -1) {\n            throw \"Not in owner's edge list!\";\n          }\n\n          edge.source.owner.getEdges().splice(index, 1);\n        }\n      };\n\n      LGraph.prototype.updateLeftTop = function () {\n        var top = Integer.MAX_VALUE;\n        var left = Integer.MAX_VALUE;\n        var nodeTop;\n        var nodeLeft;\n        var margin;\n        var nodes = this.getNodes();\n        var s = nodes.length;\n\n        for (var i = 0; i < s; i++) {\n          var lNode = nodes[i];\n          nodeTop = lNode.getTop();\n          nodeLeft = lNode.getLeft();\n\n          if (top > nodeTop) {\n            top = nodeTop;\n          }\n\n          if (left > nodeLeft) {\n            left = nodeLeft;\n          }\n        } // Do we have any nodes in this graph?\n\n\n        if (top == Integer.MAX_VALUE) {\n          return null;\n        }\n\n        if (nodes[0].getParent().paddingLeft != undefined) {\n          margin = nodes[0].getParent().paddingLeft;\n        } else {\n          margin = this.margin;\n        }\n\n        this.left = left - margin;\n        this.top = top - margin; // Apply the margins and return the result\n\n        return new Point(this.left, this.top);\n      };\n\n      LGraph.prototype.updateBounds = function (recursive) {\n        // calculate bounds\n        var left = Integer.MAX_VALUE;\n        var right = -Integer.MAX_VALUE;\n        var top = Integer.MAX_VALUE;\n        var bottom = -Integer.MAX_VALUE;\n        var nodeLeft;\n        var nodeRight;\n        var nodeTop;\n        var nodeBottom;\n        var margin;\n        var nodes = this.nodes;\n        var s = nodes.length;\n\n        for (var i = 0; i < s; i++) {\n          var lNode = nodes[i];\n\n          if (recursive && lNode.child != null) {\n            lNode.updateBounds();\n          }\n\n          nodeLeft = lNode.getLeft();\n          nodeRight = lNode.getRight();\n          nodeTop = lNode.getTop();\n          nodeBottom = lNode.getBottom();\n\n          if (left > nodeLeft) {\n            left = nodeLeft;\n          }\n\n          if (right < nodeRight) {\n            right = nodeRight;\n          }\n\n          if (top > nodeTop) {\n            top = nodeTop;\n          }\n\n          if (bottom < nodeBottom) {\n            bottom = nodeBottom;\n          }\n        }\n\n        var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n\n        if (left == Integer.MAX_VALUE) {\n          this.left = this.parent.getLeft();\n          this.right = this.parent.getRight();\n          this.top = this.parent.getTop();\n          this.bottom = this.parent.getBottom();\n        }\n\n        if (nodes[0].getParent().paddingLeft != undefined) {\n          margin = nodes[0].getParent().paddingLeft;\n        } else {\n          margin = this.margin;\n        }\n\n        this.left = boundingRect.x - margin;\n        this.right = boundingRect.x + boundingRect.width + margin;\n        this.top = boundingRect.y - margin;\n        this.bottom = boundingRect.y + boundingRect.height + margin;\n      };\n\n      LGraph.calculateBounds = function (nodes) {\n        var left = Integer.MAX_VALUE;\n        var right = -Integer.MAX_VALUE;\n        var top = Integer.MAX_VALUE;\n        var bottom = -Integer.MAX_VALUE;\n        var nodeLeft;\n        var nodeRight;\n        var nodeTop;\n        var nodeBottom;\n        var s = nodes.length;\n\n        for (var i = 0; i < s; i++) {\n          var lNode = nodes[i];\n          nodeLeft = lNode.getLeft();\n          nodeRight = lNode.getRight();\n          nodeTop = lNode.getTop();\n          nodeBottom = lNode.getBottom();\n\n          if (left > nodeLeft) {\n            left = nodeLeft;\n          }\n\n          if (right < nodeRight) {\n            right = nodeRight;\n          }\n\n          if (top > nodeTop) {\n            top = nodeTop;\n          }\n\n          if (bottom < nodeBottom) {\n            bottom = nodeBottom;\n          }\n        }\n\n        var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n        return boundingRect;\n      };\n\n      LGraph.prototype.getInclusionTreeDepth = function () {\n        if (this == this.graphManager.getRoot()) {\n          return 1;\n        } else {\n          return this.parent.getInclusionTreeDepth();\n        }\n      };\n\n      LGraph.prototype.getEstimatedSize = function () {\n        if (this.estimatedSize == Integer.MIN_VALUE) {\n          throw \"assert failed\";\n        }\n\n        return this.estimatedSize;\n      };\n\n      LGraph.prototype.calcEstimatedSize = function () {\n        var size = 0;\n        var nodes = this.nodes;\n        var s = nodes.length;\n\n        for (var i = 0; i < s; i++) {\n          var lNode = nodes[i];\n          size += lNode.calcEstimatedSize();\n        }\n\n        if (size == 0) {\n          this.estimatedSize = LayoutConstants.EMPTY_COMPOUND_NODE_SIZE;\n        } else {\n          this.estimatedSize = size / Math.sqrt(this.nodes.length);\n        }\n\n        return this.estimatedSize;\n      };\n\n      LGraph.prototype.updateConnected = function () {\n        var self = this;\n\n        if (this.nodes.length == 0) {\n          this.isConnected = true;\n          return;\n        }\n\n        var queue = new LinkedList();\n        var visited = new Set();\n        var currentNode = this.nodes[0];\n        var neighborEdges;\n        var currentNeighbor;\n        var childrenOfNode = currentNode.withChildren();\n        childrenOfNode.forEach(function (node) {\n          queue.push(node);\n          visited.add(node);\n        });\n\n        while (queue.length !== 0) {\n          currentNode = queue.shift(); // Traverse all neighbors of this node\n\n          neighborEdges = currentNode.getEdges();\n          var size = neighborEdges.length;\n\n          for (var i = 0; i < size; i++) {\n            var neighborEdge = neighborEdges[i];\n            currentNeighbor = neighborEdge.getOtherEndInGraph(currentNode, this); // Add unvisited neighbors to the list to visit\n\n            if (currentNeighbor != null && !visited.has(currentNeighbor)) {\n              var childrenOfNeighbor = currentNeighbor.withChildren();\n              childrenOfNeighbor.forEach(function (node) {\n                queue.push(node);\n                visited.add(node);\n              });\n            }\n          }\n        }\n\n        this.isConnected = false;\n\n        if (visited.size >= this.nodes.length) {\n          var noOfVisitedInThisGraph = 0;\n          visited.forEach(function (visitedNode) {\n            if (visitedNode.owner == self) {\n              noOfVisitedInThisGraph++;\n            }\n          });\n\n          if (noOfVisitedInThisGraph == this.nodes.length) {\n            this.isConnected = true;\n          }\n        }\n      };\n\n      module.exports = LGraph;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LGraph;\n\n      var LEdge = __webpack_require__(1);\n\n      function LGraphManager(layout) {\n        LGraph = __webpack_require__(5); // It may be better to initilize this out of this function but it gives an error (Right-hand side of 'instanceof' is not callable) now.\n\n        this.layout = layout;\n        this.graphs = [];\n        this.edges = [];\n      }\n\n      LGraphManager.prototype.addRoot = function () {\n        var ngraph = this.layout.newGraph();\n        var nnode = this.layout.newNode(null);\n        var root = this.add(ngraph, nnode);\n        this.setRootGraph(root);\n        return this.rootGraph;\n      };\n\n      LGraphManager.prototype.add = function (newGraph, parentNode, newEdge, sourceNode, targetNode) {\n        //there are just 2 parameters are passed then it adds an LGraph else it adds an LEdge\n        if (newEdge == null && sourceNode == null && targetNode == null) {\n          if (newGraph == null) {\n            throw \"Graph is null!\";\n          }\n\n          if (parentNode == null) {\n            throw \"Parent node is null!\";\n          }\n\n          if (this.graphs.indexOf(newGraph) > -1) {\n            throw \"Graph already in this graph mgr!\";\n          }\n\n          this.graphs.push(newGraph);\n\n          if (newGraph.parent != null) {\n            throw \"Already has a parent!\";\n          }\n\n          if (parentNode.child != null) {\n            throw \"Already has a child!\";\n          }\n\n          newGraph.parent = parentNode;\n          parentNode.child = newGraph;\n          return newGraph;\n        } else {\n          //change the order of the parameters\n          targetNode = newEdge;\n          sourceNode = parentNode;\n          newEdge = newGraph;\n          var sourceGraph = sourceNode.getOwner();\n          var targetGraph = targetNode.getOwner();\n\n          if (!(sourceGraph != null && sourceGraph.getGraphManager() == this)) {\n            throw \"Source not in this graph mgr!\";\n          }\n\n          if (!(targetGraph != null && targetGraph.getGraphManager() == this)) {\n            throw \"Target not in this graph mgr!\";\n          }\n\n          if (sourceGraph == targetGraph) {\n            newEdge.isInterGraph = false;\n            return sourceGraph.add(newEdge, sourceNode, targetNode);\n          } else {\n            newEdge.isInterGraph = true; // set source and target\n\n            newEdge.source = sourceNode;\n            newEdge.target = targetNode; // add edge to inter-graph edge list\n\n            if (this.edges.indexOf(newEdge) > -1) {\n              throw \"Edge already in inter-graph edge list!\";\n            }\n\n            this.edges.push(newEdge); // add edge to source and target incidency lists\n\n            if (!(newEdge.source != null && newEdge.target != null)) {\n              throw \"Edge source and/or target is null!\";\n            }\n\n            if (!(newEdge.source.edges.indexOf(newEdge) == -1 && newEdge.target.edges.indexOf(newEdge) == -1)) {\n              throw \"Edge already in source and/or target incidency list!\";\n            }\n\n            newEdge.source.edges.push(newEdge);\n            newEdge.target.edges.push(newEdge);\n            return newEdge;\n          }\n        }\n      };\n\n      LGraphManager.prototype.remove = function (lObj) {\n        if (lObj instanceof LGraph) {\n          var graph = lObj;\n\n          if (graph.getGraphManager() != this) {\n            throw \"Graph not in this graph mgr\";\n          }\n\n          if (!(graph == this.rootGraph || graph.parent != null && graph.parent.graphManager == this)) {\n            throw \"Invalid parent node!\";\n          } // first the edges (make a copy to do it safely)\n\n\n          var edgesToBeRemoved = [];\n          edgesToBeRemoved = edgesToBeRemoved.concat(graph.getEdges());\n          var edge;\n          var s = edgesToBeRemoved.length;\n\n          for (var i = 0; i < s; i++) {\n            edge = edgesToBeRemoved[i];\n            graph.remove(edge);\n          } // then the nodes (make a copy to do it safely)\n\n\n          var nodesToBeRemoved = [];\n          nodesToBeRemoved = nodesToBeRemoved.concat(graph.getNodes());\n          var node;\n          s = nodesToBeRemoved.length;\n\n          for (var i = 0; i < s; i++) {\n            node = nodesToBeRemoved[i];\n            graph.remove(node);\n          } // check if graph is the root\n\n\n          if (graph == this.rootGraph) {\n            this.setRootGraph(null);\n          } // now remove the graph itself\n\n\n          var index = this.graphs.indexOf(graph);\n          this.graphs.splice(index, 1); // also reset the parent of the graph\n\n          graph.parent = null;\n        } else if (lObj instanceof LEdge) {\n          edge = lObj;\n\n          if (edge == null) {\n            throw \"Edge is null!\";\n          }\n\n          if (!edge.isInterGraph) {\n            throw \"Not an inter-graph edge!\";\n          }\n\n          if (!(edge.source != null && edge.target != null)) {\n            throw \"Source and/or target is null!\";\n          } // remove edge from source and target nodes' incidency lists\n\n\n          if (!(edge.source.edges.indexOf(edge) != -1 && edge.target.edges.indexOf(edge) != -1)) {\n            throw \"Source and/or target doesn't know this edge!\";\n          }\n\n          var index = edge.source.edges.indexOf(edge);\n          edge.source.edges.splice(index, 1);\n          index = edge.target.edges.indexOf(edge);\n          edge.target.edges.splice(index, 1); // remove edge from owner graph manager's inter-graph edge list\n\n          if (!(edge.source.owner != null && edge.source.owner.getGraphManager() != null)) {\n            throw \"Edge owner graph or owner graph manager is null!\";\n          }\n\n          if (edge.source.owner.getGraphManager().edges.indexOf(edge) == -1) {\n            throw \"Not in owner graph manager's edge list!\";\n          }\n\n          var index = edge.source.owner.getGraphManager().edges.indexOf(edge);\n          edge.source.owner.getGraphManager().edges.splice(index, 1);\n        }\n      };\n\n      LGraphManager.prototype.updateBounds = function () {\n        this.rootGraph.updateBounds(true);\n      };\n\n      LGraphManager.prototype.getGraphs = function () {\n        return this.graphs;\n      };\n\n      LGraphManager.prototype.getAllNodes = function () {\n        if (this.allNodes == null) {\n          var nodeList = [];\n          var graphs = this.getGraphs();\n          var s = graphs.length;\n\n          for (var i = 0; i < s; i++) {\n            nodeList = nodeList.concat(graphs[i].getNodes());\n          }\n\n          this.allNodes = nodeList;\n        }\n\n        return this.allNodes;\n      };\n\n      LGraphManager.prototype.resetAllNodes = function () {\n        this.allNodes = null;\n      };\n\n      LGraphManager.prototype.resetAllEdges = function () {\n        this.allEdges = null;\n      };\n\n      LGraphManager.prototype.resetAllNodesToApplyGravitation = function () {\n        this.allNodesToApplyGravitation = null;\n      };\n\n      LGraphManager.prototype.getAllEdges = function () {\n        if (this.allEdges == null) {\n          var edgeList = [];\n          var graphs = this.getGraphs();\n          var s = graphs.length;\n\n          for (var i = 0; i < graphs.length; i++) {\n            edgeList = edgeList.concat(graphs[i].getEdges());\n          }\n\n          edgeList = edgeList.concat(this.edges);\n          this.allEdges = edgeList;\n        }\n\n        return this.allEdges;\n      };\n\n      LGraphManager.prototype.getAllNodesToApplyGravitation = function () {\n        return this.allNodesToApplyGravitation;\n      };\n\n      LGraphManager.prototype.setAllNodesToApplyGravitation = function (nodeList) {\n        if (this.allNodesToApplyGravitation != null) {\n          throw \"assert failed\";\n        }\n\n        this.allNodesToApplyGravitation = nodeList;\n      };\n\n      LGraphManager.prototype.getRoot = function () {\n        return this.rootGraph;\n      };\n\n      LGraphManager.prototype.setRootGraph = function (graph) {\n        if (graph.getGraphManager() != this) {\n          throw \"Root not in this graph mgr!\";\n        }\n\n        this.rootGraph = graph; // root graph must have a root node associated with it for convenience\n\n        if (graph.parent == null) {\n          graph.parent = this.layout.newNode(\"Root node\");\n        }\n      };\n\n      LGraphManager.prototype.getLayout = function () {\n        return this.layout;\n      };\n\n      LGraphManager.prototype.isOneAncestorOfOther = function (firstNode, secondNode) {\n        if (!(firstNode != null && secondNode != null)) {\n          throw \"assert failed\";\n        }\n\n        if (firstNode == secondNode) {\n          return true;\n        } // Is second node an ancestor of the first one?\n\n\n        var ownerGraph = firstNode.getOwner();\n        var parentNode;\n\n        do {\n          parentNode = ownerGraph.getParent();\n\n          if (parentNode == null) {\n            break;\n          }\n\n          if (parentNode == secondNode) {\n            return true;\n          }\n\n          ownerGraph = parentNode.getOwner();\n\n          if (ownerGraph == null) {\n            break;\n          }\n        } while (true); // Is first node an ancestor of the second one?\n\n\n        ownerGraph = secondNode.getOwner();\n\n        do {\n          parentNode = ownerGraph.getParent();\n\n          if (parentNode == null) {\n            break;\n          }\n\n          if (parentNode == firstNode) {\n            return true;\n          }\n\n          ownerGraph = parentNode.getOwner();\n\n          if (ownerGraph == null) {\n            break;\n          }\n        } while (true);\n\n        return false;\n      };\n\n      LGraphManager.prototype.calcLowestCommonAncestors = function () {\n        var edge;\n        var sourceNode;\n        var targetNode;\n        var sourceAncestorGraph;\n        var targetAncestorGraph;\n        var edges = this.getAllEdges();\n        var s = edges.length;\n\n        for (var i = 0; i < s; i++) {\n          edge = edges[i];\n          sourceNode = edge.source;\n          targetNode = edge.target;\n          edge.lca = null;\n          edge.sourceInLca = sourceNode;\n          edge.targetInLca = targetNode;\n\n          if (sourceNode == targetNode) {\n            edge.lca = sourceNode.getOwner();\n            continue;\n          }\n\n          sourceAncestorGraph = sourceNode.getOwner();\n\n          while (edge.lca == null) {\n            edge.targetInLca = targetNode;\n            targetAncestorGraph = targetNode.getOwner();\n\n            while (edge.lca == null) {\n              if (targetAncestorGraph == sourceAncestorGraph) {\n                edge.lca = targetAncestorGraph;\n                break;\n              }\n\n              if (targetAncestorGraph == this.rootGraph) {\n                break;\n              }\n\n              if (edge.lca != null) {\n                throw \"assert failed\";\n              }\n\n              edge.targetInLca = targetAncestorGraph.getParent();\n              targetAncestorGraph = edge.targetInLca.getOwner();\n            }\n\n            if (sourceAncestorGraph == this.rootGraph) {\n              break;\n            }\n\n            if (edge.lca == null) {\n              edge.sourceInLca = sourceAncestorGraph.getParent();\n              sourceAncestorGraph = edge.sourceInLca.getOwner();\n            }\n          }\n\n          if (edge.lca == null) {\n            throw \"assert failed\";\n          }\n        }\n      };\n\n      LGraphManager.prototype.calcLowestCommonAncestor = function (firstNode, secondNode) {\n        if (firstNode == secondNode) {\n          return firstNode.getOwner();\n        }\n\n        var firstOwnerGraph = firstNode.getOwner();\n\n        do {\n          if (firstOwnerGraph == null) {\n            break;\n          }\n\n          var secondOwnerGraph = secondNode.getOwner();\n\n          do {\n            if (secondOwnerGraph == null) {\n              break;\n            }\n\n            if (secondOwnerGraph == firstOwnerGraph) {\n              return secondOwnerGraph;\n            }\n\n            secondOwnerGraph = secondOwnerGraph.getParent().getOwner();\n          } while (true);\n\n          firstOwnerGraph = firstOwnerGraph.getParent().getOwner();\n        } while (true);\n\n        return firstOwnerGraph;\n      };\n\n      LGraphManager.prototype.calcInclusionTreeDepths = function (graph, depth) {\n        if (graph == null && depth == null) {\n          graph = this.rootGraph;\n          depth = 1;\n        }\n\n        var node;\n        var nodes = graph.getNodes();\n        var s = nodes.length;\n\n        for (var i = 0; i < s; i++) {\n          node = nodes[i];\n          node.inclusionTreeDepth = depth;\n\n          if (node.child != null) {\n            this.calcInclusionTreeDepths(node.child, depth + 1);\n          }\n        }\n      };\n\n      LGraphManager.prototype.includesInvalidEdge = function () {\n        var edge;\n        var s = this.edges.length;\n\n        for (var i = 0; i < s; i++) {\n          edge = this.edges[i];\n\n          if (this.isOneAncestorOfOther(edge.source, edge.target)) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n\n      module.exports = LGraphManager;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LayoutConstants = __webpack_require__(0);\n\n      function FDLayoutConstants() {} //FDLayoutConstants inherits static props in LayoutConstants\n\n\n      for (var prop in LayoutConstants) {\n        FDLayoutConstants[prop] = LayoutConstants[prop];\n      }\n\n      FDLayoutConstants.MAX_ITERATIONS = 2500;\n      FDLayoutConstants.DEFAULT_EDGE_LENGTH = 50;\n      FDLayoutConstants.DEFAULT_SPRING_STRENGTH = 0.45;\n      FDLayoutConstants.DEFAULT_REPULSION_STRENGTH = 4500.0;\n      FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = 0.4;\n      FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = 1.0;\n      FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = 3.8;\n      FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = 1.5;\n      FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION = true;\n      FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION = true;\n      FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = 0.3;\n      FDLayoutConstants.COOLING_ADAPTATION_FACTOR = 0.33;\n      FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT = 1000;\n      FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT = 5000;\n      FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL = 100.0;\n      FDLayoutConstants.MAX_NODE_DISPLACEMENT = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL * 3;\n      FDLayoutConstants.MIN_REPULSION_DIST = FDLayoutConstants.DEFAULT_EDGE_LENGTH / 10.0;\n      FDLayoutConstants.CONVERGENCE_CHECK_PERIOD = 100;\n      FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = 0.1;\n      FDLayoutConstants.MIN_EDGE_LENGTH = 1;\n      FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD = 10;\n      module.exports = FDLayoutConstants;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /**\n       * This class maintains a list of static geometry related utility methods.\n       *\n       *\n       * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n       */\n\n      var Point = __webpack_require__(12);\n\n      function IGeometry() {}\n      /**\n       * This method calculates *half* the amount in x and y directions of the two\n       * input rectangles needed to separate them keeping their respective\n       * positioning, and returns the result in the input array. An input\n       * separation buffer added to the amount in both directions. We assume that\n       * the two rectangles do intersect.\n       */\n\n\n      IGeometry.calcSeparationAmount = function (rectA, rectB, overlapAmount, separationBuffer) {\n        if (!rectA.intersects(rectB)) {\n          throw \"assert failed\";\n        }\n\n        var directions = new Array(2);\n        this.decideDirectionsForOverlappingNodes(rectA, rectB, directions);\n        overlapAmount[0] = Math.min(rectA.getRight(), rectB.getRight()) - Math.max(rectA.x, rectB.x);\n        overlapAmount[1] = Math.min(rectA.getBottom(), rectB.getBottom()) - Math.max(rectA.y, rectB.y); // update the overlapping amounts for the following cases:\n\n        if (rectA.getX() <= rectB.getX() && rectA.getRight() >= rectB.getRight()) {\n          /* Case x.1:\n          *\n          * rectA\n          * \t|                       |\n          * \t|        _________      |\n          * \t|        |       |      |\n          * \t|________|_______|______|\n          * \t\t\t |       |\n          *           |       |\n          *        rectB\n          */\n          overlapAmount[0] += Math.min(rectB.getX() - rectA.getX(), rectA.getRight() - rectB.getRight());\n        } else if (rectB.getX() <= rectA.getX() && rectB.getRight() >= rectA.getRight()) {\n          /* Case x.2:\n          *\n          * rectB\n          * \t|                       |\n          * \t|        _________      |\n          * \t|        |       |      |\n          * \t|________|_______|______|\n          * \t\t\t |       |\n          *           |       |\n          *        rectA\n          */\n          overlapAmount[0] += Math.min(rectA.getX() - rectB.getX(), rectB.getRight() - rectA.getRight());\n        }\n\n        if (rectA.getY() <= rectB.getY() && rectA.getBottom() >= rectB.getBottom()) {\n          /* Case y.1:\n           *          ________ rectA\n           *         |\n           *         |\n           *   ______|____  rectB\n           *         |    |\n           *         |    |\n           *   ______|____|\n           *         |\n           *         |\n           *         |________\n           *\n           */\n          overlapAmount[1] += Math.min(rectB.getY() - rectA.getY(), rectA.getBottom() - rectB.getBottom());\n        } else if (rectB.getY() <= rectA.getY() && rectB.getBottom() >= rectA.getBottom()) {\n          /* Case y.2:\n          *          ________ rectB\n          *         |\n          *         |\n          *   ______|____  rectA\n          *         |    |\n          *         |    |\n          *   ______|____|\n          *         |\n          *         |\n          *         |________\n          *\n          */\n          overlapAmount[1] += Math.min(rectA.getY() - rectB.getY(), rectB.getBottom() - rectA.getBottom());\n        } // find slope of the line passes two centers\n\n\n        var slope = Math.abs((rectB.getCenterY() - rectA.getCenterY()) / (rectB.getCenterX() - rectA.getCenterX())); // if centers are overlapped\n\n        if (rectB.getCenterY() === rectA.getCenterY() && rectB.getCenterX() === rectA.getCenterX()) {\n          // assume the slope is 1 (45 degree)\n          slope = 1.0;\n        }\n\n        var moveByY = slope * overlapAmount[0];\n        var moveByX = overlapAmount[1] / slope;\n\n        if (overlapAmount[0] < moveByX) {\n          moveByX = overlapAmount[0];\n        } else {\n          moveByY = overlapAmount[1];\n        } // return half the amount so that if each rectangle is moved by these\n        // amounts in opposite directions, overlap will be resolved\n\n\n        overlapAmount[0] = -1 * directions[0] * (moveByX / 2 + separationBuffer);\n        overlapAmount[1] = -1 * directions[1] * (moveByY / 2 + separationBuffer);\n      };\n      /**\n       * This method decides the separation direction of overlapping nodes\n       *\n       * if directions[0] = -1, then rectA goes left\n       * if directions[0] = 1,  then rectA goes right\n       * if directions[1] = -1, then rectA goes up\n       * if directions[1] = 1,  then rectA goes down\n       */\n\n\n      IGeometry.decideDirectionsForOverlappingNodes = function (rectA, rectB, directions) {\n        if (rectA.getCenterX() < rectB.getCenterX()) {\n          directions[0] = -1;\n        } else {\n          directions[0] = 1;\n        }\n\n        if (rectA.getCenterY() < rectB.getCenterY()) {\n          directions[1] = -1;\n        } else {\n          directions[1] = 1;\n        }\n      };\n      /**\n       * This method calculates the intersection (clipping) points of the two\n       * input rectangles with line segment defined by the centers of these two\n       * rectangles. The clipping points are saved in the input double array and\n       * whether or not the two rectangles overlap is returned.\n       */\n\n\n      IGeometry.getIntersection2 = function (rectA, rectB, result) {\n        //result[0-1] will contain clipPoint of rectA, result[2-3] will contain clipPoint of rectB\n        var p1x = rectA.getCenterX();\n        var p1y = rectA.getCenterY();\n        var p2x = rectB.getCenterX();\n        var p2y = rectB.getCenterY(); //if two rectangles intersect, then clipping points are centers\n\n        if (rectA.intersects(rectB)) {\n          result[0] = p1x;\n          result[1] = p1y;\n          result[2] = p2x;\n          result[3] = p2y;\n          return true;\n        } //variables for rectA\n\n\n        var topLeftAx = rectA.getX();\n        var topLeftAy = rectA.getY();\n        var topRightAx = rectA.getRight();\n        var bottomLeftAx = rectA.getX();\n        var bottomLeftAy = rectA.getBottom();\n        var bottomRightAx = rectA.getRight();\n        var halfWidthA = rectA.getWidthHalf();\n        var halfHeightA = rectA.getHeightHalf(); //variables for rectB\n\n        var topLeftBx = rectB.getX();\n        var topLeftBy = rectB.getY();\n        var topRightBx = rectB.getRight();\n        var bottomLeftBx = rectB.getX();\n        var bottomLeftBy = rectB.getBottom();\n        var bottomRightBx = rectB.getRight();\n        var halfWidthB = rectB.getWidthHalf();\n        var halfHeightB = rectB.getHeightHalf(); //flag whether clipping points are found\n\n        var clipPointAFound = false;\n        var clipPointBFound = false; // line is vertical\n\n        if (p1x === p2x) {\n          if (p1y > p2y) {\n            result[0] = p1x;\n            result[1] = topLeftAy;\n            result[2] = p2x;\n            result[3] = bottomLeftBy;\n            return false;\n          } else if (p1y < p2y) {\n            result[0] = p1x;\n            result[1] = bottomLeftAy;\n            result[2] = p2x;\n            result[3] = topLeftBy;\n            return false;\n          } else {//not line, return null;\n          }\n        } // line is horizontal\n        else if (p1y === p2y) {\n          if (p1x > p2x) {\n            result[0] = topLeftAx;\n            result[1] = p1y;\n            result[2] = topRightBx;\n            result[3] = p2y;\n            return false;\n          } else if (p1x < p2x) {\n            result[0] = topRightAx;\n            result[1] = p1y;\n            result[2] = topLeftBx;\n            result[3] = p2y;\n            return false;\n          } else {//not valid line, return null;\n          }\n        } else {\n          //slopes of rectA's and rectB's diagonals\n          var slopeA = rectA.height / rectA.width;\n          var slopeB = rectB.height / rectB.width; //slope of line between center of rectA and center of rectB\n\n          var slopePrime = (p2y - p1y) / (p2x - p1x);\n          var cardinalDirectionA = void 0;\n          var cardinalDirectionB = void 0;\n          var tempPointAx = void 0;\n          var tempPointAy = void 0;\n          var tempPointBx = void 0;\n          var tempPointBy = void 0; //determine whether clipping point is the corner of nodeA\n\n          if (-slopeA === slopePrime) {\n            if (p1x > p2x) {\n              result[0] = bottomLeftAx;\n              result[1] = bottomLeftAy;\n              clipPointAFound = true;\n            } else {\n              result[0] = topRightAx;\n              result[1] = topLeftAy;\n              clipPointAFound = true;\n            }\n          } else if (slopeA === slopePrime) {\n            if (p1x > p2x) {\n              result[0] = topLeftAx;\n              result[1] = topLeftAy;\n              clipPointAFound = true;\n            } else {\n              result[0] = bottomRightAx;\n              result[1] = bottomLeftAy;\n              clipPointAFound = true;\n            }\n          } //determine whether clipping point is the corner of nodeB\n\n\n          if (-slopeB === slopePrime) {\n            if (p2x > p1x) {\n              result[2] = bottomLeftBx;\n              result[3] = bottomLeftBy;\n              clipPointBFound = true;\n            } else {\n              result[2] = topRightBx;\n              result[3] = topLeftBy;\n              clipPointBFound = true;\n            }\n          } else if (slopeB === slopePrime) {\n            if (p2x > p1x) {\n              result[2] = topLeftBx;\n              result[3] = topLeftBy;\n              clipPointBFound = true;\n            } else {\n              result[2] = bottomRightBx;\n              result[3] = bottomLeftBy;\n              clipPointBFound = true;\n            }\n          } //if both clipping points are corners\n\n\n          if (clipPointAFound && clipPointBFound) {\n            return false;\n          } //determine Cardinal Direction of rectangles\n\n\n          if (p1x > p2x) {\n            if (p1y > p2y) {\n              cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 4);\n              cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 2);\n            } else {\n              cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 3);\n              cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 1);\n            }\n          } else {\n            if (p1y > p2y) {\n              cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 1);\n              cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 3);\n            } else {\n              cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 2);\n              cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 4);\n            }\n          } //calculate clipping Point if it is not found before\n\n\n          if (!clipPointAFound) {\n            switch (cardinalDirectionA) {\n              case 1:\n                tempPointAy = topLeftAy;\n                tempPointAx = p1x + -halfHeightA / slopePrime;\n                result[0] = tempPointAx;\n                result[1] = tempPointAy;\n                break;\n\n              case 2:\n                tempPointAx = bottomRightAx;\n                tempPointAy = p1y + halfWidthA * slopePrime;\n                result[0] = tempPointAx;\n                result[1] = tempPointAy;\n                break;\n\n              case 3:\n                tempPointAy = bottomLeftAy;\n                tempPointAx = p1x + halfHeightA / slopePrime;\n                result[0] = tempPointAx;\n                result[1] = tempPointAy;\n                break;\n\n              case 4:\n                tempPointAx = bottomLeftAx;\n                tempPointAy = p1y + -halfWidthA * slopePrime;\n                result[0] = tempPointAx;\n                result[1] = tempPointAy;\n                break;\n            }\n          }\n\n          if (!clipPointBFound) {\n            switch (cardinalDirectionB) {\n              case 1:\n                tempPointBy = topLeftBy;\n                tempPointBx = p2x + -halfHeightB / slopePrime;\n                result[2] = tempPointBx;\n                result[3] = tempPointBy;\n                break;\n\n              case 2:\n                tempPointBx = bottomRightBx;\n                tempPointBy = p2y + halfWidthB * slopePrime;\n                result[2] = tempPointBx;\n                result[3] = tempPointBy;\n                break;\n\n              case 3:\n                tempPointBy = bottomLeftBy;\n                tempPointBx = p2x + halfHeightB / slopePrime;\n                result[2] = tempPointBx;\n                result[3] = tempPointBy;\n                break;\n\n              case 4:\n                tempPointBx = bottomLeftBx;\n                tempPointBy = p2y + -halfWidthB * slopePrime;\n                result[2] = tempPointBx;\n                result[3] = tempPointBy;\n                break;\n            }\n          }\n        }\n\n        return false;\n      };\n      /**\n       * This method returns in which cardinal direction does input point stays\n       * 1: North\n       * 2: East\n       * 3: South\n       * 4: West\n       */\n\n\n      IGeometry.getCardinalDirection = function (slope, slopePrime, line) {\n        if (slope > slopePrime) {\n          return line;\n        } else {\n          return 1 + line % 4;\n        }\n      };\n      /**\n       * This method calculates the intersection of the two lines defined by\n       * point pairs (s1,s2) and (f1,f2).\n       */\n\n\n      IGeometry.getIntersection = function (s1, s2, f1, f2) {\n        if (f2 == null) {\n          return this.getIntersection2(s1, s2, f1);\n        }\n\n        var x1 = s1.x;\n        var y1 = s1.y;\n        var x2 = s2.x;\n        var y2 = s2.y;\n        var x3 = f1.x;\n        var y3 = f1.y;\n        var x4 = f2.x;\n        var y4 = f2.y;\n        var x = void 0,\n            y = void 0; // intersection point\n\n        var a1 = void 0,\n            a2 = void 0,\n            b1 = void 0,\n            b2 = void 0,\n            c1 = void 0,\n            c2 = void 0; // coefficients of line eqns.\n\n        var denom = void 0;\n        a1 = y2 - y1;\n        b1 = x1 - x2;\n        c1 = x2 * y1 - x1 * y2; // { a1*x + b1*y + c1 = 0 is line 1 }\n\n        a2 = y4 - y3;\n        b2 = x3 - x4;\n        c2 = x4 * y3 - x3 * y4; // { a2*x + b2*y + c2 = 0 is line 2 }\n\n        denom = a1 * b2 - a2 * b1;\n\n        if (denom === 0) {\n          return null;\n        }\n\n        x = (b1 * c2 - b2 * c1) / denom;\n        y = (a2 * c1 - a1 * c2) / denom;\n        return new Point(x, y);\n      };\n      /**\n       * This method finds and returns the angle of the vector from the + x-axis\n       * in clockwise direction (compatible w/ Java coordinate system!).\n       */\n\n\n      IGeometry.angleOfVector = function (Cx, Cy, Nx, Ny) {\n        var C_angle = void 0;\n\n        if (Cx !== Nx) {\n          C_angle = Math.atan((Ny - Cy) / (Nx - Cx));\n\n          if (Nx < Cx) {\n            C_angle += Math.PI;\n          } else if (Ny < Cy) {\n            C_angle += this.TWO_PI;\n          }\n        } else if (Ny < Cy) {\n          C_angle = this.ONE_AND_HALF_PI; // 270 degrees\n        } else {\n          C_angle = this.HALF_PI; // 90 degrees\n        }\n\n        return C_angle;\n      };\n      /**\n       * This method checks whether the given two line segments (one with point\n       * p1 and p2, the other with point p3 and p4) intersect at a point other\n       * than these points.\n       */\n\n\n      IGeometry.doIntersect = function (p1, p2, p3, p4) {\n        var a = p1.x;\n        var b = p1.y;\n        var c = p2.x;\n        var d = p2.y;\n        var p = p3.x;\n        var q = p3.y;\n        var r = p4.x;\n        var s = p4.y;\n        var det = (c - a) * (s - q) - (r - p) * (d - b);\n\n        if (det === 0) {\n          return false;\n        } else {\n          var lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n          var gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n          return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n        }\n      }; // -----------------------------------------------------------------------------\n      // Section: Class Constants\n      // -----------------------------------------------------------------------------\n\n      /**\n       * Some useful pre-calculated constants\n       */\n\n\n      IGeometry.HALF_PI = 0.5 * Math.PI;\n      IGeometry.ONE_AND_HALF_PI = 1.5 * Math.PI;\n      IGeometry.TWO_PI = 2.0 * Math.PI;\n      IGeometry.THREE_PI = 3.0 * Math.PI;\n      module.exports = IGeometry;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function IMath() {}\n      /**\n       * This method returns the sign of the input value.\n       */\n\n\n      IMath.sign = function (value) {\n        if (value > 0) {\n          return 1;\n        } else if (value < 0) {\n          return -1;\n        } else {\n          return 0;\n        }\n      };\n\n      IMath.floor = function (value) {\n        return value < 0 ? Math.ceil(value) : Math.floor(value);\n      };\n\n      IMath.ceil = function (value) {\n        return value < 0 ? Math.floor(value) : Math.ceil(value);\n      };\n\n      module.exports = IMath;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function Integer() {}\n\n      Integer.MAX_VALUE = 2147483647;\n      Integer.MIN_VALUE = -2147483648;\n      module.exports = Integer;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var nodeFrom = function nodeFrom(value) {\n        return {\n          value: value,\n          next: null,\n          prev: null\n        };\n      };\n\n      var add = function add(prev, node, next, list) {\n        if (prev !== null) {\n          prev.next = node;\n        } else {\n          list.head = node;\n        }\n\n        if (next !== null) {\n          next.prev = node;\n        } else {\n          list.tail = node;\n        }\n\n        node.prev = prev;\n        node.next = next;\n        list.length++;\n        return node;\n      };\n\n      var _remove = function _remove(node, list) {\n        var prev = node.prev,\n            next = node.next;\n\n        if (prev !== null) {\n          prev.next = next;\n        } else {\n          list.head = next;\n        }\n\n        if (next !== null) {\n          next.prev = prev;\n        } else {\n          list.tail = prev;\n        }\n\n        node.prev = node.next = null;\n        list.length--;\n        return node;\n      };\n\n      var LinkedList = function () {\n        function LinkedList(vals) {\n          var _this = this;\n\n          _classCallCheck(this, LinkedList);\n\n          this.length = 0;\n          this.head = null;\n          this.tail = null;\n\n          if (vals != null) {\n            vals.forEach(function (v) {\n              return _this.push(v);\n            });\n          }\n        }\n\n        _createClass(LinkedList, [{\n          key: \"size\",\n          value: function size() {\n            return this.length;\n          }\n        }, {\n          key: \"insertBefore\",\n          value: function insertBefore(val, otherNode) {\n            return add(otherNode.prev, nodeFrom(val), otherNode, this);\n          }\n        }, {\n          key: \"insertAfter\",\n          value: function insertAfter(val, otherNode) {\n            return add(otherNode, nodeFrom(val), otherNode.next, this);\n          }\n        }, {\n          key: \"insertNodeBefore\",\n          value: function insertNodeBefore(newNode, otherNode) {\n            return add(otherNode.prev, newNode, otherNode, this);\n          }\n        }, {\n          key: \"insertNodeAfter\",\n          value: function insertNodeAfter(newNode, otherNode) {\n            return add(otherNode, newNode, otherNode.next, this);\n          }\n        }, {\n          key: \"push\",\n          value: function push(val) {\n            return add(this.tail, nodeFrom(val), null, this);\n          }\n        }, {\n          key: \"unshift\",\n          value: function unshift(val) {\n            return add(null, nodeFrom(val), this.head, this);\n          }\n        }, {\n          key: \"remove\",\n          value: function remove(node) {\n            return _remove(node, this);\n          }\n        }, {\n          key: \"pop\",\n          value: function pop() {\n            return _remove(this.tail, this).value;\n          }\n        }, {\n          key: \"popNode\",\n          value: function popNode() {\n            return _remove(this.tail, this);\n          }\n        }, {\n          key: \"shift\",\n          value: function shift() {\n            return _remove(this.head, this).value;\n          }\n        }, {\n          key: \"shiftNode\",\n          value: function shiftNode() {\n            return _remove(this.head, this);\n          }\n        }, {\n          key: \"get_object_at\",\n          value: function get_object_at(index) {\n            if (index <= this.length()) {\n              var i = 1;\n              var current = this.head;\n\n              while (i < index) {\n                current = current.next;\n                i++;\n              }\n\n              return current.value;\n            }\n          }\n        }, {\n          key: \"set_object_at\",\n          value: function set_object_at(index, value) {\n            if (index <= this.length()) {\n              var i = 1;\n              var current = this.head;\n\n              while (i < index) {\n                current = current.next;\n                i++;\n              }\n\n              current.value = value;\n            }\n          }\n        }]);\n\n        return LinkedList;\n      }();\n\n      module.exports = LinkedList;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /*\r\n       *This class is the javascript implementation of the Point.java class in jdk\r\n       */\n\n      function Point(x, y, p) {\n        this.x = null;\n        this.y = null;\n\n        if (x == null && y == null && p == null) {\n          this.x = 0;\n          this.y = 0;\n        } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n          this.x = x;\n          this.y = y;\n        } else if (x.constructor.name == 'Point' && y == null && p == null) {\n          p = x;\n          this.x = p.x;\n          this.y = p.y;\n        }\n      }\n\n      Point.prototype.getX = function () {\n        return this.x;\n      };\n\n      Point.prototype.getY = function () {\n        return this.y;\n      };\n\n      Point.prototype.getLocation = function () {\n        return new Point(this.x, this.y);\n      };\n\n      Point.prototype.setLocation = function (x, y, p) {\n        if (x.constructor.name == 'Point' && y == null && p == null) {\n          p = x;\n          this.setLocation(p.x, p.y);\n        } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n          //if both parameters are integer just move (x,y) location\n          if (parseInt(x) == x && parseInt(y) == y) {\n            this.move(x, y);\n          } else {\n            this.x = Math.floor(x + 0.5);\n            this.y = Math.floor(y + 0.5);\n          }\n        }\n      };\n\n      Point.prototype.move = function (x, y) {\n        this.x = x;\n        this.y = y;\n      };\n\n      Point.prototype.translate = function (dx, dy) {\n        this.x += dx;\n        this.y += dy;\n      };\n\n      Point.prototype.equals = function (obj) {\n        if (obj.constructor.name == \"Point\") {\n          var pt = obj;\n          return this.x == pt.x && this.y == pt.y;\n        }\n\n        return this == obj;\n      };\n\n      Point.prototype.toString = function () {\n        return new Point().constructor.name + \"[x=\" + this.x + \",y=\" + this.y + \"]\";\n      };\n\n      module.exports = Point;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function RectangleD(x, y, width, height) {\n        this.x = 0;\n        this.y = 0;\n        this.width = 0;\n        this.height = 0;\n\n        if (x != null && y != null && width != null && height != null) {\n          this.x = x;\n          this.y = y;\n          this.width = width;\n          this.height = height;\n        }\n      }\n\n      RectangleD.prototype.getX = function () {\n        return this.x;\n      };\n\n      RectangleD.prototype.setX = function (x) {\n        this.x = x;\n      };\n\n      RectangleD.prototype.getY = function () {\n        return this.y;\n      };\n\n      RectangleD.prototype.setY = function (y) {\n        this.y = y;\n      };\n\n      RectangleD.prototype.getWidth = function () {\n        return this.width;\n      };\n\n      RectangleD.prototype.setWidth = function (width) {\n        this.width = width;\n      };\n\n      RectangleD.prototype.getHeight = function () {\n        return this.height;\n      };\n\n      RectangleD.prototype.setHeight = function (height) {\n        this.height = height;\n      };\n\n      RectangleD.prototype.getRight = function () {\n        return this.x + this.width;\n      };\n\n      RectangleD.prototype.getBottom = function () {\n        return this.y + this.height;\n      };\n\n      RectangleD.prototype.intersects = function (a) {\n        if (this.getRight() < a.x) {\n          return false;\n        }\n\n        if (this.getBottom() < a.y) {\n          return false;\n        }\n\n        if (a.getRight() < this.x) {\n          return false;\n        }\n\n        if (a.getBottom() < this.y) {\n          return false;\n        }\n\n        return true;\n      };\n\n      RectangleD.prototype.getCenterX = function () {\n        return this.x + this.width / 2;\n      };\n\n      RectangleD.prototype.getMinX = function () {\n        return this.getX();\n      };\n\n      RectangleD.prototype.getMaxX = function () {\n        return this.getX() + this.width;\n      };\n\n      RectangleD.prototype.getCenterY = function () {\n        return this.y + this.height / 2;\n      };\n\n      RectangleD.prototype.getMinY = function () {\n        return this.getY();\n      };\n\n      RectangleD.prototype.getMaxY = function () {\n        return this.getY() + this.height;\n      };\n\n      RectangleD.prototype.getWidthHalf = function () {\n        return this.width / 2;\n      };\n\n      RectangleD.prototype.getHeightHalf = function () {\n        return this.height / 2;\n      };\n\n      module.exports = RectangleD;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n\n      function UniqueIDGeneretor() {}\n\n      UniqueIDGeneretor.lastID = 0;\n\n      UniqueIDGeneretor.createID = function (obj) {\n        if (UniqueIDGeneretor.isPrimitive(obj)) {\n          return obj;\n        }\n\n        if (obj.uniqueID != null) {\n          return obj.uniqueID;\n        }\n\n        obj.uniqueID = UniqueIDGeneretor.getString();\n        UniqueIDGeneretor.lastID++;\n        return obj.uniqueID;\n      };\n\n      UniqueIDGeneretor.getString = function (id) {\n        if (id == null) id = UniqueIDGeneretor.lastID;\n        return \"Object#\" + id + \"\";\n      };\n\n      UniqueIDGeneretor.isPrimitive = function (arg) {\n        var type = typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg);\n        return arg == null || type != \"object\" && type != \"function\";\n      };\n\n      module.exports = UniqueIDGeneretor;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n          }\n\n          return arr2;\n        } else {\n          return Array.from(arr);\n        }\n      }\n\n      var LayoutConstants = __webpack_require__(0);\n\n      var LGraphManager = __webpack_require__(6);\n\n      var LNode = __webpack_require__(3);\n\n      var LEdge = __webpack_require__(1);\n\n      var LGraph = __webpack_require__(5);\n\n      var PointD = __webpack_require__(4);\n\n      var Transform = __webpack_require__(17);\n\n      var Emitter = __webpack_require__(27);\n\n      function Layout(isRemoteUse) {\n        Emitter.call(this); //Layout Quality: 0:draft, 1:default, 2:proof\n\n        this.layoutQuality = LayoutConstants.QUALITY; //Whether layout should create bendpoints as needed or not\n\n        this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED; //Whether layout should be incremental or not\n\n        this.incremental = LayoutConstants.DEFAULT_INCREMENTAL; //Whether we animate from before to after layout node positions\n\n        this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT; //Whether we animate the layout process or not\n\n        this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT; //Number iterations that should be done between two successive animations\n\n        this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n        /**\r\n         * Whether or not leaf nodes (non-compound nodes) are of uniform sizes. When\r\n         * they are, both spring and repulsion forces between two leaf nodes can be\r\n         * calculated without the expensive clipping point calculations, resulting\r\n         * in major speed-up.\r\n         */\n\n        this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n        /**\r\n         * This is used for creation of bendpoints by using dummy nodes and edges.\r\n         * Maps an LEdge to its dummy bendpoint path.\r\n         */\n\n        this.edgeToDummyNodes = new Map();\n        this.graphManager = new LGraphManager(this);\n        this.isLayoutFinished = false;\n        this.isSubLayout = false;\n        this.isRemoteUse = false;\n\n        if (isRemoteUse != null) {\n          this.isRemoteUse = isRemoteUse;\n        }\n      }\n\n      Layout.RANDOM_SEED = 1;\n      Layout.prototype = Object.create(Emitter.prototype);\n\n      Layout.prototype.getGraphManager = function () {\n        return this.graphManager;\n      };\n\n      Layout.prototype.getAllNodes = function () {\n        return this.graphManager.getAllNodes();\n      };\n\n      Layout.prototype.getAllEdges = function () {\n        return this.graphManager.getAllEdges();\n      };\n\n      Layout.prototype.getAllNodesToApplyGravitation = function () {\n        return this.graphManager.getAllNodesToApplyGravitation();\n      };\n\n      Layout.prototype.newGraphManager = function () {\n        var gm = new LGraphManager(this);\n        this.graphManager = gm;\n        return gm;\n      };\n\n      Layout.prototype.newGraph = function (vGraph) {\n        return new LGraph(null, this.graphManager, vGraph);\n      };\n\n      Layout.prototype.newNode = function (vNode) {\n        return new LNode(this.graphManager, vNode);\n      };\n\n      Layout.prototype.newEdge = function (vEdge) {\n        return new LEdge(null, null, vEdge);\n      };\n\n      Layout.prototype.checkLayoutSuccess = function () {\n        return this.graphManager.getRoot() == null || this.graphManager.getRoot().getNodes().length == 0 || this.graphManager.includesInvalidEdge();\n      };\n\n      Layout.prototype.runLayout = function () {\n        this.isLayoutFinished = false;\n\n        if (this.tilingPreLayout) {\n          this.tilingPreLayout();\n        }\n\n        this.initParameters();\n        var isLayoutSuccessfull;\n\n        if (this.checkLayoutSuccess()) {\n          isLayoutSuccessfull = false;\n        } else {\n          isLayoutSuccessfull = this.layout();\n        }\n\n        if (LayoutConstants.ANIMATE === 'during') {\n          // If this is a 'during' layout animation. Layout is not finished yet. \n          // We need to perform these in index.js when layout is really finished.\n          return false;\n        }\n\n        if (isLayoutSuccessfull) {\n          if (!this.isSubLayout) {\n            this.doPostLayout();\n          }\n        }\n\n        if (this.tilingPostLayout) {\n          this.tilingPostLayout();\n        }\n\n        this.isLayoutFinished = true;\n        return isLayoutSuccessfull;\n      };\n      /**\r\n       * This method performs the operations required after layout.\r\n       */\n\n\n      Layout.prototype.doPostLayout = function () {\n        //assert !isSubLayout : \"Should not be called on sub-layout!\";\n        // Propagate geometric changes to v-level objects\n        if (!this.incremental) {\n          this.transform();\n        }\n\n        this.update();\n      };\n      /**\r\n       * This method updates the geometry of the target graph according to\r\n       * calculated layout.\r\n       */\n\n\n      Layout.prototype.update2 = function () {\n        // update bend points\n        if (this.createBendsAsNeeded) {\n          this.createBendpointsFromDummyNodes(); // reset all edges, since the topology has changed\n\n          this.graphManager.resetAllEdges();\n        } // perform edge, node and root updates if layout is not called\n        // remotely\n\n\n        if (!this.isRemoteUse) {\n          // update all edges\n          var edge;\n          var allEdges = this.graphManager.getAllEdges();\n\n          for (var i = 0; i < allEdges.length; i++) {\n            edge = allEdges[i]; //      this.update(edge);\n          } // recursively update nodes\n\n\n          var node;\n          var nodes = this.graphManager.getRoot().getNodes();\n\n          for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i]; //      this.update(node);\n          } // update root graph\n\n\n          this.update(this.graphManager.getRoot());\n        }\n      };\n\n      Layout.prototype.update = function (obj) {\n        if (obj == null) {\n          this.update2();\n        } else if (obj instanceof LNode) {\n          var node = obj;\n\n          if (node.getChild() != null) {\n            // since node is compound, recursively update child nodes\n            var nodes = node.getChild().getNodes();\n\n            for (var i = 0; i < nodes.length; i++) {\n              update(nodes[i]);\n            }\n          } // if the l-level node is associated with a v-level graph object,\n          // then it is assumed that the v-level node implements the\n          // interface Updatable.\n\n\n          if (node.vGraphObject != null) {\n            // cast to Updatable without any type check\n            var vNode = node.vGraphObject; // call the update method of the interface\n\n            vNode.update(node);\n          }\n        } else if (obj instanceof LEdge) {\n          var edge = obj; // if the l-level edge is associated with a v-level graph object,\n          // then it is assumed that the v-level edge implements the\n          // interface Updatable.\n\n          if (edge.vGraphObject != null) {\n            // cast to Updatable without any type check\n            var vEdge = edge.vGraphObject; // call the update method of the interface\n\n            vEdge.update(edge);\n          }\n        } else if (obj instanceof LGraph) {\n          var graph = obj; // if the l-level graph is associated with a v-level graph object,\n          // then it is assumed that the v-level object implements the\n          // interface Updatable.\n\n          if (graph.vGraphObject != null) {\n            // cast to Updatable without any type check\n            var vGraph = graph.vGraphObject; // call the update method of the interface\n\n            vGraph.update(graph);\n          }\n        }\n      };\n      /**\r\n       * This method is used to set all layout parameters to default values\r\n       * determined at compile time.\r\n       */\n\n\n      Layout.prototype.initParameters = function () {\n        if (!this.isSubLayout) {\n          this.layoutQuality = LayoutConstants.QUALITY;\n          this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n          this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n          this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n          this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n          this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n          this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n        }\n\n        if (this.animationDuringLayout) {\n          this.animationOnLayout = false;\n        }\n      };\n\n      Layout.prototype.transform = function (newLeftTop) {\n        if (newLeftTop == undefined) {\n          this.transform(new PointD(0, 0));\n        } else {\n          // create a transformation object (from Eclipse to layout). When an\n          // inverse transform is applied, we get upper-left coordinate of the\n          // drawing or the root graph at given input coordinate (some margins\n          // already included in calculation of left-top).\n          var trans = new Transform();\n          var leftTop = this.graphManager.getRoot().updateLeftTop();\n\n          if (leftTop != null) {\n            trans.setWorldOrgX(newLeftTop.x);\n            trans.setWorldOrgY(newLeftTop.y);\n            trans.setDeviceOrgX(leftTop.x);\n            trans.setDeviceOrgY(leftTop.y);\n            var nodes = this.getAllNodes();\n            var node;\n\n            for (var i = 0; i < nodes.length; i++) {\n              node = nodes[i];\n              node.transform(trans);\n            }\n          }\n        }\n      };\n\n      Layout.prototype.positionNodesRandomly = function (graph) {\n        if (graph == undefined) {\n          //assert !this.incremental;\n          this.positionNodesRandomly(this.getGraphManager().getRoot());\n          this.getGraphManager().getRoot().updateBounds(true);\n        } else {\n          var lNode;\n          var childGraph;\n          var nodes = graph.getNodes();\n\n          for (var i = 0; i < nodes.length; i++) {\n            lNode = nodes[i];\n            childGraph = lNode.getChild();\n\n            if (childGraph == null) {\n              lNode.scatter();\n            } else if (childGraph.getNodes().length == 0) {\n              lNode.scatter();\n            } else {\n              this.positionNodesRandomly(childGraph);\n              lNode.updateBounds();\n            }\n          }\n        }\n      };\n      /**\r\n       * This method returns a list of trees where each tree is represented as a\r\n       * list of l-nodes. The method returns a list of size 0 when:\r\n       * - The graph is not flat or\r\n       * - One of the component(s) of the graph is not a tree.\r\n       */\n\n\n      Layout.prototype.getFlatForest = function () {\n        var flatForest = [];\n        var isForest = true; // Quick reference for all nodes in the graph manager associated with\n        // this layout. The list should not be changed.\n\n        var allNodes = this.graphManager.getRoot().getNodes(); // First be sure that the graph is flat\n\n        var isFlat = true;\n\n        for (var i = 0; i < allNodes.length; i++) {\n          if (allNodes[i].getChild() != null) {\n            isFlat = false;\n          }\n        } // Return empty forest if the graph is not flat.\n\n\n        if (!isFlat) {\n          return flatForest;\n        } // Run BFS for each component of the graph.\n\n\n        var visited = new Set();\n        var toBeVisited = [];\n        var parents = new Map();\n        var unProcessedNodes = [];\n        unProcessedNodes = unProcessedNodes.concat(allNodes); // Each iteration of this loop finds a component of the graph and\n        // decides whether it is a tree or not. If it is a tree, adds it to the\n        // forest and continued with the next component.\n\n        while (unProcessedNodes.length > 0 && isForest) {\n          toBeVisited.push(unProcessedNodes[0]); // Start the BFS. Each iteration of this loop visits a node in a\n          // BFS manner.\n\n          while (toBeVisited.length > 0 && isForest) {\n            //pool operation\n            var currentNode = toBeVisited[0];\n            toBeVisited.splice(0, 1);\n            visited.add(currentNode); // Traverse all neighbors of this node\n\n            var neighborEdges = currentNode.getEdges();\n\n            for (var i = 0; i < neighborEdges.length; i++) {\n              var currentNeighbor = neighborEdges[i].getOtherEnd(currentNode); // If BFS is not growing from this neighbor.\n\n              if (parents.get(currentNode) != currentNeighbor) {\n                // We haven't previously visited this neighbor.\n                if (!visited.has(currentNeighbor)) {\n                  toBeVisited.push(currentNeighbor);\n                  parents.set(currentNeighbor, currentNode);\n                } // Since we have previously visited this neighbor and\n                // this neighbor is not parent of currentNode, given\n                // graph contains a component that is not tree, hence\n                // it is not a forest.\n                else {\n                  isForest = false;\n                  break;\n                }\n              }\n            }\n          } // The graph contains a component that is not a tree. Empty\n          // previously found trees. The method will end.\n\n\n          if (!isForest) {\n            flatForest = [];\n          } // Save currently visited nodes as a tree in our forest. Reset\n          // visited and parents lists. Continue with the next component of\n          // the graph, if any.\n          else {\n            var temp = [].concat(_toConsumableArray(visited));\n            flatForest.push(temp); //flatForest = flatForest.concat(temp);\n            //unProcessedNodes.removeAll(visited);\n\n            for (var i = 0; i < temp.length; i++) {\n              var value = temp[i];\n              var index = unProcessedNodes.indexOf(value);\n\n              if (index > -1) {\n                unProcessedNodes.splice(index, 1);\n              }\n            }\n\n            visited = new Set();\n            parents = new Map();\n          }\n        }\n\n        return flatForest;\n      };\n      /**\r\n       * This method creates dummy nodes (an l-level node with minimal dimensions)\r\n       * for the given edge (one per bendpoint). The existing l-level structure\r\n       * is updated accordingly.\r\n       */\n\n\n      Layout.prototype.createDummyNodesForBendpoints = function (edge) {\n        var dummyNodes = [];\n        var prev = edge.source;\n        var graph = this.graphManager.calcLowestCommonAncestor(edge.source, edge.target);\n\n        for (var i = 0; i < edge.bendpoints.length; i++) {\n          // create new dummy node\n          var dummyNode = this.newNode(null);\n          dummyNode.setRect(new Point(0, 0), new Dimension(1, 1));\n          graph.add(dummyNode); // create new dummy edge between prev and dummy node\n\n          var dummyEdge = this.newEdge(null);\n          this.graphManager.add(dummyEdge, prev, dummyNode);\n          dummyNodes.add(dummyNode);\n          prev = dummyNode;\n        }\n\n        var dummyEdge = this.newEdge(null);\n        this.graphManager.add(dummyEdge, prev, edge.target);\n        this.edgeToDummyNodes.set(edge, dummyNodes); // remove real edge from graph manager if it is inter-graph\n\n        if (edge.isInterGraph()) {\n          this.graphManager.remove(edge);\n        } // else, remove the edge from the current graph\n        else {\n          graph.remove(edge);\n        }\n\n        return dummyNodes;\n      };\n      /**\r\n       * This method creates bendpoints for edges from the dummy nodes\r\n       * at l-level.\r\n       */\n\n\n      Layout.prototype.createBendpointsFromDummyNodes = function () {\n        var edges = [];\n        edges = edges.concat(this.graphManager.getAllEdges());\n        edges = [].concat(_toConsumableArray(this.edgeToDummyNodes.keys())).concat(edges);\n\n        for (var k = 0; k < edges.length; k++) {\n          var lEdge = edges[k];\n\n          if (lEdge.bendpoints.length > 0) {\n            var path = this.edgeToDummyNodes.get(lEdge);\n\n            for (var i = 0; i < path.length; i++) {\n              var dummyNode = path[i];\n              var p = new PointD(dummyNode.getCenterX(), dummyNode.getCenterY()); // update bendpoint's location according to dummy node\n\n              var ebp = lEdge.bendpoints.get(i);\n              ebp.x = p.x;\n              ebp.y = p.y; // remove the dummy node, dummy edges incident with this\n              // dummy node is also removed (within the remove method)\n\n              dummyNode.getOwner().remove(dummyNode);\n            } // add the real edge to graph\n\n\n            this.graphManager.add(lEdge, lEdge.source, lEdge.target);\n          }\n        }\n      };\n\n      Layout.transform = function (sliderValue, defaultValue, minDiv, maxMul) {\n        if (minDiv != undefined && maxMul != undefined) {\n          var value = defaultValue;\n\n          if (sliderValue <= 50) {\n            var minValue = defaultValue / minDiv;\n            value -= (defaultValue - minValue) / 50 * (50 - sliderValue);\n          } else {\n            var maxValue = defaultValue * maxMul;\n            value += (maxValue - defaultValue) / 50 * (sliderValue - 50);\n          }\n\n          return value;\n        } else {\n          var a, b;\n\n          if (sliderValue <= 50) {\n            a = 9.0 * defaultValue / 500.0;\n            b = defaultValue / 10.0;\n          } else {\n            a = 9.0 * defaultValue / 50.0;\n            b = -8 * defaultValue;\n          }\n\n          return a * sliderValue + b;\n        }\n      };\n      /**\r\n       * This method finds and returns the center of the given nodes, assuming\r\n       * that the given nodes form a tree in themselves.\r\n       */\n\n\n      Layout.findCenterOfTree = function (nodes) {\n        var list = [];\n        list = list.concat(nodes);\n        var removedNodes = [];\n        var remainingDegrees = new Map();\n        var foundCenter = false;\n        var centerNode = null;\n\n        if (list.length == 1 || list.length == 2) {\n          foundCenter = true;\n          centerNode = list[0];\n        }\n\n        for (var i = 0; i < list.length; i++) {\n          var node = list[i];\n          var degree = node.getNeighborsList().size;\n          remainingDegrees.set(node, node.getNeighborsList().size);\n\n          if (degree == 1) {\n            removedNodes.push(node);\n          }\n        }\n\n        var tempList = [];\n        tempList = tempList.concat(removedNodes);\n\n        while (!foundCenter) {\n          var tempList2 = [];\n          tempList2 = tempList2.concat(tempList);\n          tempList = [];\n\n          for (var i = 0; i < list.length; i++) {\n            var node = list[i];\n            var index = list.indexOf(node);\n\n            if (index >= 0) {\n              list.splice(index, 1);\n            }\n\n            var neighbours = node.getNeighborsList();\n            neighbours.forEach(function (neighbour) {\n              if (removedNodes.indexOf(neighbour) < 0) {\n                var otherDegree = remainingDegrees.get(neighbour);\n                var newDegree = otherDegree - 1;\n\n                if (newDegree == 1) {\n                  tempList.push(neighbour);\n                }\n\n                remainingDegrees.set(neighbour, newDegree);\n              }\n            });\n          }\n\n          removedNodes = removedNodes.concat(tempList);\n\n          if (list.length == 1 || list.length == 2) {\n            foundCenter = true;\n            centerNode = list[0];\n          }\n        }\n\n        return centerNode;\n      };\n      /**\r\n       * During the coarsening process, this layout may be referenced by two graph managers\r\n       * this setter function grants access to change the currently being used graph manager\r\n       */\n\n\n      Layout.prototype.setGraphManager = function (gm) {\n        this.graphManager = gm;\n      };\n\n      module.exports = Layout;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function RandomSeed() {} // adapted from: https://stackoverflow.com/a/19303725\n\n\n      RandomSeed.seed = 1;\n      RandomSeed.x = 0;\n\n      RandomSeed.nextDouble = function () {\n        RandomSeed.x = Math.sin(RandomSeed.seed++) * 10000;\n        return RandomSeed.x - Math.floor(RandomSeed.x);\n      };\n\n      module.exports = RandomSeed;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var PointD = __webpack_require__(4);\n\n      function Transform(x, y) {\n        this.lworldOrgX = 0.0;\n        this.lworldOrgY = 0.0;\n        this.ldeviceOrgX = 0.0;\n        this.ldeviceOrgY = 0.0;\n        this.lworldExtX = 1.0;\n        this.lworldExtY = 1.0;\n        this.ldeviceExtX = 1.0;\n        this.ldeviceExtY = 1.0;\n      }\n\n      Transform.prototype.getWorldOrgX = function () {\n        return this.lworldOrgX;\n      };\n\n      Transform.prototype.setWorldOrgX = function (wox) {\n        this.lworldOrgX = wox;\n      };\n\n      Transform.prototype.getWorldOrgY = function () {\n        return this.lworldOrgY;\n      };\n\n      Transform.prototype.setWorldOrgY = function (woy) {\n        this.lworldOrgY = woy;\n      };\n\n      Transform.prototype.getWorldExtX = function () {\n        return this.lworldExtX;\n      };\n\n      Transform.prototype.setWorldExtX = function (wex) {\n        this.lworldExtX = wex;\n      };\n\n      Transform.prototype.getWorldExtY = function () {\n        return this.lworldExtY;\n      };\n\n      Transform.prototype.setWorldExtY = function (wey) {\n        this.lworldExtY = wey;\n      };\n      /* Device related */\n\n\n      Transform.prototype.getDeviceOrgX = function () {\n        return this.ldeviceOrgX;\n      };\n\n      Transform.prototype.setDeviceOrgX = function (dox) {\n        this.ldeviceOrgX = dox;\n      };\n\n      Transform.prototype.getDeviceOrgY = function () {\n        return this.ldeviceOrgY;\n      };\n\n      Transform.prototype.setDeviceOrgY = function (doy) {\n        this.ldeviceOrgY = doy;\n      };\n\n      Transform.prototype.getDeviceExtX = function () {\n        return this.ldeviceExtX;\n      };\n\n      Transform.prototype.setDeviceExtX = function (dex) {\n        this.ldeviceExtX = dex;\n      };\n\n      Transform.prototype.getDeviceExtY = function () {\n        return this.ldeviceExtY;\n      };\n\n      Transform.prototype.setDeviceExtY = function (dey) {\n        this.ldeviceExtY = dey;\n      };\n\n      Transform.prototype.transformX = function (x) {\n        var xDevice = 0.0;\n        var worldExtX = this.lworldExtX;\n\n        if (worldExtX != 0.0) {\n          xDevice = this.ldeviceOrgX + (x - this.lworldOrgX) * this.ldeviceExtX / worldExtX;\n        }\n\n        return xDevice;\n      };\n\n      Transform.prototype.transformY = function (y) {\n        var yDevice = 0.0;\n        var worldExtY = this.lworldExtY;\n\n        if (worldExtY != 0.0) {\n          yDevice = this.ldeviceOrgY + (y - this.lworldOrgY) * this.ldeviceExtY / worldExtY;\n        }\n\n        return yDevice;\n      };\n\n      Transform.prototype.inverseTransformX = function (x) {\n        var xWorld = 0.0;\n        var deviceExtX = this.ldeviceExtX;\n\n        if (deviceExtX != 0.0) {\n          xWorld = this.lworldOrgX + (x - this.ldeviceOrgX) * this.lworldExtX / deviceExtX;\n        }\n\n        return xWorld;\n      };\n\n      Transform.prototype.inverseTransformY = function (y) {\n        var yWorld = 0.0;\n        var deviceExtY = this.ldeviceExtY;\n\n        if (deviceExtY != 0.0) {\n          yWorld = this.lworldOrgY + (y - this.ldeviceOrgY) * this.lworldExtY / deviceExtY;\n        }\n\n        return yWorld;\n      };\n\n      Transform.prototype.inverseTransformPoint = function (inPoint) {\n        var outPoint = new PointD(this.inverseTransformX(inPoint.x), this.inverseTransformY(inPoint.y));\n        return outPoint;\n      };\n\n      module.exports = Transform;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _toConsumableArray(arr) {\n        if (Array.isArray(arr)) {\n          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n          }\n\n          return arr2;\n        } else {\n          return Array.from(arr);\n        }\n      }\n\n      var Layout = __webpack_require__(15);\n\n      var FDLayoutConstants = __webpack_require__(7);\n\n      var LayoutConstants = __webpack_require__(0);\n\n      var IGeometry = __webpack_require__(8);\n\n      var IMath = __webpack_require__(9);\n\n      function FDLayout() {\n        Layout.call(this);\n        this.useSmartIdealEdgeLengthCalculation = FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n        this.idealEdgeLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n        this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n        this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n        this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n        this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n        this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n        this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n        this.displacementThresholdPerNode = 3.0 * FDLayoutConstants.DEFAULT_EDGE_LENGTH / 100;\n        this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n        this.initialCoolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n        this.totalDisplacement = 0.0;\n        this.oldTotalDisplacement = 0.0;\n        this.maxIterations = FDLayoutConstants.MAX_ITERATIONS;\n      }\n\n      FDLayout.prototype = Object.create(Layout.prototype);\n\n      for (var prop in Layout) {\n        FDLayout[prop] = Layout[prop];\n      }\n\n      FDLayout.prototype.initParameters = function () {\n        Layout.prototype.initParameters.call(this, arguments);\n        this.totalIterations = 0;\n        this.notAnimatedIterations = 0;\n        this.useFRGridVariant = FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION;\n        this.grid = [];\n      };\n\n      FDLayout.prototype.calcIdealEdgeLengths = function () {\n        var edge;\n        var lcaDepth;\n        var source;\n        var target;\n        var sizeOfSourceInLca;\n        var sizeOfTargetInLca;\n        var allEdges = this.getGraphManager().getAllEdges();\n\n        for (var i = 0; i < allEdges.length; i++) {\n          edge = allEdges[i];\n          edge.idealLength = this.idealEdgeLength;\n\n          if (edge.isInterGraph) {\n            source = edge.getSource();\n            target = edge.getTarget();\n            sizeOfSourceInLca = edge.getSourceInLca().getEstimatedSize();\n            sizeOfTargetInLca = edge.getTargetInLca().getEstimatedSize();\n\n            if (this.useSmartIdealEdgeLengthCalculation) {\n              edge.idealLength += sizeOfSourceInLca + sizeOfTargetInLca - 2 * LayoutConstants.SIMPLE_NODE_SIZE;\n            }\n\n            lcaDepth = edge.getLca().getInclusionTreeDepth();\n            edge.idealLength += FDLayoutConstants.DEFAULT_EDGE_LENGTH * FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR * (source.getInclusionTreeDepth() + target.getInclusionTreeDepth() - 2 * lcaDepth);\n          }\n        }\n      };\n\n      FDLayout.prototype.initSpringEmbedder = function () {\n        var s = this.getAllNodes().length;\n\n        if (this.incremental) {\n          if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n            this.coolingFactor = Math.max(this.coolingFactor * FDLayoutConstants.COOLING_ADAPTATION_FACTOR, this.coolingFactor - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * this.coolingFactor * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n          }\n\n          this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL;\n        } else {\n          if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n            this.coolingFactor = Math.max(FDLayoutConstants.COOLING_ADAPTATION_FACTOR, 1.0 - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n          } else {\n            this.coolingFactor = 1.0;\n          }\n\n          this.initialCoolingFactor = this.coolingFactor;\n          this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT;\n        }\n\n        this.maxIterations = Math.max(this.getAllNodes().length * 5, this.maxIterations);\n        this.totalDisplacementThreshold = this.displacementThresholdPerNode * this.getAllNodes().length;\n        this.repulsionRange = this.calcRepulsionRange();\n      };\n\n      FDLayout.prototype.calcSpringForces = function () {\n        var lEdges = this.getAllEdges();\n        var edge;\n\n        for (var i = 0; i < lEdges.length; i++) {\n          edge = lEdges[i];\n          this.calcSpringForce(edge, edge.idealLength);\n        }\n      };\n\n      FDLayout.prototype.calcRepulsionForces = function () {\n        var gridUpdateAllowed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var forceToNodeSurroundingUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var i, j;\n        var nodeA, nodeB;\n        var lNodes = this.getAllNodes();\n        var processedNodeSet;\n\n        if (this.useFRGridVariant) {\n          if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed) {\n            this.updateGrid();\n          }\n\n          processedNodeSet = new Set(); // calculate repulsion forces between each nodes and its surrounding\n\n          for (i = 0; i < lNodes.length; i++) {\n            nodeA = lNodes[i];\n            this.calculateRepulsionForceOfANode(nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate);\n            processedNodeSet.add(nodeA);\n          }\n        } else {\n          for (i = 0; i < lNodes.length; i++) {\n            nodeA = lNodes[i];\n\n            for (j = i + 1; j < lNodes.length; j++) {\n              nodeB = lNodes[j]; // If both nodes are not members of the same graph, skip.\n\n              if (nodeA.getOwner() != nodeB.getOwner()) {\n                continue;\n              }\n\n              this.calcRepulsionForce(nodeA, nodeB);\n            }\n          }\n        }\n      };\n\n      FDLayout.prototype.calcGravitationalForces = function () {\n        var node;\n        var lNodes = this.getAllNodesToApplyGravitation();\n\n        for (var i = 0; i < lNodes.length; i++) {\n          node = lNodes[i];\n          this.calcGravitationalForce(node);\n        }\n      };\n\n      FDLayout.prototype.moveNodes = function () {\n        var lNodes = this.getAllNodes();\n        var node;\n\n        for (var i = 0; i < lNodes.length; i++) {\n          node = lNodes[i];\n          node.move();\n        }\n      };\n\n      FDLayout.prototype.calcSpringForce = function (edge, idealLength) {\n        var sourceNode = edge.getSource();\n        var targetNode = edge.getTarget();\n        var length;\n        var springForce;\n        var springForceX;\n        var springForceY; // Update edge length\n\n        if (this.uniformLeafNodeSizes && sourceNode.getChild() == null && targetNode.getChild() == null) {\n          edge.updateLengthSimple();\n        } else {\n          edge.updateLength();\n\n          if (edge.isOverlapingSourceAndTarget) {\n            return;\n          }\n        }\n\n        length = edge.getLength();\n        if (length == 0) return; // Calculate spring forces\n\n        springForce = this.springConstant * (length - idealLength); // Project force onto x and y axes\n\n        springForceX = springForce * (edge.lengthX / length);\n        springForceY = springForce * (edge.lengthY / length); // Apply forces on the end nodes\n\n        sourceNode.springForceX += springForceX;\n        sourceNode.springForceY += springForceY;\n        targetNode.springForceX -= springForceX;\n        targetNode.springForceY -= springForceY;\n      };\n\n      FDLayout.prototype.calcRepulsionForce = function (nodeA, nodeB) {\n        var rectA = nodeA.getRect();\n        var rectB = nodeB.getRect();\n        var overlapAmount = new Array(2);\n        var clipPoints = new Array(4);\n        var distanceX;\n        var distanceY;\n        var distanceSquared;\n        var distance;\n        var repulsionForce;\n        var repulsionForceX;\n        var repulsionForceY;\n\n        if (rectA.intersects(rectB)) // two nodes overlap\n          {\n            // calculate separation amount in x and y directions\n            IGeometry.calcSeparationAmount(rectA, rectB, overlapAmount, FDLayoutConstants.DEFAULT_EDGE_LENGTH / 2.0);\n            repulsionForceX = 2 * overlapAmount[0];\n            repulsionForceY = 2 * overlapAmount[1];\n            var childrenConstant = nodeA.noOfChildren * nodeB.noOfChildren / (nodeA.noOfChildren + nodeB.noOfChildren); // Apply forces on the two nodes\n\n            nodeA.repulsionForceX -= childrenConstant * repulsionForceX;\n            nodeA.repulsionForceY -= childrenConstant * repulsionForceY;\n            nodeB.repulsionForceX += childrenConstant * repulsionForceX;\n            nodeB.repulsionForceY += childrenConstant * repulsionForceY;\n          } else // no overlap\n          {\n            // calculate distance\n            if (this.uniformLeafNodeSizes && nodeA.getChild() == null && nodeB.getChild() == null) // simply base repulsion on distance of node centers\n              {\n                distanceX = rectB.getCenterX() - rectA.getCenterX();\n                distanceY = rectB.getCenterY() - rectA.getCenterY();\n              } else // use clipping points\n              {\n                IGeometry.getIntersection(rectA, rectB, clipPoints);\n                distanceX = clipPoints[2] - clipPoints[0];\n                distanceY = clipPoints[3] - clipPoints[1];\n              } // No repulsion range. FR grid variant should take care of this.\n\n\n            if (Math.abs(distanceX) < FDLayoutConstants.MIN_REPULSION_DIST) {\n              distanceX = IMath.sign(distanceX) * FDLayoutConstants.MIN_REPULSION_DIST;\n            }\n\n            if (Math.abs(distanceY) < FDLayoutConstants.MIN_REPULSION_DIST) {\n              distanceY = IMath.sign(distanceY) * FDLayoutConstants.MIN_REPULSION_DIST;\n            }\n\n            distanceSquared = distanceX * distanceX + distanceY * distanceY;\n            distance = Math.sqrt(distanceSquared);\n            repulsionForce = this.repulsionConstant * nodeA.noOfChildren * nodeB.noOfChildren / distanceSquared; // Project force onto x and y axes\n\n            repulsionForceX = repulsionForce * distanceX / distance;\n            repulsionForceY = repulsionForce * distanceY / distance; // Apply forces on the two nodes    \n\n            nodeA.repulsionForceX -= repulsionForceX;\n            nodeA.repulsionForceY -= repulsionForceY;\n            nodeB.repulsionForceX += repulsionForceX;\n            nodeB.repulsionForceY += repulsionForceY;\n          }\n      };\n\n      FDLayout.prototype.calcGravitationalForce = function (node) {\n        var ownerGraph;\n        var ownerCenterX;\n        var ownerCenterY;\n        var distanceX;\n        var distanceY;\n        var absDistanceX;\n        var absDistanceY;\n        var estimatedSize;\n        ownerGraph = node.getOwner();\n        ownerCenterX = (ownerGraph.getRight() + ownerGraph.getLeft()) / 2;\n        ownerCenterY = (ownerGraph.getTop() + ownerGraph.getBottom()) / 2;\n        distanceX = node.getCenterX() - ownerCenterX;\n        distanceY = node.getCenterY() - ownerCenterY;\n        absDistanceX = Math.abs(distanceX) + node.getWidth() / 2;\n        absDistanceY = Math.abs(distanceY) + node.getHeight() / 2;\n\n        if (node.getOwner() == this.graphManager.getRoot()) // in the root graph\n          {\n            estimatedSize = ownerGraph.getEstimatedSize() * this.gravityRangeFactor;\n\n            if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n              node.gravitationForceX = -this.gravityConstant * distanceX;\n              node.gravitationForceY = -this.gravityConstant * distanceY;\n            }\n          } else // inside a compound\n          {\n            estimatedSize = ownerGraph.getEstimatedSize() * this.compoundGravityRangeFactor;\n\n            if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n              node.gravitationForceX = -this.gravityConstant * distanceX * this.compoundGravityConstant;\n              node.gravitationForceY = -this.gravityConstant * distanceY * this.compoundGravityConstant;\n            }\n          }\n      };\n\n      FDLayout.prototype.isConverged = function () {\n        var converged;\n        var oscilating = false;\n\n        if (this.totalIterations > this.maxIterations / 3) {\n          oscilating = Math.abs(this.totalDisplacement - this.oldTotalDisplacement) < 2;\n        }\n\n        converged = this.totalDisplacement < this.totalDisplacementThreshold;\n        this.oldTotalDisplacement = this.totalDisplacement;\n        return converged || oscilating;\n      };\n\n      FDLayout.prototype.animate = function () {\n        if (this.animationDuringLayout && !this.isSubLayout) {\n          if (this.notAnimatedIterations == this.animationPeriod) {\n            this.update();\n            this.notAnimatedIterations = 0;\n          } else {\n            this.notAnimatedIterations++;\n          }\n        }\n      }; //This method calculates the number of children (weight) for all nodes\n\n\n      FDLayout.prototype.calcNoOfChildrenForAllNodes = function () {\n        var node;\n        var allNodes = this.graphManager.getAllNodes();\n\n        for (var i = 0; i < allNodes.length; i++) {\n          node = allNodes[i];\n          node.noOfChildren = node.getNoOfChildren();\n        }\n      }; // -----------------------------------------------------------------------------\n      // Section: FR-Grid Variant Repulsion Force Calculation\n      // -----------------------------------------------------------------------------\n\n\n      FDLayout.prototype.calcGrid = function (graph) {\n        var sizeX = 0;\n        var sizeY = 0;\n        sizeX = parseInt(Math.ceil((graph.getRight() - graph.getLeft()) / this.repulsionRange));\n        sizeY = parseInt(Math.ceil((graph.getBottom() - graph.getTop()) / this.repulsionRange));\n        var grid = new Array(sizeX);\n\n        for (var i = 0; i < sizeX; i++) {\n          grid[i] = new Array(sizeY);\n        }\n\n        for (var i = 0; i < sizeX; i++) {\n          for (var j = 0; j < sizeY; j++) {\n            grid[i][j] = new Array();\n          }\n        }\n\n        return grid;\n      };\n\n      FDLayout.prototype.addNodeToGrid = function (v, left, top) {\n        var startX = 0;\n        var finishX = 0;\n        var startY = 0;\n        var finishY = 0;\n        startX = parseInt(Math.floor((v.getRect().x - left) / this.repulsionRange));\n        finishX = parseInt(Math.floor((v.getRect().width + v.getRect().x - left) / this.repulsionRange));\n        startY = parseInt(Math.floor((v.getRect().y - top) / this.repulsionRange));\n        finishY = parseInt(Math.floor((v.getRect().height + v.getRect().y - top) / this.repulsionRange));\n\n        for (var i = startX; i <= finishX; i++) {\n          for (var j = startY; j <= finishY; j++) {\n            this.grid[i][j].push(v);\n            v.setGridCoordinates(startX, finishX, startY, finishY);\n          }\n        }\n      };\n\n      FDLayout.prototype.updateGrid = function () {\n        var i;\n        var nodeA;\n        var lNodes = this.getAllNodes();\n        this.grid = this.calcGrid(this.graphManager.getRoot()); // put all nodes to proper grid cells\n\n        for (i = 0; i < lNodes.length; i++) {\n          nodeA = lNodes[i];\n          this.addNodeToGrid(nodeA, this.graphManager.getRoot().getLeft(), this.graphManager.getRoot().getTop());\n        }\n      };\n\n      FDLayout.prototype.calculateRepulsionForceOfANode = function (nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate) {\n        if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed || forceToNodeSurroundingUpdate) {\n          var surrounding = new Set();\n          nodeA.surrounding = new Array();\n          var nodeB;\n          var grid = this.grid;\n\n          for (var i = nodeA.startX - 1; i < nodeA.finishX + 2; i++) {\n            for (var j = nodeA.startY - 1; j < nodeA.finishY + 2; j++) {\n              if (!(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length)) {\n                for (var k = 0; k < grid[i][j].length; k++) {\n                  nodeB = grid[i][j][k]; // If both nodes are not members of the same graph, \n                  // or both nodes are the same, skip.\n\n                  if (nodeA.getOwner() != nodeB.getOwner() || nodeA == nodeB) {\n                    continue;\n                  } // check if the repulsion force between\n                  // nodeA and nodeB has already been calculated\n\n\n                  if (!processedNodeSet.has(nodeB) && !surrounding.has(nodeB)) {\n                    var distanceX = Math.abs(nodeA.getCenterX() - nodeB.getCenterX()) - (nodeA.getWidth() / 2 + nodeB.getWidth() / 2);\n                    var distanceY = Math.abs(nodeA.getCenterY() - nodeB.getCenterY()) - (nodeA.getHeight() / 2 + nodeB.getHeight() / 2); // if the distance between nodeA and nodeB \n                    // is less then calculation range\n\n                    if (distanceX <= this.repulsionRange && distanceY <= this.repulsionRange) {\n                      //then add nodeB to surrounding of nodeA\n                      surrounding.add(nodeB);\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          nodeA.surrounding = [].concat(_toConsumableArray(surrounding));\n        }\n\n        for (i = 0; i < nodeA.surrounding.length; i++) {\n          this.calcRepulsionForce(nodeA, nodeA.surrounding[i]);\n        }\n      };\n\n      FDLayout.prototype.calcRepulsionRange = function () {\n        return 0.0;\n      };\n\n      module.exports = FDLayout;\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LEdge = __webpack_require__(1);\n\n      var FDLayoutConstants = __webpack_require__(7);\n\n      function FDLayoutEdge(source, target, vEdge) {\n        LEdge.call(this, source, target, vEdge);\n        this.idealLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n      }\n\n      FDLayoutEdge.prototype = Object.create(LEdge.prototype);\n\n      for (var prop in LEdge) {\n        FDLayoutEdge[prop] = LEdge[prop];\n      }\n\n      module.exports = FDLayoutEdge;\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var LNode = __webpack_require__(3);\n\n      function FDLayoutNode(gm, loc, size, vNode) {\n        // alternative constructor is handled inside LNode\n        LNode.call(this, gm, loc, size, vNode); //Spring, repulsion and gravitational forces acting on this node\n\n        this.springForceX = 0;\n        this.springForceY = 0;\n        this.repulsionForceX = 0;\n        this.repulsionForceY = 0;\n        this.gravitationForceX = 0;\n        this.gravitationForceY = 0; //Amount by which this node is to be moved in this iteration\n\n        this.displacementX = 0;\n        this.displacementY = 0; //Start and finish grid coordinates that this node is fallen into\n\n        this.startX = 0;\n        this.finishX = 0;\n        this.startY = 0;\n        this.finishY = 0; //Geometric neighbors of this node\n\n        this.surrounding = [];\n      }\n\n      FDLayoutNode.prototype = Object.create(LNode.prototype);\n\n      for (var prop in LNode) {\n        FDLayoutNode[prop] = LNode[prop];\n      }\n\n      FDLayoutNode.prototype.setGridCoordinates = function (_startX, _finishX, _startY, _finishY) {\n        this.startX = _startX;\n        this.finishX = _finishX;\n        this.startY = _startY;\n        this.finishY = _finishY;\n      };\n\n      module.exports = FDLayoutNode;\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function DimensionD(width, height) {\n        this.width = 0;\n        this.height = 0;\n\n        if (width !== null && height !== null) {\n          this.height = height;\n          this.width = width;\n        }\n      }\n\n      DimensionD.prototype.getWidth = function () {\n        return this.width;\n      };\n\n      DimensionD.prototype.setWidth = function (width) {\n        this.width = width;\n      };\n\n      DimensionD.prototype.getHeight = function () {\n        return this.height;\n      };\n\n      DimensionD.prototype.setHeight = function (height) {\n        this.height = height;\n      };\n\n      module.exports = DimensionD;\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var UniqueIDGeneretor = __webpack_require__(14);\n\n      function HashMap() {\n        this.map = {};\n        this.keys = [];\n      }\n\n      HashMap.prototype.put = function (key, value) {\n        var theId = UniqueIDGeneretor.createID(key);\n\n        if (!this.contains(theId)) {\n          this.map[theId] = value;\n          this.keys.push(key);\n        }\n      };\n\n      HashMap.prototype.contains = function (key) {\n        var theId = UniqueIDGeneretor.createID(key);\n        return this.map[key] != null;\n      };\n\n      HashMap.prototype.get = function (key) {\n        var theId = UniqueIDGeneretor.createID(key);\n        return this.map[theId];\n      };\n\n      HashMap.prototype.keySet = function () {\n        return this.keys;\n      };\n\n      module.exports = HashMap;\n      /***/\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var UniqueIDGeneretor = __webpack_require__(14);\n\n      function HashSet() {\n        this.set = {};\n      }\n\n      ;\n\n      HashSet.prototype.add = function (obj) {\n        var theId = UniqueIDGeneretor.createID(obj);\n        if (!this.contains(theId)) this.set[theId] = obj;\n      };\n\n      HashSet.prototype.remove = function (obj) {\n        delete this.set[UniqueIDGeneretor.createID(obj)];\n      };\n\n      HashSet.prototype.clear = function () {\n        this.set = {};\n      };\n\n      HashSet.prototype.contains = function (obj) {\n        return this.set[UniqueIDGeneretor.createID(obj)] == obj;\n      };\n\n      HashSet.prototype.isEmpty = function () {\n        return this.size() === 0;\n      };\n\n      HashSet.prototype.size = function () {\n        return Object.keys(this.set).length;\n      }; //concats this.set to the given list\n\n\n      HashSet.prototype.addAllTo = function (list) {\n        var keys = Object.keys(this.set);\n        var length = keys.length;\n\n        for (var i = 0; i < length; i++) {\n          list.push(this.set[keys[i]]);\n        }\n      };\n\n      HashSet.prototype.size = function () {\n        return Object.keys(this.set).length;\n      };\n\n      HashSet.prototype.addAll = function (list) {\n        var s = list.length;\n\n        for (var i = 0; i < s; i++) {\n          var v = list[i];\n          this.add(v);\n        }\n      };\n\n      module.exports = HashSet;\n      /***/\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      /**\n       * A classic Quicksort algorithm with Hoare's partition\n       * - Works also on LinkedList objects\n       *\n       * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n       */\n\n\n      var LinkedList = __webpack_require__(11);\n\n      var Quicksort = function () {\n        function Quicksort(A, compareFunction) {\n          _classCallCheck(this, Quicksort);\n\n          if (compareFunction !== null || compareFunction !== undefined) this.compareFunction = this._defaultCompareFunction;\n          var length = void 0;\n          if (A instanceof LinkedList) length = A.size();else length = A.length;\n\n          this._quicksort(A, 0, length - 1);\n        }\n\n        _createClass(Quicksort, [{\n          key: '_quicksort',\n          value: function _quicksort(A, p, r) {\n            if (p < r) {\n              var q = this._partition(A, p, r);\n\n              this._quicksort(A, p, q);\n\n              this._quicksort(A, q + 1, r);\n            }\n          }\n        }, {\n          key: '_partition',\n          value: function _partition(A, p, r) {\n            var x = this._get(A, p);\n\n            var i = p;\n            var j = r;\n\n            while (true) {\n              while (this.compareFunction(x, this._get(A, j))) {\n                j--;\n              }\n\n              while (this.compareFunction(this._get(A, i), x)) {\n                i++;\n              }\n\n              if (i < j) {\n                this._swap(A, i, j);\n\n                i++;\n                j--;\n              } else return j;\n            }\n          }\n        }, {\n          key: '_get',\n          value: function _get(object, index) {\n            if (object instanceof LinkedList) return object.get_object_at(index);else return object[index];\n          }\n        }, {\n          key: '_set',\n          value: function _set(object, index, value) {\n            if (object instanceof LinkedList) object.set_object_at(index, value);else object[index] = value;\n          }\n        }, {\n          key: '_swap',\n          value: function _swap(A, i, j) {\n            var temp = this._get(A, i);\n\n            this._set(A, i, this._get(A, j));\n\n            this._set(A, j, temp);\n          }\n        }, {\n          key: '_defaultCompareFunction',\n          value: function _defaultCompareFunction(a, b) {\n            return b > a;\n          }\n        }]);\n\n        return Quicksort;\n      }();\n\n      module.exports = Quicksort;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n      /**\n       *   Needleman-Wunsch algorithm is an procedure to compute the optimal global alignment of two string\n       *   sequences by S.B.Needleman and C.D.Wunsch (1970).\n       *\n       *   Aside from the inputs, you can assign the scores for,\n       *   - Match: The two characters at the current index are same.\n       *   - Mismatch: The two characters at the current index are different.\n       *   - Insertion/Deletion(gaps): The best alignment involves one letter aligning to a gap in the other string.\n       */\n\n\n      var NeedlemanWunsch = function () {\n        function NeedlemanWunsch(sequence1, sequence2) {\n          var match_score = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n          var mismatch_penalty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n          var gap_penalty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n\n          _classCallCheck(this, NeedlemanWunsch);\n\n          this.sequence1 = sequence1;\n          this.sequence2 = sequence2;\n          this.match_score = match_score;\n          this.mismatch_penalty = mismatch_penalty;\n          this.gap_penalty = gap_penalty; // Just the remove redundancy\n\n          this.iMax = sequence1.length + 1;\n          this.jMax = sequence2.length + 1; // Grid matrix of scores\n\n          this.grid = new Array(this.iMax);\n\n          for (var i = 0; i < this.iMax; i++) {\n            this.grid[i] = new Array(this.jMax);\n\n            for (var j = 0; j < this.jMax; j++) {\n              this.grid[i][j] = 0;\n            }\n          } // Traceback matrix (2D array, each cell is an array of boolean values for [`Diag`, `Up`, `Left`] positions)\n\n\n          this.tracebackGrid = new Array(this.iMax);\n\n          for (var _i = 0; _i < this.iMax; _i++) {\n            this.tracebackGrid[_i] = new Array(this.jMax);\n\n            for (var _j = 0; _j < this.jMax; _j++) {\n              this.tracebackGrid[_i][_j] = [null, null, null];\n            }\n          } // The aligned sequences (return multiple possibilities)\n\n\n          this.alignments = []; // Final alignment score\n\n          this.score = -1; // Calculate scores and tracebacks\n\n          this.computeGrids();\n        }\n\n        _createClass(NeedlemanWunsch, [{\n          key: \"getScore\",\n          value: function getScore() {\n            return this.score;\n          }\n        }, {\n          key: \"getAlignments\",\n          value: function getAlignments() {\n            return this.alignments;\n          } // Main dynamic programming procedure\n\n        }, {\n          key: \"computeGrids\",\n          value: function computeGrids() {\n            // Fill in the first row\n            for (var j = 1; j < this.jMax; j++) {\n              this.grid[0][j] = this.grid[0][j - 1] + this.gap_penalty;\n              this.tracebackGrid[0][j] = [false, false, true];\n            } // Fill in the first column\n\n\n            for (var i = 1; i < this.iMax; i++) {\n              this.grid[i][0] = this.grid[i - 1][0] + this.gap_penalty;\n              this.tracebackGrid[i][0] = [false, true, false];\n            } // Fill the rest of the grid\n\n\n            for (var _i2 = 1; _i2 < this.iMax; _i2++) {\n              for (var _j2 = 1; _j2 < this.jMax; _j2++) {\n                // Find the max score(s) among [`Diag`, `Up`, `Left`]\n                var diag = void 0;\n                if (this.sequence1[_i2 - 1] === this.sequence2[_j2 - 1]) diag = this.grid[_i2 - 1][_j2 - 1] + this.match_score;else diag = this.grid[_i2 - 1][_j2 - 1] + this.mismatch_penalty;\n                var up = this.grid[_i2 - 1][_j2] + this.gap_penalty;\n                var left = this.grid[_i2][_j2 - 1] + this.gap_penalty; // If there exists multiple max values, capture them for multiple paths\n\n                var maxOf = [diag, up, left];\n                var indices = this.arrayAllMaxIndexes(maxOf); // Update Grids\n\n                this.grid[_i2][_j2] = maxOf[indices[0]];\n                this.tracebackGrid[_i2][_j2] = [indices.includes(0), indices.includes(1), indices.includes(2)];\n              }\n            } // Update alignment score\n\n\n            this.score = this.grid[this.iMax - 1][this.jMax - 1];\n          } // Gets all possible valid sequence combinations\n\n        }, {\n          key: \"alignmentTraceback\",\n          value: function alignmentTraceback() {\n            var inProcessAlignments = [];\n            inProcessAlignments.push({\n              pos: [this.sequence1.length, this.sequence2.length],\n              seq1: \"\",\n              seq2: \"\"\n            });\n\n            while (inProcessAlignments[0]) {\n              var current = inProcessAlignments[0];\n              var directions = this.tracebackGrid[current.pos[0]][current.pos[1]];\n\n              if (directions[0]) {\n                inProcessAlignments.push({\n                  pos: [current.pos[0] - 1, current.pos[1] - 1],\n                  seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                  seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                });\n              }\n\n              if (directions[1]) {\n                inProcessAlignments.push({\n                  pos: [current.pos[0] - 1, current.pos[1]],\n                  seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                  seq2: '-' + current.seq2\n                });\n              }\n\n              if (directions[2]) {\n                inProcessAlignments.push({\n                  pos: [current.pos[0], current.pos[1] - 1],\n                  seq1: '-' + current.seq1,\n                  seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                });\n              }\n\n              if (current.pos[0] === 0 && current.pos[1] === 0) this.alignments.push({\n                sequence1: current.seq1,\n                sequence2: current.seq2\n              });\n              inProcessAlignments.shift();\n            }\n\n            return this.alignments;\n          } // Helper Functions\n\n        }, {\n          key: \"getAllIndexes\",\n          value: function getAllIndexes(arr, val) {\n            var indexes = [],\n                i = -1;\n\n            while ((i = arr.indexOf(val, i + 1)) !== -1) {\n              indexes.push(i);\n            }\n\n            return indexes;\n          }\n        }, {\n          key: \"arrayAllMaxIndexes\",\n          value: function arrayAllMaxIndexes(array) {\n            return this.getAllIndexes(array, Math.max.apply(null, array));\n          }\n        }]);\n\n        return NeedlemanWunsch;\n      }();\n\n      module.exports = NeedlemanWunsch;\n      /***/\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var layoutBase = function layoutBase() {\n        return;\n      };\n\n      layoutBase.FDLayout = __webpack_require__(18);\n      layoutBase.FDLayoutConstants = __webpack_require__(7);\n      layoutBase.FDLayoutEdge = __webpack_require__(19);\n      layoutBase.FDLayoutNode = __webpack_require__(20);\n      layoutBase.DimensionD = __webpack_require__(21);\n      layoutBase.HashMap = __webpack_require__(22);\n      layoutBase.HashSet = __webpack_require__(23);\n      layoutBase.IGeometry = __webpack_require__(8);\n      layoutBase.IMath = __webpack_require__(9);\n      layoutBase.Integer = __webpack_require__(10);\n      layoutBase.Point = __webpack_require__(12);\n      layoutBase.PointD = __webpack_require__(4);\n      layoutBase.RandomSeed = __webpack_require__(16);\n      layoutBase.RectangleD = __webpack_require__(13);\n      layoutBase.Transform = __webpack_require__(17);\n      layoutBase.UniqueIDGeneretor = __webpack_require__(14);\n      layoutBase.Quicksort = __webpack_require__(24);\n      layoutBase.LinkedList = __webpack_require__(11);\n      layoutBase.LGraphObject = __webpack_require__(2);\n      layoutBase.LGraph = __webpack_require__(5);\n      layoutBase.LEdge = __webpack_require__(1);\n      layoutBase.LGraphManager = __webpack_require__(6);\n      layoutBase.LNode = __webpack_require__(3);\n      layoutBase.Layout = __webpack_require__(15);\n      layoutBase.LayoutConstants = __webpack_require__(0);\n      layoutBase.NeedlemanWunsch = __webpack_require__(25);\n      module.exports = layoutBase;\n      /***/\n    },\n    /* 27 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function Emitter() {\n        this.listeners = [];\n      }\n\n      var p = Emitter.prototype;\n\n      p.addListener = function (event, callback) {\n        this.listeners.push({\n          event: event,\n          callback: callback\n        });\n      };\n\n      p.removeListener = function (event, callback) {\n        for (var i = this.listeners.length; i >= 0; i--) {\n          var l = this.listeners[i];\n\n          if (l.event === event && l.callback === callback) {\n            this.listeners.splice(i, 1);\n          }\n        }\n      };\n\n      p.emit = function (event, data) {\n        for (var i = 0; i < this.listeners.length; i++) {\n          var l = this.listeners[i];\n\n          if (event === l.event) {\n            l.callback(data);\n          }\n        }\n      };\n\n      module.exports = Emitter;\n      /***/\n    }\n    /******/\n    ])\n  );\n});","import _asyncToGenerator from \"/Users/bradkim06/blog/myBlog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"/Users/bradkim06/blog/myBlog/node_modules/@babel/runtime/regenerator\";\nimport { b as sanitizeText$1, g as getConfig, l as log } from \"./commonDb-573409be.js\";\nimport { select } from \"d3\";\nimport { s as setupGraphViewbox } from \"./utils-d622194a.js\";\nimport { c as createText } from \"./createText-1f5f8f92.js\";\nimport cytoscape from \"cytoscape/dist/cytoscape.umd.js\";\nimport coseBilkent from \"cytoscape-cose-bilkent\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"dompurify\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"lodash-es/memoize.js\";\nimport \"./mermaidAPI-3ae0f2f0.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"@khanacademy/simple-markdown\";\n\nvar parser = function () {\n  var o = function o(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v) {\n      ;\n    }\n\n    return o2;\n  },\n      $V0 = [1, 4],\n      $V1 = [1, 13],\n      $V2 = [1, 12],\n      $V3 = [1, 15],\n      $V4 = [1, 16],\n      $V5 = [1, 20],\n      $V6 = [1, 19],\n      $V7 = [6, 7, 8],\n      $V8 = [1, 26],\n      $V9 = [1, 24],\n      $Va = [1, 25],\n      $Vb = [6, 7, 11],\n      $Vc = [1, 6, 13, 15, 16, 19, 22],\n      $Vd = [1, 33],\n      $Ve = [1, 34],\n      $Vf = [1, 6, 7, 11, 13, 15, 16, 19, 22];\n\n  var parser2 = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"start\": 3,\n      \"mindMap\": 4,\n      \"spaceLines\": 5,\n      \"SPACELINE\": 6,\n      \"NL\": 7,\n      \"MINDMAP\": 8,\n      \"document\": 9,\n      \"stop\": 10,\n      \"EOF\": 11,\n      \"statement\": 12,\n      \"SPACELIST\": 13,\n      \"node\": 14,\n      \"ICON\": 15,\n      \"CLASS\": 16,\n      \"nodeWithId\": 17,\n      \"nodeWithoutId\": 18,\n      \"NODE_DSTART\": 19,\n      \"NODE_DESCR\": 20,\n      \"NODE_DEND\": 21,\n      \"NODE_ID\": 22,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      6: \"SPACELINE\",\n      7: \"NL\",\n      8: \"MINDMAP\",\n      11: \"EOF\",\n      13: \"SPACELIST\",\n      15: \"ICON\",\n      16: \"CLASS\",\n      19: \"NODE_DSTART\",\n      20: \"NODE_DESCR\",\n      21: \"NODE_DEND\",\n      22: \"NODE_ID\"\n    },\n    productions_: [0, [3, 1], [3, 2], [5, 1], [5, 2], [5, 2], [4, 2], [4, 3], [10, 1], [10, 1], [10, 1], [10, 2], [10, 2], [9, 3], [9, 2], [12, 2], [12, 2], [12, 2], [12, 1], [12, 1], [12, 1], [12, 1], [12, 1], [14, 1], [14, 1], [18, 3], [17, 1], [17, 4]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n\n      switch (yystate) {\n        case 6:\n        case 7:\n          return yy;\n\n        case 8:\n          yy.getLogger().trace(\"Stop NL \");\n          break;\n\n        case 9:\n          yy.getLogger().trace(\"Stop EOF \");\n          break;\n\n        case 11:\n          yy.getLogger().trace(\"Stop NL2 \");\n          break;\n\n        case 12:\n          yy.getLogger().trace(\"Stop EOF2 \");\n          break;\n\n        case 15:\n          yy.getLogger().info(\"Node: \", $$[$0].id);\n          yy.addNode($$[$0 - 1].length, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n\n        case 16:\n          yy.getLogger().trace(\"Icon: \", $$[$0]);\n          yy.decorateNode({\n            icon: $$[$0]\n          });\n          break;\n\n        case 17:\n        case 21:\n          yy.decorateNode({\n            class: $$[$0]\n          });\n          break;\n\n        case 18:\n          yy.getLogger().trace(\"SPACELIST\");\n          break;\n\n        case 19:\n          yy.getLogger().trace(\"Node: \", $$[$0].id);\n          yy.addNode(0, $$[$0].id, $$[$0].descr, $$[$0].type);\n          break;\n\n        case 20:\n          yy.decorateNode({\n            icon: $$[$0]\n          });\n          break;\n\n        case 25:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 2]);\n          this.$ = {\n            id: $$[$0 - 1],\n            descr: $$[$0 - 1],\n            type: yy.getType($$[$0 - 2], $$[$0])\n          };\n          break;\n\n        case 26:\n          this.$ = {\n            id: $$[$0],\n            descr: $$[$0],\n            type: yy.nodeType.DEFAULT\n          };\n          break;\n\n        case 27:\n          yy.getLogger().trace(\"node found ..\", $$[$0 - 3]);\n          this.$ = {\n            id: $$[$0 - 3],\n            descr: $$[$0 - 1],\n            type: yy.getType($$[$0 - 2], $$[$0])\n          };\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      5: 3,\n      6: [1, 5],\n      8: $V0\n    }, {\n      1: [3]\n    }, {\n      1: [2, 1]\n    }, {\n      4: 6,\n      6: [1, 7],\n      7: [1, 8],\n      8: $V0\n    }, {\n      6: $V1,\n      7: [1, 10],\n      9: 9,\n      12: 11,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, o($V7, [2, 3]), {\n      1: [2, 2]\n    }, o($V7, [2, 4]), o($V7, [2, 5]), {\n      1: [2, 6],\n      6: $V1,\n      12: 21,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, {\n      6: $V1,\n      9: 22,\n      12: 11,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, {\n      6: $V8,\n      7: $V9,\n      10: 23,\n      11: $Va\n    }, o($Vb, [2, 22], {\n      17: 17,\n      18: 18,\n      14: 27,\n      15: [1, 28],\n      16: [1, 29],\n      19: $V5,\n      22: $V6\n    }), o($Vb, [2, 18]), o($Vb, [2, 19]), o($Vb, [2, 20]), o($Vb, [2, 21]), o($Vb, [2, 23]), o($Vb, [2, 24]), o($Vb, [2, 26], {\n      19: [1, 30]\n    }), {\n      20: [1, 31]\n    }, {\n      6: $V8,\n      7: $V9,\n      10: 32,\n      11: $Va\n    }, {\n      1: [2, 7],\n      6: $V1,\n      12: 21,\n      13: $V2,\n      14: 14,\n      15: $V3,\n      16: $V4,\n      17: 17,\n      18: 18,\n      19: $V5,\n      22: $V6\n    }, o($Vc, [2, 14], {\n      7: $Vd,\n      11: $Ve\n    }), o($Vf, [2, 8]), o($Vf, [2, 9]), o($Vf, [2, 10]), o($Vb, [2, 15]), o($Vb, [2, 16]), o($Vb, [2, 17]), {\n      20: [1, 35]\n    }, {\n      21: [1, 36]\n    }, o($Vc, [2, 13], {\n      7: $Vd,\n      11: $Ve\n    }), o($Vf, [2, 11]), o($Vf, [2, 12]), {\n      21: [1, 37]\n    }, o($Vb, [2, 25]), o($Vb, [2, 27])],\n    defaultActions: {\n      2: [2, 1],\n      6: [2, 2]\n    },\n    parseError: function parseError2(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n          stack = [0],\n          tstack = [],\n          vstack = [null],\n          lstack = [],\n          table = this.table,\n          yytext = \"\",\n          yylineno = 0,\n          yyleng = 0,\n          TERROR = 2,\n          EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n\n          token = self.symbols_[token] || token;\n        }\n\n        return token;\n      }\n\n      var symbol,\n          state,\n          action,\n          r,\n          yyval = {},\n          p,\n          len,\n          newState,\n          expected;\n\n      while (true) {\n        state = stack[stack.length - 1];\n\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n\n          action = table[state] && table[state][symbol];\n        }\n\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected: expected\n          });\n        }\n\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n\n          case 3:\n            return true;\n        }\n      }\n\n      return true;\n    }\n  };\n\n  var lexer = function () {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError2(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function setInput(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function input() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function unput(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function more() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function reject() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n\n        return this;\n      },\n      // retain first n characters of the match\n      less: function less(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function pastInput() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function upcomingInput() {\n        var next = this.match;\n\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function showPosition() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function test_match(match, indexed_rule) {\n        var token, lines, backup;\n\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\n        if (this.done && this._input) {\n          this.done = false;\n        }\n\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n\n          return false;\n        }\n\n        return false;\n      },\n      // return next match in input\n      next: function next() {\n        if (this.done) {\n          return this.EOF;\n        }\n\n        if (!this._input) {\n          this.done = true;\n        }\n\n        var token, match, tempMatch, index;\n\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n\n        var rules = this._currentRules();\n\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n\n        if (match) {\n          token = this.test_match(match, rules[index]);\n\n          if (token !== false) {\n            return token;\n          }\n\n          return false;\n        }\n\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {\n        \"case-insensitive\": true\n      },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            yy.getLogger().trace(\"Found comment\", yy_.yytext);\n            return 6;\n\n          case 1:\n            return 8;\n\n          case 2:\n            this.begin(\"CLASS\");\n            break;\n\n          case 3:\n            this.popState();\n            return 16;\n\n          case 4:\n            this.popState();\n            break;\n\n          case 5:\n            yy.getLogger().trace(\"Begin icon\");\n            this.begin(\"ICON\");\n            break;\n\n          case 6:\n            yy.getLogger().trace(\"SPACELINE\");\n            return 6;\n\n          case 7:\n            return 7;\n\n          case 8:\n            return 15;\n\n          case 9:\n            yy.getLogger().trace(\"end icon\");\n            this.popState();\n            break;\n\n          case 10:\n            yy.getLogger().trace(\"Exploding node\");\n            this.begin(\"NODE\");\n            return 19;\n\n          case 11:\n            yy.getLogger().trace(\"Cloud\");\n            this.begin(\"NODE\");\n            return 19;\n\n          case 12:\n            yy.getLogger().trace(\"Explosion Bang\");\n            this.begin(\"NODE\");\n            return 19;\n\n          case 13:\n            yy.getLogger().trace(\"Cloud Bang\");\n            this.begin(\"NODE\");\n            return 19;\n\n          case 14:\n            this.begin(\"NODE\");\n            return 19;\n\n          case 15:\n            this.begin(\"NODE\");\n            return 19;\n\n          case 16:\n            this.begin(\"NODE\");\n            return 19;\n\n          case 17:\n            this.begin(\"NODE\");\n            return 19;\n\n          case 18:\n            return 13;\n\n          case 19:\n            return 22;\n\n          case 20:\n            return 11;\n\n          case 21:\n            this.begin(\"NSTR2\");\n            break;\n\n          case 22:\n            return \"NODE_DESCR\";\n\n          case 23:\n            this.popState();\n            break;\n\n          case 24:\n            yy.getLogger().trace(\"Starting NSTR\");\n            this.begin(\"NSTR\");\n            break;\n\n          case 25:\n            yy.getLogger().trace(\"description:\", yy_.yytext);\n            return \"NODE_DESCR\";\n\n          case 26:\n            this.popState();\n            break;\n\n          case 27:\n            this.popState();\n            yy.getLogger().trace(\"node end ))\");\n            return \"NODE_DEND\";\n\n          case 28:\n            this.popState();\n            yy.getLogger().trace(\"node end )\");\n            return \"NODE_DEND\";\n\n          case 29:\n            this.popState();\n            yy.getLogger().trace(\"node end ...\", yy_.yytext);\n            return \"NODE_DEND\";\n\n          case 30:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n\n          case 31:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n\n          case 32:\n            this.popState();\n            yy.getLogger().trace(\"node end (-\");\n            return \"NODE_DEND\";\n\n          case 33:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n\n          case 34:\n            this.popState();\n            yy.getLogger().trace(\"node end ((\");\n            return \"NODE_DEND\";\n\n          case 35:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n\n          case 36:\n            yy.getLogger().trace(\"Long description:\", yy_.yytext);\n            return 20;\n        }\n      },\n      rules: [/^(?:\\s*%%.*)/i, /^(?:mindmap\\b)/i, /^(?::::)/i, /^(?:.+)/i, /^(?:\\n)/i, /^(?:::icon\\()/i, /^(?:[\\s]+[\\n])/i, /^(?:[\\n]+)/i, /^(?:[^\\)]+)/i, /^(?:\\))/i, /^(?:-\\))/i, /^(?:\\(-)/i, /^(?:\\)\\))/i, /^(?:\\))/i, /^(?:\\(\\()/i, /^(?:\\{\\{)/i, /^(?:\\()/i, /^(?:\\[)/i, /^(?:[\\s]+)/i, /^(?:[^\\(\\[\\n\\-\\)\\{\\}]+)/i, /^(?:$)/i, /^(?:[\"][`])/i, /^(?:[^`\"]+)/i, /^(?:[`][\"])/i, /^(?:[\"])/i, /^(?:[^\"]+)/i, /^(?:[\"])/i, /^(?:[\\)]\\))/i, /^(?:[\\)])/i, /^(?:[\\]])/i, /^(?:\\}\\})/i, /^(?:\\(-)/i, /^(?:-\\))/i, /^(?:\\(\\()/i, /^(?:\\()/i, /^(?:[^\\)\\]\\(\\}]+)/i, /^(?:.+(?!\\(\\())/i],\n      conditions: {\n        \"CLASS\": {\n          \"rules\": [3, 4],\n          \"inclusive\": false\n        },\n        \"ICON\": {\n          \"rules\": [8, 9],\n          \"inclusive\": false\n        },\n        \"NSTR2\": {\n          \"rules\": [22, 23],\n          \"inclusive\": false\n        },\n        \"NSTR\": {\n          \"rules\": [25, 26],\n          \"inclusive\": false\n        },\n        \"NODE\": {\n          \"rules\": [21, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],\n          \"inclusive\": false\n        },\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer2;\n  }();\n\n  parser2.lexer = lexer;\n\n  function Parser() {\n    this.yy = {};\n  }\n\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\n\nparser.parser = parser;\nvar mindmapParser = parser;\n\nvar sanitizeText = function sanitizeText(text) {\n  return sanitizeText$1(text, getConfig());\n};\n\nvar nodes = [];\nvar cnt = 0;\nvar elements = {};\n\nvar clear = function clear() {\n  nodes = [];\n  cnt = 0;\n  elements = {};\n};\n\nvar getParent = function getParent(level) {\n  for (var i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].level < level) {\n      return nodes[i];\n    }\n  }\n\n  return null;\n};\n\nvar getMindmap = function getMindmap() {\n  return nodes.length > 0 ? nodes[0] : null;\n};\n\nvar addNode = function addNode(level, id, descr, type) {\n  log.info(\"addNode\", level, id, descr, type);\n  var conf = getConfig();\n  var node = {\n    id: cnt++,\n    nodeId: sanitizeText(id),\n    level: level,\n    descr: sanitizeText(descr),\n    type: type,\n    children: [],\n    width: getConfig().mindmap.maxNodeWidth\n  };\n\n  switch (node.type) {\n    case nodeType.ROUNDED_RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n\n    case nodeType.RECT:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n\n    case nodeType.HEXAGON:\n      node.padding = 2 * conf.mindmap.padding;\n      break;\n\n    default:\n      node.padding = conf.mindmap.padding;\n  }\n\n  var parent = getParent(level);\n\n  if (parent) {\n    parent.children.push(node);\n    nodes.push(node);\n  } else {\n    if (nodes.length === 0) {\n      nodes.push(node);\n    } else {\n      var error = new Error('There can be only one root. No parent could be found for (\"' + node.descr + '\")');\n      error.hash = {\n        text: \"branch \" + name,\n        token: \"branch \" + name,\n        line: \"1\",\n        loc: {\n          first_line: 1,\n          last_line: 1,\n          first_column: 1,\n          last_column: 1\n        },\n        expected: ['\"checkout ' + name + '\"']\n      };\n      throw error;\n    }\n  }\n};\n\nvar nodeType = {\n  DEFAULT: 0,\n  NO_BORDER: 0,\n  ROUNDED_RECT: 1,\n  RECT: 2,\n  CIRCLE: 3,\n  CLOUD: 4,\n  BANG: 5,\n  HEXAGON: 6\n};\n\nvar getType = function getType(startStr, endStr) {\n  log.debug(\"In get type\", startStr, endStr);\n\n  switch (startStr) {\n    case \"[\":\n      return nodeType.RECT;\n\n    case \"(\":\n      return endStr === \")\" ? nodeType.ROUNDED_RECT : nodeType.CLOUD;\n\n    case \"((\":\n      return nodeType.CIRCLE;\n\n    case \")\":\n      return nodeType.CLOUD;\n\n    case \"))\":\n      return nodeType.BANG;\n\n    case \"{{\":\n      return nodeType.HEXAGON;\n\n    default:\n      return nodeType.DEFAULT;\n  }\n};\n\nvar setElementForId = function setElementForId(id, element) {\n  elements[id] = element;\n};\n\nvar decorateNode = function decorateNode(decoration) {\n  var node = nodes[nodes.length - 1];\n\n  if (decoration && decoration.icon) {\n    node.icon = sanitizeText(decoration.icon);\n  }\n\n  if (decoration && decoration.class) {\n    node.class = sanitizeText(decoration.class);\n  }\n};\n\nvar type2Str = function type2Str(type) {\n  switch (type) {\n    case nodeType.DEFAULT:\n      return \"no-border\";\n\n    case nodeType.RECT:\n      return \"rect\";\n\n    case nodeType.ROUNDED_RECT:\n      return \"rounded-rect\";\n\n    case nodeType.CIRCLE:\n      return \"circle\";\n\n    case nodeType.CLOUD:\n      return \"cloud\";\n\n    case nodeType.BANG:\n      return \"bang\";\n\n    case nodeType.HEXAGON:\n      return \"hexgon\";\n\n    default:\n      return \"no-border\";\n  }\n};\n\nvar parseError;\n\nvar setErrorHandler = function setErrorHandler(handler) {\n  parseError = handler;\n};\n\nvar getLogger = function getLogger() {\n  return log;\n};\n\nvar getNodeById = function getNodeById(id) {\n  return nodes[id];\n};\n\nvar getElementById = function getElementById(id) {\n  return elements[id];\n};\n\nvar mindmapDb = /* @__PURE__ */Object.freeze( /* @__PURE__ */Object.defineProperty({\n  __proto__: null,\n  addNode: addNode,\n  clear: clear,\n  decorateNode: decorateNode,\n  getElementById: getElementById,\n  getLogger: getLogger,\n  getMindmap: getMindmap,\n  getNodeById: getNodeById,\n  getType: getType,\n  nodeType: nodeType,\n\n  get parseError() {\n    return parseError;\n  },\n\n  sanitizeText: sanitizeText,\n  setElementForId: setElementForId,\n  setErrorHandler: setErrorHandler,\n  type2Str: type2Str\n}, Symbol.toStringTag, {\n  value: \"Module\"\n}));\nvar MAX_SECTIONS = 12;\n\nvar defaultBkg = function defaultBkg(elem, node, section) {\n  var rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"d\", \"M0 \".concat(node.height - rd, \" v\").concat(-node.height + 2 * rd, \" q0,-5 5,-5 h\").concat(node.width - 2 * rd, \" q5,0 5,5 v\").concat(node.height - rd, \" H0 Z\"));\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\n\nvar rectBkg = function rectBkg(elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"height\", node.height).attr(\"width\", node.width);\n};\n\nvar cloudBkg = function cloudBkg(elem, node) {\n  var w = node.width;\n  var h = node.height;\n  var r1 = 0.15 * w;\n  var r2 = 0.25 * w;\n  var r3 = 0.35 * w;\n  var r4 = 0.2 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"d\", \"M0 0 a\".concat(r1, \",\").concat(r1, \" 0 0,1 \").concat(w * 0.25, \",\").concat(-1 * w * 0.1, \"\\n      a\").concat(r3, \",\").concat(r3, \" 1 0,1 \").concat(w * 0.4, \",\").concat(-1 * w * 0.1, \"\\n      a\").concat(r2, \",\").concat(r2, \" 1 0,1 \").concat(w * 0.35, \",\").concat(1 * w * 0.2, \"\\n\\n      a\").concat(r1, \",\").concat(r1, \" 1 0,1 \").concat(w * 0.15, \",\").concat(1 * h * 0.35, \"\\n      a\").concat(r4, \",\").concat(r4, \" 1 0,1 \").concat(-1 * w * 0.15, \",\").concat(1 * h * 0.65, \"\\n\\n      a\").concat(r2, \",\").concat(r1, \" 1 0,1 \").concat(-1 * w * 0.25, \",\").concat(w * 0.15, \"\\n      a\").concat(r3, \",\").concat(r3, \" 1 0,1 \").concat(-1 * w * 0.5, \",\", 0, \"\\n      a\").concat(r1, \",\").concat(r1, \" 1 0,1 \").concat(-1 * w * 0.25, \",\").concat(-1 * w * 0.15, \"\\n\\n      a\").concat(r1, \",\").concat(r1, \" 1 0,1 \").concat(-1 * w * 0.1, \",\").concat(-1 * h * 0.35, \"\\n      a\").concat(r4, \",\").concat(r4, \" 1 0,1 \").concat(w * 0.1, \",\").concat(-1 * h * 0.65, \"\\n\\n    H0 V0 Z\"));\n};\n\nvar bangBkg = function bangBkg(elem, node) {\n  var w = node.width;\n  var h = node.height;\n  var r = 0.15 * w;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"d\", \"M0 0 a\".concat(r, \",\").concat(r, \" 1 0,0 \").concat(w * 0.25, \",\").concat(-1 * h * 0.1, \"\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(w * 0.25, \",\", 0, \"\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(w * 0.25, \",\", 0, \"\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(w * 0.25, \",\").concat(1 * h * 0.1, \"\\n\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(w * 0.15, \",\").concat(1 * h * 0.33, \"\\n      a\").concat(r * 0.8, \",\").concat(r * 0.8, \" 1 0,0 \", 0, \",\").concat(1 * h * 0.34, \"\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(-1 * w * 0.15, \",\").concat(1 * h * 0.33, \"\\n\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(-1 * w * 0.25, \",\").concat(h * 0.15, \"\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(-1 * w * 0.25, \",\", 0, \"\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(-1 * w * 0.25, \",\", 0, \"\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(-1 * w * 0.25, \",\").concat(-1 * h * 0.15, \"\\n\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(-1 * w * 0.1, \",\").concat(-1 * h * 0.33, \"\\n      a\").concat(r * 0.8, \",\").concat(r * 0.8, \" 1 0,0 \", 0, \",\").concat(-1 * h * 0.34, \"\\n      a\").concat(r, \",\").concat(r, \" 1 0,0 \").concat(w * 0.1, \",\").concat(-1 * h * 0.33, \"\\n\\n    H0 V0 Z\"));\n};\n\nvar circleBkg = function circleBkg(elem, node) {\n  elem.append(\"circle\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"r\", node.width / 2);\n};\n\nfunction insertPolygonShape(parent, w, h, points, node) {\n  return parent.insert(\"polygon\", \":first-child\").attr(\"points\", points.map(function (d) {\n    return d.x + \",\" + d.y;\n  }).join(\" \")).attr(\"transform\", \"translate(\" + (node.width - w) / 2 + \", \" + h + \")\");\n}\n\nvar hexagonBkg = function hexagonBkg(elem, node) {\n  var h = node.height;\n  var f = 4;\n  var m = h / f;\n  var w = node.width - node.padding + 2 * m;\n  var points = [{\n    x: m,\n    y: 0\n  }, {\n    x: w - m,\n    y: 0\n  }, {\n    x: w,\n    y: -h / 2\n  }, {\n    x: w - m,\n    y: -h\n  }, {\n    x: m,\n    y: -h\n  }, {\n    x: 0,\n    y: -h / 2\n  }];\n  insertPolygonShape(elem, w, h, points, node);\n};\n\nvar roundedRectBkg = function roundedRectBkg(elem, node) {\n  elem.append(\"rect\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + type2Str(node.type)).attr(\"height\", node.height).attr(\"rx\", node.padding).attr(\"ry\", node.padding).attr(\"width\", node.width);\n};\n\nvar drawNode = function drawNode(elem, node, fullSection, conf) {\n  var htmlLabels = conf.htmlLabels;\n  var section = fullSection % (MAX_SECTIONS - 1);\n  var nodeElem = elem.append(\"g\");\n  node.section = section;\n  var sectionClass = \"section-\" + section;\n\n  if (section < 0) {\n    sectionClass += \" section-root\";\n  }\n\n  nodeElem.attr(\"class\", (node.class ? node.class + \" \" : \"\") + \"mindmap-node \" + sectionClass);\n  var bkgElem = nodeElem.append(\"g\");\n  var textElem = nodeElem.append(\"g\");\n  var description = node.descr.replace(/(<br\\/*>)/g, \"\\n\");\n  createText(textElem, description, {\n    useHtmlLabels: htmlLabels,\n    width: node.width,\n    classes: \"mindmap-node-label\"\n  });\n\n  if (!htmlLabels) {\n    textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n  }\n\n  var bbox = textElem.node().getBBox();\n  var fontSize = conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.width = bbox.width + 2 * node.padding;\n\n  if (node.icon) {\n    if (node.type === nodeType.CIRCLE) {\n      node.height += 50;\n      node.width += 50;\n      var icon = nodeElem.append(\"foreignObject\").attr(\"height\", \"50px\").attr(\"width\", node.width).attr(\"style\", \"text-align: center;\");\n      icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n      textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + (node.height / 2 - 1.5 * node.padding) + \")\");\n    } else {\n      node.width += 50;\n      var orgHeight = node.height;\n      node.height = Math.max(orgHeight, 60);\n      var heightDiff = Math.abs(node.height - orgHeight);\n\n      var _icon = nodeElem.append(\"foreignObject\").attr(\"width\", \"60px\").attr(\"height\", node.height).attr(\"style\", \"text-align: center;margin-top:\" + heightDiff / 2 + \"px;\");\n\n      _icon.append(\"div\").attr(\"class\", \"icon-container\").append(\"i\").attr(\"class\", \"node-icon-\" + section + \" \" + node.icon);\n\n      textElem.attr(\"transform\", \"translate(\" + (25 + node.width / 2) + \", \" + (heightDiff / 2 + node.padding / 2) + \")\");\n    }\n  } else {\n    if (!htmlLabels) {\n      var dx = node.width / 2;\n      var dy = node.padding / 2;\n      textElem.attr(\"transform\", \"translate(\" + dx + \", \" + dy + \")\");\n    } else {\n      var _dx = (node.width - bbox.width) / 2;\n\n      var _dy = (node.height - bbox.height) / 2;\n\n      textElem.attr(\"transform\", \"translate(\" + _dx + \", \" + _dy + \")\");\n    }\n  }\n\n  switch (node.type) {\n    case nodeType.DEFAULT:\n      defaultBkg(bkgElem, node, section);\n      break;\n\n    case nodeType.ROUNDED_RECT:\n      roundedRectBkg(bkgElem, node);\n      break;\n\n    case nodeType.RECT:\n      rectBkg(bkgElem, node);\n      break;\n\n    case nodeType.CIRCLE:\n      bkgElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + +node.height / 2 + \")\");\n      circleBkg(bkgElem, node);\n      break;\n\n    case nodeType.CLOUD:\n      cloudBkg(bkgElem, node);\n      break;\n\n    case nodeType.BANG:\n      bangBkg(bkgElem, node);\n      break;\n\n    case nodeType.HEXAGON:\n      hexagonBkg(bkgElem, node);\n      break;\n  }\n\n  setElementForId(node.id, nodeElem);\n  return node.height;\n};\n\nvar drawEdge = function drawEdge2(edgesElem, mindmap, parent, depth, fullSection) {\n  var section = fullSection % (MAX_SECTIONS - 1);\n  var sx = parent.x + parent.width / 2;\n  var sy = parent.y + parent.height / 2;\n  var ex = mindmap.x + mindmap.width / 2;\n  var ey = mindmap.y + mindmap.height / 2;\n  var mx = ex > sx ? sx + Math.abs(sx - ex) / 2 : sx - Math.abs(sx - ex) / 2;\n  var my = ey > sy ? sy + Math.abs(sy - ey) / 2 : sy - Math.abs(sy - ey) / 2;\n  var qx = ex > sx ? Math.abs(sx - mx) / 2 + sx : -Math.abs(sx - mx) / 2 + sx;\n  var qy = ey > sy ? Math.abs(sy - my) / 2 + sy : -Math.abs(sy - my) / 2 + sy;\n  edgesElem.append(\"path\").attr(\"d\", parent.direction === \"TB\" || parent.direction === \"BT\" ? \"M\".concat(sx, \",\").concat(sy, \" Q\").concat(sx, \",\").concat(qy, \" \").concat(mx, \",\").concat(my, \" T\").concat(ex, \",\").concat(ey) : \"M\".concat(sx, \",\").concat(sy, \" Q\").concat(qx, \",\").concat(sy, \" \").concat(mx, \",\").concat(my, \" T\").concat(ex, \",\").concat(ey)).attr(\"class\", \"edge section-edge-\" + section + \" edge-depth-\" + depth);\n};\n\nvar positionNode = function positionNode(node) {\n  var nodeElem = getElementById(node.id);\n  var x = node.x || 0;\n  var y = node.y || 0;\n  nodeElem.attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n};\n\nvar svgDraw = {\n  drawNode: drawNode,\n  positionNode: positionNode,\n  drawEdge: drawEdge\n};\ncytoscape.use(coseBilkent);\n\nfunction drawNodes(svg, mindmap, section, conf) {\n  svgDraw.drawNode(svg, mindmap, section, conf);\n\n  if (mindmap.children) {\n    mindmap.children.forEach(function (child, index) {\n      drawNodes(svg, child, section < 0 ? index : section, conf);\n    });\n  }\n}\n\nfunction drawEdges(edgesEl, cy) {\n  cy.edges().map(function (edge, id) {\n    var data = edge.data();\n\n    if (edge[0]._private.bodyBounds) {\n      var bounds = edge[0]._private.rscratch;\n      log.trace(\"Edge: \", id, data);\n      edgesEl.insert(\"path\").attr(\"d\", \"M \".concat(bounds.startX, \",\").concat(bounds.startY, \" L \").concat(bounds.midX, \",\").concat(bounds.midY, \" L\").concat(bounds.endX, \",\").concat(bounds.endY, \" \")).attr(\"class\", \"edge section-edge-\" + data.section + \" edge-depth-\" + data.depth);\n    }\n  });\n}\n\nfunction addNodes(mindmap, cy, conf, level) {\n  cy.add({\n    group: \"nodes\",\n    data: {\n      id: mindmap.id,\n      labelText: mindmap.descr,\n      height: mindmap.height,\n      width: mindmap.width,\n      level: level,\n      nodeId: mindmap.id,\n      padding: mindmap.padding,\n      type: mindmap.type\n    },\n    position: {\n      x: mindmap.x,\n      y: mindmap.y\n    }\n  });\n\n  if (mindmap.children) {\n    mindmap.children.forEach(function (child) {\n      addNodes(child, cy, conf, level + 1);\n      cy.add({\n        group: \"edges\",\n        data: {\n          id: \"\".concat(mindmap.id, \"_\").concat(child.id),\n          source: mindmap.id,\n          target: child.id,\n          depth: level,\n          section: child.section\n        }\n      });\n    });\n  }\n}\n\nfunction layoutMindmap(node, conf) {\n  return new Promise(function (resolve) {\n    var renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    var cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      // container to render in\n      style: [{\n        selector: \"edge\",\n        style: {\n          \"curve-style\": \"bezier\"\n        }\n      }]\n    });\n    renderEl.remove();\n    addNodes(node, cy, conf, 0);\n    cy.nodes().forEach(function (n) {\n      n.layoutDimensions = function () {\n        var data = n.data();\n        return {\n          w: data.width,\n          h: data.height\n        };\n      };\n    });\n    cy.layout({\n      name: \"cose-bilkent\",\n      quality: \"proof\",\n      // headless: true,\n      styleEnabled: false,\n      animate: false\n    }).run();\n    cy.ready(function (e) {\n      log.info(\"Ready\", e);\n      resolve(cy);\n    });\n  });\n}\n\nfunction positionNodes(cy) {\n  cy.nodes().map(function (node, id) {\n    var data = node.data();\n    data.x = node.position().x;\n    data.y = node.position().y;\n    svgDraw.positionNode(data);\n    var el = getElementById(data.nodeId);\n    log.info(\"Id:\", id, \"Position: (\", node.position().x, \", \", node.position().y, \")\", data);\n    el.attr(\"transform\", \"translate(\".concat(node.position().x - data.width / 2, \", \").concat(node.position().y - data.height / 2, \")\"));\n    el.attr(\"attr\", \"apa-\".concat(id, \")\"));\n  });\n}\n\nvar draw = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(text, id, version, diagObj) {\n    var conf, securityLevel, sandboxElement, root, svg, mm, edgesElem, nodesElem, cy;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            conf = getConfig();\n            conf.htmlLabels = false;\n            diagObj.db.clear();\n            diagObj.parser.parse(text);\n            log.debug(\"Rendering mindmap diagram\\n\" + text, diagObj.parser);\n            securityLevel = getConfig().securityLevel;\n\n            if (securityLevel === \"sandbox\") {\n              sandboxElement = select(\"#i\" + id);\n            }\n\n            root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n            svg = root.select(\"#\" + id);\n            svg.append(\"g\");\n            mm = diagObj.db.getMindmap();\n            edgesElem = svg.append(\"g\");\n            edgesElem.attr(\"class\", \"mindmap-edges\");\n            nodesElem = svg.append(\"g\");\n            nodesElem.attr(\"class\", \"mindmap-nodes\");\n            drawNodes(nodesElem, mm, -1, conf);\n            _context.next = 18;\n            return layoutMindmap(mm, conf);\n\n          case 18:\n            cy = _context.sent;\n            drawEdges(edgesElem, cy);\n            positionNodes(cy);\n            setupGraphViewbox(void 0, svg, conf.mindmap.padding, conf.mindmap.useMaxWidth);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function draw(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar mindmapRenderer = {\n  draw: draw\n};\n\nvar genSections = function genSections(options) {\n  var sections = \"\";\n\n  for (var i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n\n  for (var _i = 0; _i < options.THEME_COLOR_LIMIT; _i++) {\n    var sw = \"\" + (17 - 3 * _i);\n    sections += \"\\n    .section-\".concat(_i - 1, \" rect, .section-\").concat(_i - 1, \" path, .section-\").concat(_i - 1, \" circle, .section-\").concat(_i - 1, \" polygon, .section-\").concat(_i - 1, \" path  {\\n      fill: \").concat(options[\"cScale\" + _i], \";\\n    }\\n    .section-\").concat(_i - 1, \" text {\\n     fill: \").concat(options[\"cScaleLabel\" + _i], \";\\n    }\\n    .node-icon-\").concat(_i - 1, \" {\\n      font-size: 40px;\\n      color: \").concat(options[\"cScaleLabel\" + _i], \";\\n    }\\n    .section-edge-\").concat(_i - 1, \"{\\n      stroke: \").concat(options[\"cScale\" + _i], \";\\n    }\\n    .edge-depth-\").concat(_i - 1, \"{\\n      stroke-width: \").concat(sw, \";\\n    }\\n    .section-\").concat(_i - 1, \" line {\\n      stroke: \").concat(options[\"cScaleInv\" + _i], \" ;\\n      stroke-width: 3;\\n    }\\n\\n    .disabled, .disabled circle, .disabled text {\\n      fill: lightgray;\\n    }\\n    .disabled text {\\n      fill: #efefef;\\n    }\\n    \");\n  }\n\n  return sections;\n};\n\nvar getStyles = function getStyles(options) {\n  return \"\\n  .edge {\\n    stroke-width: 3;\\n  }\\n  \".concat(genSections(options), \"\\n  .section-root rect, .section-root path, .section-root circle, .section-root polygon  {\\n    fill: \").concat(options.git0, \";\\n  }\\n  .section-root text {\\n    fill: \").concat(options.gitBranchLabel0, \";\\n  }\\n  .icon-container {\\n    height:100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n  .edge {\\n    fill: none;\\n  }\\n  .mindmap-node-label {\\n    dy: 1em;\\n    alignment-baseline: middle;\\n    text-anchor: middle;\\n    dominant-baseline: middle;\\n    text-align: center;\\n  }\\n\");\n};\n\nvar mindmapStyles = getStyles;\nvar diagram = {\n  db: mindmapDb,\n  renderer: mindmapRenderer,\n  parser: mindmapParser,\n  styles: mindmapStyles\n};\nexport { diagram };"],"names":["factory","__WEBPACK_EXTERNAL_MODULE_0__","modules","installedModules","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","FDLayoutConstants","CoSEConstants","prop","DEFAULT_USE_MULTI_LEVEL_SCALING","DEFAULT_RADIAL_SEPARATION","DEFAULT_EDGE_LENGTH","DEFAULT_COMPONENT_SEPERATION","TILE","TILING_PADDING_VERTICAL","TILING_PADDING_HORIZONTAL","TREE_REDUCTION_ON_INCREMENTAL","FDLayoutEdge","CoSEEdge","source","target","vEdge","this","create","LGraph","CoSEGraph","parent","graphMgr","vGraph","LGraphManager","CoSEGraphManager","layout","FDLayoutNode","IMath","CoSENode","gm","loc","size","vNode","move","graphManager","getLayout","displacementX","coolingFactor","springForceX","repulsionForceX","gravitationForceX","noOfChildren","displacementY","springForceY","repulsionForceY","gravitationForceY","Math","abs","maxNodeDisplacement","sign","child","getNodes","length","moveBy","propogateDisplacementToChildren","totalDisplacement","dX","dY","node","nodes","getChild","setPred1","pred1","getPred1","getPred2","pred2","setNext","next","getNext","setProcessed","processed","isProcessed","FDLayout","LayoutConstants","Point","PointD","Layout","Integer","IGeometry","Transform","CoSELayout","toBeTiled","newGraphManager","newGraph","newNode","newEdge","initParameters","arguments","isSubLayout","idealEdgeLength","useSmartIdealEdgeLengthCalculation","DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION","springConstant","DEFAULT_SPRING_STRENGTH","repulsionConstant","DEFAULT_REPULSION_STRENGTH","gravityConstant","DEFAULT_GRAVITY_STRENGTH","compoundGravityConstant","DEFAULT_COMPOUND_GRAVITY_STRENGTH","gravityRangeFactor","DEFAULT_GRAVITY_RANGE_FACTOR","compoundGravityRangeFactor","DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR","prunedNodesAll","growTreeIterations","afterGrowthIterations","isTreeGrowing","isGrowthFinished","coolingCycle","maxCoolingCycle","maxIterations","CONVERGENCE_CHECK_PERIOD","finalTemperature","coolingAdjuster","DEFAULT_CREATE_BENDS_AS_NEEDED","createBendpoints","resetAllEdges","level","classicLayout","nodesWithGravity","calculateNodesToApplyGravitationTo","setAllNodesToApplyGravitation","calcNoOfChildrenForAllNodes","calcLowestCommonAncestors","calcInclusionTreeDepths","getRoot","calcEstimatedSize","calcIdealEdgeLengths","incremental","reduceTrees","resetAllNodesToApplyGravitation","allNodes","Set","getAllNodes","intersection","filter","x","has","forest","getFlatForest","positionNodesRadially","positionNodesRandomly","initSpringEmbedder","runSpringEmbedder","tick","totalIterations","isConverged","layoutQuality","max","initialCoolingFactor","pow","log","animationPeriod","ceil","initialAnimationPeriod","sqrt","updateBounds","updateGrid","growTree","DEFAULT_COOLING_FACTOR_INCREMENTAL","gridUpdateAllowed","forceToNodeSurroundingUpdate","calcSpringForces","calcRepulsionForces","calcGravitationalForces","moveNodes","animate","getPositionsData","pData","rect","id","getCenterX","y","getCenterY","w","width","h","height","layoutEnded","ANIMATE","emit","graph","nodeList","graphs","getGraphs","updateConnected","isConnected","concat","edges","getAllEdges","visited","edge","getSource","getTarget","getBendpoints","push","createDummyNodesForBendpoints","add","edgeList","getEdgeListToNode","k","multiEdge","forEach","currentStartingPoint","numberOfColumns","currentY","currentX","point","tree","centerNode","findCenterOfTree","radialLayout","floor","transform","WORLD_CENTER_X","WORLD_CENTER_Y","startingPoint","radialSep","maxDiagonalInTree","branchRadialLayout","bounds","calculateBounds","setDeviceOrgX","getMinX","setDeviceOrgY","getMinY","setWorldOrgX","setWorldOrgY","bottomRight","getMaxX","getMaxY","inverseTransformPoint","parentOfNode","startAngle","endAngle","distance","radialSeparation","halfInterval","teta","TWO_PI","x_","cos","y_","sin","setCenter","neighborEdges","childCount","getEdges","startIndex","branchCount","incEdgesCount","getEdgesBetween","temp","splice","index","indexOf","stepAngle","currentNeighbor","getOtherEnd","childStartAngle","childEndAngle","maxDiagonal","MIN_VALUE","diagonal","getDiagonal","calcRepulsionRange","groupZeroDegreeMembers","self","tempMemberGroups","memberGroups","idToDummyNode","zeroDegree","getParent","getNodeDegreeWithChildren","undefined","getToBeTiled","p_id","keys","dummyCompoundId","dummyCompound","paddingLeft","paddingRight","paddingBottom","paddingTop","dummyParentGraph","getGraphManager","parentGraph","remove","clearCompounds","childGraphMap","idToNode","performDFSOnCompounds","compoundOrder","resetAllNodes","tileCompoundMembers","clearZeroDegreeMembers","tiledZeroDegreePack","compoundNode","tileNodes","repopulateCompounds","lCompoundNode","horizontalMargin","verticalMargin","adjustLocations","tiledMemberPack","repopulateZeroDegreeMembers","tiledPack","childGraph","children","theChild","getNodeDegree","degree","fillCompexOrderByDFS","organization","compoundHorizontalMargin","compoundVerticalMargin","left","rows","row","maxHeight","j","lnode","horizontalPadding","verticalPadding","minWidth","rowWidth","rowHeight","sort","n1","n2","lNode","insertNodeToRow","canAddHorizontal","getShortestRowIndex","shiftToLastRow","rowIndex","minCompoundSize","extraHeight","r","min","Number","MAX_VALUE","getLongestRowIndex","extraWidth","sri","add_to_row_ratio","add_new_row_ratio","hDiff","longest","last","diff","instance","prevTotal","finalTotal","tilingPreLayout","tilingPostLayout","containsLeaf","prunedNodesInStepTemp","isInterGraph","getOwner","prunedNodesInStep","nodeData","findPlaceforPrunedNode","gridForPrunedNode","nodeToConnect","prunedNode","startGridX","startX","finishGridX","finishX","startGridY","startY","finishGridY","finishY","controlRegions","grid","minCount","minIndex","random","getHeight","getWidth","coseBase","layoutBase","DimensionD","defaults","ready","stop","quality","nodeDimensionsIncludeLabels","refresh","fit","padding","randomize","nodeRepulsion","edgeElasticity","nestingFactor","gravity","numIter","tile","animationDuration","tilingPaddingVertical","tilingPaddingHorizontal","gravityRangeCompound","gravityCompound","gravityRange","initialEnergyOnIncremental","_CoSELayout","_options","options","obj","extend","getUserOptions","PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR","MAX_ITERATIONS","QUALITY","NODE_DIMENSIONS_INCLUDE_LABELS","DEFAULT_INCREMENTAL","run","frameId","idToLNode","stopped","cy","trigger","type","eles","root","addRoot","processChildrenList","getTopMostNodes","sourceNode","data","targetNode","getPositions","ele","theId","getRect","iterateAnimated","isDone","afterReposition","one","ticksPerFrame","checkLayoutSuccess","doPostLayout","isLayoutFinished","positions","cancelAnimationFrame","animationData","isParent","pNode","position","requestAnimationFrame","addListener","runLayout","not","layoutPositions","nodesMap","roots","theNode","theNewGraph","children_of_children","dimensions","layoutDimensions","outerWidth","outerHeight","parseFloat","parseInt","css","labelWidth","boundingBox","includeLabels","includeNodes","labelHeight","labelPos","isNaN","register","cytoscape","__webpack_require__","DEFAULT_ANIMATION_ON_LAYOUT","DEFAULT_ANIMATION_DURING_LAYOUT","DEFAULT_ANIMATION_PERIOD","DEFAULT_UNIFORM_LEAF_NODE_SIZES","DEFAULT_GRAPH_MARGIN","SIMPLE_NODE_SIZE","SIMPLE_NODE_HALF_SIZE","EMPTY_COMPOUND_NODE_SIZE","MIN_EDGE_LENGTH","WORLD_BOUNDARY","INITIAL_WORLD_BOUNDARY","LGraphObject","LEdge","isOverlapingSourceAndTarget","vGraphObject","bendpoints","getLength","getLca","lca","getSourceInLca","sourceInLca","getTargetInLca","targetInLca","getOtherEndInGraph","otherEnd","updateLength","clipPointCoordinates","Array","getIntersection","lengthX","lengthY","updateLengthSimple","RectangleD","RandomSeed","LNode","estimatedSize","inclusionTreeDepth","owner","setWidth","setHeight","getCenter","getLocation","getHalfTheDiagonal","setRect","upperLeft","dimension","cx","setLocation","dx","dy","to","other","getNeighborsList","neighbors","withChildren","withNeighborsList","getNoOfChildren","getEstimatedSize","scatter","randomCenterX","randomCenterY","minX","maxX","nextDouble","minY","maxY","getLeft","getTop","getRight","getBottom","getInclusionTreeDepth","trans","top","leftTop","vLeftTop","getX","getY","setX","setY","getDifference","pt","getCopy","translate","dim","LinkedList","obj2","margin","right","bottom","obj1","edgesToBeRemoved","slice","sourceIndex","targetIndex","updateLeftTop","nodeTop","nodeLeft","recursive","nodeRight","nodeBottom","boundingRect","queue","currentNode","shift","noOfVisitedInThisGraph","visitedNode","ngraph","nnode","setRootGraph","rootGraph","parentNode","sourceGraph","targetGraph","lObj","nodesToBeRemoved","allEdges","allNodesToApplyGravitation","getAllNodesToApplyGravitation","isOneAncestorOfOther","firstNode","secondNode","ownerGraph","sourceAncestorGraph","targetAncestorGraph","calcLowestCommonAncestor","firstOwnerGraph","secondOwnerGraph","depth","includesInvalidEdge","DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION","COOLING_ADAPTATION_FACTOR","ADAPTATION_LOWER_NODE_LIMIT","ADAPTATION_UPPER_NODE_LIMIT","MAX_NODE_DISPLACEMENT_INCREMENTAL","MAX_NODE_DISPLACEMENT","MIN_REPULSION_DIST","GRID_CALCULATION_CHECK_PERIOD","calcSeparationAmount","rectA","rectB","overlapAmount","separationBuffer","intersects","directions","decideDirectionsForOverlappingNodes","slope","moveByY","moveByX","getIntersection2","result","p1x","p1y","p2x","p2y","topLeftAx","topLeftAy","topRightAx","bottomLeftAx","bottomLeftAy","bottomRightAx","halfWidthA","getWidthHalf","halfHeightA","getHeightHalf","topLeftBx","topLeftBy","topRightBx","bottomLeftBx","bottomLeftBy","bottomRightBx","halfWidthB","halfHeightB","clipPointAFound","clipPointBFound","slopeA","slopeB","slopePrime","cardinalDirectionA","cardinalDirectionB","tempPointAx","tempPointAy","tempPointBx","tempPointBy","getCardinalDirection","line","s1","s2","f1","f2","a1","a2","b1","b2","c1","c2","denom","x1","y1","x2","y2","x3","y3","x4","y4","angleOfVector","Cx","Cy","Nx","Ny","C_angle","atan","PI","ONE_AND_HALF_PI","HALF_PI","doIntersect","p1","p2","p3","p4","a","b","q","det","lambda","gamma","THREE_PI","_createClass","defineProperties","props","descriptor","writable","key","Constructor","protoProps","staticProps","nodeFrom","prev","list","head","tail","_remove","vals","_this","TypeError","_classCallCheck","v","val","otherNode","current","constructor","equals","toString","_typeof","Symbol","iterator","UniqueIDGeneretor","lastID","createID","isPrimitive","uniqueID","getString","arg","_toConsumableArray","arr","isArray","arr2","from","Emitter","isRemoteUse","createBendsAsNeeded","animationOnLayout","animationDuringLayout","uniformLeafNodeSizes","edgeToDummyNodes","Map","RANDOM_SEED","isLayoutSuccessfull","update","update2","createBendpointsFromDummyNodes","newLeftTop","flatForest","isForest","isFlat","toBeVisited","parents","unProcessedNodes","set","dummyNodes","dummyNode","Dimension","dummyEdge","lEdge","path","ebp","sliderValue","defaultValue","minDiv","maxMul","removedNodes","remainingDegrees","foundCenter","tempList","tempList2","neighbour","newDegree","setGraphManager","seed","lworldOrgX","lworldOrgY","ldeviceOrgX","ldeviceOrgY","lworldExtX","lworldExtY","ldeviceExtX","ldeviceExtY","getWorldOrgX","wox","getWorldOrgY","woy","getWorldExtX","setWorldExtX","wex","getWorldExtY","setWorldExtY","wey","getDeviceOrgX","dox","getDeviceOrgY","doy","getDeviceExtX","setDeviceExtX","dex","getDeviceExtY","setDeviceExtY","dey","transformX","xDevice","worldExtX","transformY","yDevice","worldExtY","inverseTransformX","xWorld","deviceExtX","inverseTransformY","yWorld","deviceExtY","inPoint","displacementThresholdPerNode","oldTotalDisplacement","notAnimatedIterations","useFRGridVariant","lcaDepth","sizeOfSourceInLca","sizeOfTargetInLca","idealLength","totalDisplacementThreshold","repulsionRange","lEdges","calcSpringForce","nodeA","nodeB","processedNodeSet","lNodes","calculateRepulsionForceOfANode","calcRepulsionForce","calcGravitationalForce","springForce","distanceX","distanceY","distanceSquared","repulsionForce","clipPoints","childrenConstant","ownerCenterX","ownerCenterY","absDistanceX","absDistanceY","converged","oscilating","calcGrid","sizeX","sizeY","addNodeToGrid","setGridCoordinates","surrounding","_startX","_finishX","_startY","_finishY","HashMap","map","put","contains","keySet","HashSet","clear","isEmpty","addAllTo","addAll","Quicksort","A","compareFunction","_defaultCompareFunction","_quicksort","_partition","_get","_swap","get_object_at","set_object_at","_set","NeedlemanWunsch","sequence1","sequence2","match_score","mismatch_penalty","gap_penalty","iMax","jMax","tracebackGrid","_i","_j","alignments","score","computeGrids","_i2","_j2","maxOf","indices","arrayAllMaxIndexes","includes","inProcessAlignments","pos","seq1","seq2","indexes","array","getAllIndexes","apply","listeners","event","callback","removeListener","parser","o2","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","parser2","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","getLogger","info","addNode","descr","decorateNode","icon","class","$","getType","nodeType","DEFAULT","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","stack","tstack","vstack","lstack","TERROR","EOF","args","lexer2","lexer","sharedState","setInput","yylloc","yyloc","ranges","lex","token","pop","getPrototypeOf","symbol","state","action","len","newState","expected","yyval","errStr","showPosition","join","text","match","first_line","last_line","first_column","last_column","range","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","mindmapParser","sanitizeText","g","cnt","elements","NO_BORDER","ROUNDED_RECT","RECT","CIRCLE","CLOUD","BANG","HEXAGON","setElementForId","element","type2Str","getElementById","mindmapDb","freeze","__proto__","conf","nodeId","mindmap","maxNodeWidth","decoration","getMindmap","getNodeById","startStr","endStr","setErrorHandler","handler","toStringTag","svgDraw","elem","fullSection","htmlLabels","section","nodeElem","append","sectionClass","attr","bkgElem","textElem","description","useHtmlLabels","classes","bbox","getBBox","fontSize","orgHeight","heightDiff","_dx","_dy","defaultBkg","roundedRectBkg","rectBkg","circleBkg","r1","r2","r3","r4","cloudBkg","bangBkg","points","insert","insertPolygonShape","hexagonBkg","drawNodes","svg","drawEdges","edgesEl","_private","bodyBounds","rscratch","midX","midY","endX","endY","addNodes","group","labelText","layoutMindmap","Promise","resolve","renderEl","container","document","style","selector","styleEnabled","e","positionNodes","el","draw","_ref","_callee","version","diagObj","securityLevel","sandboxElement","mm","edgesElem","nodesElem","_context","db","contentDocument","body","select","sent","useMaxWidth","_x","_x2","_x3","_x4","diagram","renderer","styles","sections","THEME_COLOR_LIMIT","sw","genSections","git0","gitBranchLabel0"],"sourceRoot":""}