{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/Toc.js","webpack:///./src/components/Actions/TocLists.tsx","webpack:///./src/components/Actions/Toc.tsx"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","toc","linkOnClick","TocWrapper","H1","type","items","map","h1","Fragment","to","url","key","onClick","title","H2","h2","H3","h3","styled","div","theme","main","colors","ol","base","accent","props","mediaQueryTresholds","M","subTitle","useSelector","state","currentPost","mdx","tableOfContents","frontmatter","useState","open","setOpen","scroll","setScroll","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","scrollType","descriptionElementRef","React","useRef","useEffect","descriptionElement","current","focus","IconButton","aria-label","data-shape","className","StyledDialog","onClose","aria-labelledby","aria-describedby","maxWidth","TocTitle","id","disableTypography","DialogContent","dividers","DialogContentText","ref","tabIndex","TocLists","DialogActions","Button","color","DialogTitle","palette","second","Dialog","search","background"],"mappings":"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","file":"13-a2c447926c32cca4c02b.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z\"\n}), 'Toc');\n\nexports.default = _default;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\ntype TocProps = {\n  toc: {\n    items?: object[];\n  };\n  linkOnClick: () => void;\n};\n\nexport default ({ toc, linkOnClick }: TocProps) => {\n  return (\n    <TocWrapper>\n      <h1>Table of contents</h1>\n      <H1 type=\"I\">\n        {toc &&\n          toc.items &&\n          toc.items.map((h1: any) => (\n            <React.Fragment>\n              <Link to={h1.url} key={h1.url} onClick={linkOnClick}>\n                <li key={h1.url}>{h1.title}</li>\n              </Link>\n              <H2>\n                {h1.items &&\n                  h1.items.map((h2: any) => (\n                    <React.Fragment>\n                      <Link to={h2.url} key={h2.url} onClick={linkOnClick}>\n                        <li key={h2.url}>{h2.title}</li>\n                      </Link>\n                      <H3 type=\"i\">\n                        {h2.items &&\n                          h2.items.map((h3: any) => (\n                            <Link\n                              to={h3.url}\n                              key={h3.url}\n                              onClick={linkOnClick}\n                            >\n                              <li key={h3.url}>{h3.title}</li>\n                            </Link>\n                          ))}\n                      </H3>\n                    </React.Fragment>\n                  ))}\n              </H2>\n            </React.Fragment>\n          ))}\n      </H1>\n    </TocWrapper>\n  );\n};\n\nconst TocWrapper = styled.div`\n  font-size: 1.4em;\n\n  a {\n    text-decoration: none;\n  }\n\n  h1 {\n    font-size: 1.5em;\n    text-align: center;\n    color: ${({ theme }) => theme.main.colors.title};\n  }\n`;\n\nconst H1 = styled.ol`\n  li {\n    margin: 0.6em 0;\n  }\n  a {\n    font-weight: 600;\n    color: ${({ theme }) => theme.base.colors.accent};\n  }\n`;\nconst H2 = styled.ol`\n  padding-left: 1em;\n  li {\n    margin: 0.3em 0;\n  }\n  a {\n    font-weight: 600;\n    color: ${({ theme }) => theme.main.colors.title};\n  }\n\n  @media (min-width: ${props => props.theme.mediaQueryTresholds.M}px) {\n    padding-left: 2em;\n  }\n`;\nconst H3 = styled.ol`\n  padding-left: 1em;\n  li {\n    margin: 0.1em 0;\n  }\n  a {\n    font-weight: 400;\n    color: ${({ theme }) => theme.main.colors.subTitle};\n  }\n\n  @media (min-width: ${props => props.theme.mediaQueryTresholds.M}px) {\n    padding-left: 2em;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TocIcon from \"@material-ui/icons/Toc\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport TocLists from \"./TocLists\";\nimport { ReduxState } from \"../../state/store\";\nimport { PostTemplateProps } from \"../../templates/PostTemplate\";\n\nexport default () => {\n  const {\n    mdx: {\n      tableOfContents,\n      frontmatter: { title }\n    }\n  } = useSelector<ReduxState, PostTemplateProps>(state => state.currentPost);\n\n  const [open, setOpen] = useState(false);\n  const [scroll, setScroll] = useState<\"paper\" | \"body\" | undefined>(\"paper\");\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const handleClickOpen = (scrollType: \"paper\" | \"body\" | undefined) => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  const descriptionElementRef = React.useRef(null);\n\n  useEffect(() => {\n    if (open) {\n      const { current: descriptionElement }: any = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"Search\"\n        onClick={handleClickOpen(\"paper\")}\n        data-shape=\"closed\"\n        title=\"Search\"\n        className=\"iconButton\"\n      >\n        <TocIcon />\n      </IconButton>\n      <StyledDialog\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n        fullScreen={fullScreen}\n        maxWidth=\"md\"\n      >\n        <TocTitle id=\"scroll-dialog-title\" disableTypography>\n          {title}\n        </TocTitle>\n        <DialogContent dividers={scroll === \"paper\"}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            <TocLists toc={tableOfContents} linkOnClick={handleClose} />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </StyledDialog>\n    </div>\n  );\n};\n\nconst TocTitle = styled(DialogTitle)`\n  font-size: 2em;\n  font-weight: 600;\n  text-align: center;\n  color: ${({ theme }) => theme.base.colors.palette.second};\n`;\n\nconst StyledDialog = styled(Dialog)`\n  .MuiDialog-paperFullWidth {\n    background-color: ${props => props.theme.search.colors.background};\n  }\n`;\n"],"sourceRoot":""}